"use strict";(self.webpackChunkelder_books_fe=self.webpackChunkelder_books_fe||[]).push([[2639],{2639:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval('// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  "default": () => (/* binding */ CreateAdvertisment_BasicData)\n});\n\n// EXTERNAL MODULE: ./node_modules/@mui/material/Alert/Alert.js + 1 modules\nvar Alert = __webpack_require__(2635);\n// EXTERNAL MODULE: ./node_modules/@mui/material/Box/Box.js\nvar Box = __webpack_require__(8196);\n// EXTERNAL MODULE: ./node_modules/@mui/material/Fade/Fade.js\nvar Fade = __webpack_require__(9803);\n// EXTERNAL MODULE: ./node_modules/@mui/material/Snackbar/Snackbar.js + 3 modules\nvar Snackbar = __webpack_require__(4434);\n// EXTERNAL MODULE: ./node_modules/@mui/material/Stack/Stack.js\nvar Stack = __webpack_require__(5553);\n// EXTERNAL MODULE: ./node_modules/@mui/material/Typography/Typography.js + 1 modules\nvar Typography = __webpack_require__(6877);\n// EXTERNAL MODULE: ./node_modules/react/index.js\nvar react = __webpack_require__(5466);\n// EXTERNAL MODULE: ./src/Components/UI/Inputs/CreateAdInputs/BaseAdInput.jsx\nvar BaseAdInput = __webpack_require__(7764);\n// EXTERNAL MODULE: ./node_modules/@mui/material/CssBaseline/CssBaseline.js\nvar CssBaseline = __webpack_require__(4589);\n// EXTERNAL MODULE: ./node_modules/@mui/material/FormControl/FormControl.js + 1 modules\nvar FormControl = __webpack_require__(4321);\n// EXTERNAL MODULE: ./node_modules/@mui/material/FormHelperText/FormHelperText.js + 1 modules\nvar FormHelperText = __webpack_require__(8396);\n// EXTERNAL MODULE: ./node_modules/@mui/material/MenuItem/MenuItem.js + 1 modules\nvar MenuItem = __webpack_require__(5247);\n// EXTERNAL MODULE: ./node_modules/@mui/material/TextField/TextField.js + 1 modules\nvar TextField = __webpack_require__(8338);\n// EXTERNAL MODULE: ./node_modules/@mui/material/styles/ThemeProvider.js\nvar ThemeProvider = __webpack_require__(2033);\n// EXTERNAL MODULE: ./node_modules/@mui/material/styles/createTheme.js + 6 modules\nvar createTheme = __webpack_require__(1334);\n// EXTERNAL MODULE: ./src/Utils/Constants.js\nvar Constants = __webpack_require__(576);\n// EXTERNAL MODULE: ./src/fonts/Golos-UI_Regular.ttf\nvar Golos_UI_Regular = __webpack_require__(2028);\n// EXTERNAL MODULE: ./src/fonts/Golos-UI_Bold.ttf\nvar Golos_UI_Bold = __webpack_require__(3540);\n// EXTERNAL MODULE: ./node_modules/@mui/material/OutlinedInput/outlinedInputClasses.js\nvar outlinedInputClasses = __webpack_require__(139);\n// EXTERNAL MODULE: ./node_modules/@mui/icons-material/ExpandMore.js\nvar ExpandMore = __webpack_require__(1545);\n// EXTERNAL MODULE: ./node_modules/react-redux/es/index.js + 21 modules\nvar es = __webpack_require__(4641);\n;// CONCATENATED MODULE: ./src/Components/UI/Inputs/CreateAdInputs/AdCategorySelect.jsx\nvar _root;\nfunction _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _iterableToArrayLimit(r, l) { var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar theme = (0,createTheme/* default */.Z)({\n  typography: {\n    inputLabel: {\n      fontSize: "16px",\n      color: "".concat(Constants/* palette */.DG.light),\n      fontFamily: ["Golos UI Bold", "Roboto", "sans-serif"].join(", "),\n      lineHeight: "normal"\n    },\n    label: {\n      fontSize: "16px",\n      color: "#000",\n      fontFamily: ["Golos UI", "Roboto", "sans-serif"].join(", "),\n      lineHeight: "normal"\n    }\n  },\n  components: {\n    MuiOutlinedInput: {\n      styleOverrides: {\n        notchedOutline: {\n          borderRadius: "10px",\n          border: "2px solid ".concat(Constants/* palette */.DG.gray300),\n          transition: "border 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms"\n        },\n        root: (_root = {\n          borderRadius: "10px",\n          fontSize: "16px",\n          width: "100%"\n        }, _defineProperty(_root, "&:hover .".concat(outlinedInputClasses/* default */.Z.notchedOutline), {\n          borderColor: "".concat(Constants/* palette */.DG.light)\n        }), _defineProperty(_root, "fontSize", "16px"), _defineProperty(_root, "&.Mui-focused .".concat(outlinedInputClasses/* default */.Z.notchedOutline), {\n          borderColor: "".concat(Constants/* palette */.DG.active)\n        }), _defineProperty(_root, "&.Mui-disabled", {\n          backgroundColor: "".concat(Constants/* palette */.DG.gray100),\n          color: "".concat(Constants/* palette */.DG.light),\n          WebKitTextFillColor: "".concat(Constants/* palette */.DG.light),\n          borderColor: "".concat(Constants/* palette */.DG.gray300)\n        }), _defineProperty(_root, "&.Mui-disabled .".concat(outlinedInputClasses/* default */.Z.notchedOutline), {\n          borderColor: "".concat(Constants/* palette */.DG.gray300)\n        }), _root),\n        input: {\n          padding: "12px",\n          fontSize: "16px",\n          color: "".concat(Constants/* palette */.DG.basic),\n          height: "18px"\n        }\n      }\n    },\n    MuiInputBase: {\n      styleOverrides: {\n        root: {\n          fontSize: "16px",\n          fontFamily: "Golos UI, Roboto, sans-serif"\n        }\n      }\n    },\n    MuiFormControl: {\n      styleOverrides: {\n        root: {\n          position: "relative"\n        }\n      }\n    },\n    MuiFormHelperText: {\n      styleOverrides: {\n        root: {\n          color: "".concat(Constants/* palette */.DG.warning),\n          fontSize: "12px",\n          textAlign: "end",\n          position: "absolute",\n          right: "0",\n          top: "-20px",\n          margin: "0px",\n          fontFamily: "Golos UI"\n        }\n      }\n    },\n    MuiMenuItem: {\n      styleOverrides: {\n        root: {\n          fontSize: "16px"\n        }\n      }\n    },\n    MuiCssBaseline: {\n      styleOverrides: "\\n    @font-face {\\n      font-family: \'Golos UI\';\\n      font-style: normal;\\n      font-display: swap;\\n      font-weight: 400;\\n      src: local(\'Golos UI\'), url(".concat(Golos_UI_Regular, ") format(\'truetype\');\\n      unicodeRange: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, 0400\\u201404FF;\\n    }\\n    * {box-sizing: border-box}\\n    :root {\\n      --basic: ").concat(Constants/* palette */.DG.basic, ";\\n    }\\n    @font-face {\\n      font-family: \'Golos UI Bold\';\\n      font-style: normal;\\n      font-weight: normal;\\n      font-display: swap;\\n      src: local(\'Golos UI Bold\'), \\n      url(").concat(Golos_UI_Bold, ")\\n       format(\'truetype\');\\n      unicodeRange: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, 0400\\u201404FF;\\n    }\\n    * {box-sizing: border-box}\\n    :root {\\n      --basic: ").concat(Constants/* palette */.DG.basic, ";\\n    }\\n    ")\n    }\n  }\n});\nvar values = (/* unused pure expression or super */ null && (["Художественные", "Научно-популярные", "Научные", "Справочные", "Учебные", "Полиграфия"]));\n\n// const styledDropdownIcon = () => {\n//   return <CaretDown size={30} color={palette.basic} />;\n// };\n\nvar AdCategorySelect = function AdCategorySelect(props) {\n  // const [categories, setCategories] = useState(props.categories);\n\n  var categories = (0,es/* useSelector */.v9)(function (store) {\n    return store.categories.categories;\n  });\n  var _useState = (0,react.useState)(categories),\n    _useState2 = _slicedToArray(_useState, 2),\n    stateCategories = _useState2[0],\n    setStateCategories = _useState2[1];\n  var _useState3 = (0,react.useState)(""),\n    _useState4 = _slicedToArray(_useState3, 2),\n    value = _useState4[0],\n    setValue = _useState4[1];\n  return /*#__PURE__*/react.createElement(ThemeProvider/* default */.Z, {\n    theme: theme\n  }, /*#__PURE__*/react.createElement(CssBaseline/* default */.ZP, null), /*#__PURE__*/react.createElement(FormControl/* default */.Z, {\n    variant: "outlined",\n    fullWidth: true\n  }, /*#__PURE__*/react.createElement(Box/* default */.Z, {\n    display: "flex",\n    flexDirection: "row",\n    width: "100%",\n    justifyContent: "space-between",\n    alignItems: "center",\n    maxWidth: "460px"\n  }, /*#__PURE__*/react.createElement(Typography/* default */.Z, {\n    variant: "label",\n    sx: {\n      color: "#000",\n      width: "140px",\n      paddingRight: "5px"\n    }\n  }, props.label), /*#__PURE__*/react.createElement(Stack/* default */.Z, {\n    position: "relative",\n    maxWidth: "320px",\n    width: "100%"\n  }, /*#__PURE__*/react.createElement(FormHelperText/* default */.Z, null, props.error ? props.helperText : null), /*#__PURE__*/react.createElement(TextField/* default */.Z, {\n    variant: "outlined",\n    label: props.text,\n    select: true,\n    SelectProps: {\n      IconComponent: ExpandMore/* default */.Z\n    },\n    name: props.name\n    // value={props.value.title}\n    ,\n    value: value,\n    id: props.id,\n    fullWidth: true,\n    sx: {\n      maxWidth: "320px"\n    },\n    onChange: function onChange(event) {\n      props.formik.setFieldValue("".concat(props.name), {\n        id: event.target.value.id,\n        title: event.target.value.title\n      });\n      setValue(event.target.value);\n    },\n    onBlur: props.onBlur\n  }, categories.map(function (item, index) {\n    return /*#__PURE__*/react.createElement(MenuItem/* default */.Z, {\n      key: item.id,\n      value: item\n    }, item.title);\n  }))))));\n};\n/* harmony default export */ const CreateAdInputs_AdCategorySelect = (AdCategorySelect);\n// EXTERNAL MODULE: ./node_modules/@mui/material/Checkbox/Checkbox.js + 1 modules\nvar Checkbox = __webpack_require__(5684);\n// EXTERNAL MODULE: ./node_modules/@mui/material/FormControlLabel/FormControlLabel.js + 1 modules\nvar FormControlLabel = __webpack_require__(4978);\n// EXTERNAL MODULE: ./node_modules/@mui/material/OutlinedInput/OutlinedInput.js + 1 modules\nvar OutlinedInput = __webpack_require__(4995);\n// EXTERNAL MODULE: ./src/Components/UI/Buttons/SimpleButton.jsx\nvar SimpleButton = __webpack_require__(8164);\n// EXTERNAL MODULE: ./node_modules/react-transition-group/esm/TransitionGroup.js + 1 modules\nvar TransitionGroup = __webpack_require__(8874);\n;// CONCATENATED MODULE: ./src/Components/UI/Inputs/CreateAdInputs/AuthorInput.jsx\n/* provided dependency */ var console = __webpack_require__(1283);\nvar AuthorInput_root;\nfunction AuthorInput_typeof(o) { "@babel/helpers - typeof"; return AuthorInput_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, AuthorInput_typeof(o); }\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || AuthorInput_unsupportedIterableToArray(arr) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\nfunction _iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return AuthorInput_arrayLikeToArray(arr); }\nfunction AuthorInput_slicedToArray(arr, i) { return AuthorInput_arrayWithHoles(arr) || AuthorInput_iterableToArrayLimit(arr, i) || AuthorInput_unsupportedIterableToArray(arr, i) || AuthorInput_nonIterableRest(); }\nfunction AuthorInput_nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\nfunction AuthorInput_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return AuthorInput_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return AuthorInput_arrayLikeToArray(o, minLen); }\nfunction AuthorInput_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction AuthorInput_iterableToArrayLimit(r, l) { var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction AuthorInput_arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\nfunction AuthorInput_defineProperty(obj, key, value) { key = AuthorInput_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction AuthorInput_toPropertyKey(arg) { var key = AuthorInput_toPrimitive(arg, "string"); return AuthorInput_typeof(key) === "symbol" ? key : String(key); }\nfunction AuthorInput_toPrimitive(input, hint) { if (AuthorInput_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (AuthorInput_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar AuthorInput_theme = (0,createTheme/* default */.Z)({\n  palette: {\n    primary: {\n      main: "".concat(Constants/* palette */.DG.basic),\n      light: "".concat(Constants/* palette */.DG.light),\n      dark: "#004c8f",\n      contrastText: "#fff"\n    }\n  },\n  typography: {\n    inputLabel: {\n      fontSize: "16px",\n      color: "".concat(Constants/* palette */.DG.light),\n      fontFamily: ["Golos UI Bold", "Roboto", "sans-serif"].join(", "),\n      lineHeight: "normal"\n    },\n    label: {\n      fontSize: "16px",\n      color: "#000",\n      fontFamily: ["Golos UI", "Roboto", "sans-serif"].join(", "),\n      lineHeight: "normal"\n    }\n  },\n  components: {\n    MuiOutlinedInput: {\n      styleOverrides: {\n        notchedOutline: {\n          borderRadius: "10px",\n          border: "2px solid ".concat(Constants/* palette */.DG.gray300),\n          transition: "border 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms"\n        },\n        root: (AuthorInput_root = {\n          borderRadius: "10px",\n          fontSize: "16px",\n          width: "100%"\n        }, AuthorInput_defineProperty(AuthorInput_root, "&:hover .".concat(outlinedInputClasses/* default */.Z.notchedOutline), {\n          borderColor: "".concat(Constants/* palette */.DG.light)\n        }), AuthorInput_defineProperty(AuthorInput_root, "fontSize", "16px"), AuthorInput_defineProperty(AuthorInput_root, "&.Mui-focused .".concat(outlinedInputClasses/* default */.Z.notchedOutline), {\n          borderColor: "".concat(Constants/* palette */.DG.active)\n        }), AuthorInput_defineProperty(AuthorInput_root, "&.Mui-disabled", {\n          backgroundColor: "".concat(Constants/* palette */.DG.gray100),\n          color: "".concat(Constants/* palette */.DG.light),\n          WebKitTextFillColor: "".concat(Constants/* palette */.DG.light),\n          borderColor: "".concat(Constants/* palette */.DG.gray300)\n        }), AuthorInput_defineProperty(AuthorInput_root, "&.Mui-disabled .".concat(outlinedInputClasses/* default */.Z.notchedOutline), {\n          borderColor: "".concat(Constants/* palette */.DG.gray300)\n        }), AuthorInput_root),\n        input: {\n          padding: "12px",\n          fontSize: "16px",\n          color: "".concat(Constants/* palette */.DG.basic),\n          height: "18px"\n        }\n      }\n    },\n    MuiInputBase: {\n      styleOverrides: {\n        root: {\n          fontSize: "16px",\n          fontFamily: "Golos UI, Roboto, sans-serif"\n        }\n      }\n    },\n    MuiFormControl: {\n      styleOverrides: {\n        root: {\n          position: "relative"\n        }\n      }\n    },\n    MuiFormHelperText: {\n      styleOverrides: {\n        root: {\n          color: "".concat(Constants/* palette */.DG.warning),\n          fontSize: "12px",\n          textAlign: "end",\n          position: "absolute",\n          right: "0",\n          top: "-20px",\n          margin: "0px",\n          fontFamily: "Golos UI"\n        }\n      }\n    },\n    MuiFormControlLabel: {\n      styleOverrides: {\n        root: {\n          width: "max-content"\n        },\n        label: {\n          fontFamily: "Golos UI, Roboto, sans-serif",\n          fontSize: "16px",\n          alignSelf: "start"\n        }\n      }\n    },\n    MuiCheckbox: {\n      styleOverrides: {\n        root: {\n          marginTop: "-9px"\n        }\n      }\n    },\n    MuiCssBaseline: {\n      styleOverrides: "\\n    @font-face {\\n      font-family: \'Golos UI\';\\n      font-style: normal;\\n      font-display: swap;\\n      font-weight: 400;\\n      src: local(\'Golos UI\'), url(".concat(Golos_UI_Regular, ") format(\'truetype\');\\n      unicodeRange: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, 0400\\u201404FF;\\n    }\\n    * {box-sizing: border-box}\\n    :root {\\n      --basic: ").concat(Constants/* palette */.DG.basic, ";\\n    }\\n    * {box-sizing: border-box}\\n    :root {\\n      --basic: ").concat(Constants/* palette */.DG.basic, ";\\n    }\\n    ")\n    }\n  }\n});\nvar AuthorInput = function AuthorInput(props) {\n  // const defaultAuthor = { value: "" };\n  var _useState = (0,react.useState)([{\n      value: ""\n    }]),\n    _useState2 = AuthorInput_slicedToArray(_useState, 2),\n    authors = _useState2[0],\n    setAuthors = _useState2[1];\n  // const [authorValue, setAuthorValue] = useState({ value: "" });\n\n  var _useState3 = (0,react.useState)(props.formik.values.author.unknown),\n    _useState4 = AuthorInput_slicedToArray(_useState3, 2),\n    checked = _useState4[0],\n    setChecked = _useState4[1];\n  (0,react.useEffect)(function () {\n    if (checked) {\n      setAuthors([]);\n    }\n  }, []);\n  var handleChange = function handleChange(event, index) {\n    setAuthors([].concat(_toConsumableArray(authors.slice(0, index)), [{\n      value: event.target.value\n    }], _toConsumableArray(authors.slice(index + 1))));\n    var newAuthors = [].concat(_toConsumableArray(authors.slice(0, index)), [{\n      value: event.target.value\n    }], _toConsumableArray(authors.slice(index + 1)));\n    var joinedAuthors = newAuthors.reduce(function (accumulator, item, index, array) {\n      if (index === array.length - 1) {\n        return accumulator + "".concat(item.value);\n      } else if (array.length === 1) {\n        return item.value;\n      } else {\n        return accumulator + "".concat(item.value, ", ");\n      }\n    }, [""]);\n    props.formik.setFieldValue("author.authors", joinedAuthors);\n  };\n  var handleAddAuthor = function handleAddAuthor() {\n    setAuthors([].concat(_toConsumableArray(authors), [{\n      value: ""\n    }]));\n  };\n  var handleDeleteAuthor = function handleDeleteAuthor(index) {\n    setAuthors([].concat(_toConsumableArray(authors.slice(0, index)), _toConsumableArray(authors.slice(index + 1))));\n  };\n  var handleCheckChange = function handleCheckChange(event) {\n    if (event.target.checked) {\n      props.formik.setFieldValue("author.authors", "Автор неизвестен");\n      props.formik.setFieldValue("author.unknown", true);\n      setChecked(event.target.checked);\n      setAuthors([]);\n    } else {\n      props.formik.setFieldTouched("author", false, false);\n      setAuthors([{\n        value: ""\n      }]);\n      props.formik.setFieldValue("author.authors", "");\n      props.formik.setFieldValue("author.unknown", false);\n      setChecked(event.target.checked);\n    }\n  };\n  return /*#__PURE__*/react.createElement(ThemeProvider/* default */.Z, {\n    theme: AuthorInput_theme\n  }, /*#__PURE__*/react.createElement(CssBaseline/* default */.ZP, null), /*#__PURE__*/react.createElement(Box/* default */.Z, {\n    display: "flex",\n    flexDirection: "row",\n    width: "100%"\n  }, /*#__PURE__*/react.createElement(Typography/* default */.Z, {\n    variant: "label",\n    sx: {\n      alignSelf: "start",\n      color: "#000",\n      width: "167px",\n      // +27px к стандартным 140 из-за отрицательного margin у Chekbox\'a\n      paddingRight: "5px"\n    }\n  }, props.label), /*#__PURE__*/react.createElement(Box/* default */.Z, {\n    sx: {\n      alignSelf: "start",\n      display: "flex",\n      flexDirection: "column",\n      width: "100%"\n    }\n  }, /*#__PURE__*/react.createElement(FormControlLabel/* default */.Z, {\n    control: /*#__PURE__*/react.createElement(Checkbox/* default */.Z, {\n      checked: checked,\n      onChange: handleCheckChange\n    }),\n    label: "Автор неизвестен",\n    sx: {\n      mb: "31px"\n    }\n  }), /*#__PURE__*/react.createElement(Stack/* default */.Z, {\n    direction: "column",\n    rowGap: "40px"\n  }, /*#__PURE__*/react.createElement(TransitionGroup/* default */.Z, {\n    style: {\n      display: "flex",\n      flexDirection: "column",\n      rowGap: "40px"\n    }\n  }, authors.map(function (author, index) {\n    if (index === 0) {\n      return /*#__PURE__*/react.createElement(Fade/* default */.Z, {\n        key: author,\n        "in": !checked,\n        timeout: 250,\n        mountOnEnter: true,\n        unmountOnExit: true\n      }, /*#__PURE__*/react.createElement(Stack/* default */.Z, {\n        direction: "row",\n        columnGap: "20px"\n      }, /*#__PURE__*/react.createElement(FormControl/* default */.Z, {\n        fullWidth: true,\n        sx: {\n          maxWidth: "320px"\n        }\n      }, /*#__PURE__*/react.createElement(FormHelperText/* default */.Z, null, props.formik.touched.author && Boolean(props.formik.errors.author) ? props.formik.touched.author && props.formik.errors.author.authors : null), /*#__PURE__*/react.createElement(OutlinedInput/* default */.Z, {\n        id: props.id,\n        name: props.name,\n        value: authors[index].value\n        // onChange={props.onChange}\n        ,\n        onChange: function onChange(event) {\n          return handleChange(event, index);\n        },\n        onBlur: props.onBlur,\n        error: props.formik.touched.author && Boolean(props.formik.errors.author) ? true : false,\n        sx: {\n          maxWidth: "320px"\n        }\n      })), /*#__PURE__*/react.createElement(SimpleButton/* default */.Z, {\n        text: "Добавить автора",\n        width: "150px",\n        handleClick: handleAddAuthor\n      })));\n    } else {\n      return /*#__PURE__*/react.createElement(Fade/* default */.Z, {\n        key: index,\n        "in": !authors.includes(index) && !checked,\n        timeout: 250\n      }, /*#__PURE__*/react.createElement(Stack/* default */.Z, {\n        direction: "row",\n        columnGap: "20px"\n      }, /*#__PURE__*/react.createElement(FormControl/* default */.Z, {\n        fullWidth: true,\n        sx: {\n          maxWidth: "320px"\n        }\n      }, /*#__PURE__*/react.createElement(FormHelperText/* default */.Z, null, props.error ? props.helperText : null), /*#__PURE__*/react.createElement(OutlinedInput/* default */.Z, {\n        id: props.id,\n        name: props.name,\n        value: authors[index].value\n        // onChange={props.onChange}\n        ,\n        onChange: function onChange(event) {\n          return handleChange(event, index);\n        },\n        onBlur: props.onBlur,\n        error: props.error ? true : false,\n        sx: {\n          maxWidth: "320px"\n        }\n      })), /*#__PURE__*/react.createElement(SimpleButton/* default */.Z, {\n        text: "Удалить автора",\n        width: "150px",\n        handleClick: function handleClick(event) {\n          console.log(index);\n          handleDeleteAuthor(index);\n        },\n        backgroundColor: Constants/* palette */.DG.error300,\n        hoverBackgroundColor: Constants/* palette */.DG.warning\n      })));\n    }\n  }))))));\n};\n/* harmony default export */ const CreateAdInputs_AuthorInput = (AuthorInput);\n;// CONCATENATED MODULE: ./src/Components/UI/Inputs/CreateAdInputs/MultiLineInput.jsx\nvar MultiLineInput_root;\nfunction MultiLineInput_typeof(o) { "@babel/helpers - typeof"; return MultiLineInput_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, MultiLineInput_typeof(o); }\nfunction MultiLineInput_slicedToArray(arr, i) { return MultiLineInput_arrayWithHoles(arr) || MultiLineInput_iterableToArrayLimit(arr, i) || MultiLineInput_unsupportedIterableToArray(arr, i) || MultiLineInput_nonIterableRest(); }\nfunction MultiLineInput_nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\nfunction MultiLineInput_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return MultiLineInput_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return MultiLineInput_arrayLikeToArray(o, minLen); }\nfunction MultiLineInput_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction MultiLineInput_iterableToArrayLimit(r, l) { var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction MultiLineInput_arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\nfunction MultiLineInput_defineProperty(obj, key, value) { key = MultiLineInput_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction MultiLineInput_toPropertyKey(arg) { var key = MultiLineInput_toPrimitive(arg, "string"); return MultiLineInput_typeof(key) === "symbol" ? key : String(key); }\nfunction MultiLineInput_toPrimitive(input, hint) { if (MultiLineInput_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (MultiLineInput_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar MultiLineInput_theme = (0,createTheme/* default */.Z)({\n  typography: {\n    inputLabel: {\n      fontSize: "14px",\n      color: "".concat(Constants/* palette */.DG.light),\n      fontFamily: ["Golos UI", "Roboto", "sans-serif"].join(", "),\n      lineHeight: "normal"\n    },\n    lightHelperText: {\n      fontSize: "14px",\n      color: "".concat(Constants/* palette */.DG.light),\n      fontFamily: ["Golos UI", "Roboto", "sans-serif"].join(", "),\n      lineHeight: "normal"\n    }\n  },\n  components: {\n    MuiOutlinedInput: {\n      styleOverrides: {\n        notchedOutline: {\n          borderRadius: "10px",\n          border: "2px solid ".concat(Constants/* palette */.DG.gray300),\n          transition: "border 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms"\n        },\n        root: (MultiLineInput_root = {\n          borderRadius: "10px",\n          fontSize: "16px",\n          width: "100%"\n        }, MultiLineInput_defineProperty(MultiLineInput_root, "&:hover .".concat(outlinedInputClasses/* default */.Z.notchedOutline), {\n          borderColor: "".concat(Constants/* palette */.DG.light)\n        }), MultiLineInput_defineProperty(MultiLineInput_root, "fontSize", "16px"), MultiLineInput_defineProperty(MultiLineInput_root, "&.Mui-focused .".concat(outlinedInputClasses/* default */.Z.notchedOutline), {\n          borderColor: "".concat(Constants/* palette */.DG.active)\n        }), MultiLineInput_defineProperty(MultiLineInput_root, "&.Mui-disabled", {\n          backgroundColor: "".concat(Constants/* palette */.DG.gray100),\n          color: "".concat(Constants/* palette */.DG.light),\n          WebKitTextFillColor: "".concat(Constants/* palette */.DG.light),\n          borderColor: "".concat(Constants/* palette */.DG.gray300)\n        }), MultiLineInput_defineProperty(MultiLineInput_root, "&.Mui-disabled .".concat(outlinedInputClasses/* default */.Z.notchedOutline), {\n          borderColor: "".concat(Constants/* palette */.DG.gray300)\n        }), MultiLineInput_root),\n        input: {\n          fontSize: "16px",\n          color: "".concat(Constants/* palette */.DG.basic)\n          // height: "18px",\n        }\n      }\n    },\n\n    MuiInputBase: {\n      styleOverrides: {\n        root: {\n          fontSize: "16px",\n          fontFamily: "Golos UI, Roboto, sans-serif"\n        }\n      }\n    },\n    MuiFormControl: {\n      styleOverrides: {\n        root: {\n          position: "relative"\n        }\n      }\n    },\n    MuiFormHelperText: {\n      styleOverrides: {\n        root: {\n          color: "".concat(Constants/* palette */.DG.warning),\n          fontSize: "12px",\n          textAlign: "end",\n          position: "absolute",\n          right: "0",\n          top: "-20px",\n          margin: "0px",\n          fontFamily: "Golos UI"\n        }\n      }\n    },\n    MuiCssBaseline: {\n      styleOverrides: "\\n    @font-face {\\n      font-family: \'Golos UI\';\\n      font-style: normal;\\n      font-display: swap;\\n      font-weight: 400;\\n      src: local(\'Golos UI\'), url(".concat(Golos_UI_Regular, ") format(\'truetype\');\\n      unicodeRange: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, 0400\\u201404FF;\\n    }\\n    * {box-sizing: border-box}\\n    :root {\\n      --basic: ").concat(Constants/* palette */.DG.basic, ";\\n    }\\n    @font-face {\\n      font-family: \'Golos UI Bold\';\\n      font-style: normal;\\n      font-weight: normal;\\n      font-display: swap;\\n      src: local(\'Golos UI Bold\'), \\n      url(").concat(Golos_UI_Bold, ")\\n       format(\'truetype\');\\n      unicodeRange: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, 0400\\u201404FF;\\n    }\\n    * {box-sizing: border-box}\\n    :root {\\n      --basic: ").concat(Constants/* palette */.DG.basic, ";\\n    }\\n    ")\n    }\n  }\n});\nvar MultiLineInput = function MultiLineInput(props) {\n  var _useState = (0,react.useState)(props.value.charNumber),\n    _useState2 = MultiLineInput_slicedToArray(_useState, 2),\n    length = _useState2[0],\n    setLength = _useState2[1];\n  var handleChange = function handleChange(e) {\n    setLength(e.target.value.length);\n    props.formik.setFieldValue("description.text", e.target.value);\n    props.formik.setFieldValue("description.charNumber", e.target.value.length);\n  };\n  return /*#__PURE__*/react.createElement(ThemeProvider/* default */.Z, {\n    theme: MultiLineInput_theme\n  }, /*#__PURE__*/react.createElement(CssBaseline/* default */.ZP, null), /*#__PURE__*/react.createElement(FormControl/* default */.Z, {\n    variant: "outlined",\n    fullWidth: true\n  }, /*#__PURE__*/react.createElement(FormHelperText/* default */.Z, null, props.error ? props.helperText.text : null), /*#__PURE__*/react.createElement(Box/* default */.Z, {\n    display: "flex",\n    flexDirection: "column",\n    width: "100%",\n    rowGap: "10px"\n    // justifyContent={"space-between"}\n    // alignItems={"center"}\n    // maxWidth={"460px"}\n  }, /*#__PURE__*/react.createElement(OutlinedInput/* default */.Z, {\n    id: props.id,\n    name: props.name,\n    value: props.value.text\n    // onChange={props.onChange}\n    ,\n    onChange: handleChange,\n    onBlur: props.onBlur,\n    error: props.error ? true : false,\n    multiline: true,\n    rows: 9,\n    inputProps: {\n      maxLength: 1000\n    }\n  }), /*#__PURE__*/react.createElement(Stack/* default */.Z, {\n    direction: "row",\n    justifyContent: "space-between"\n  }, /*#__PURE__*/react.createElement(Typography/* default */.Z, {\n    variant: "lightHelperText"\n  }, "\\u0414\\u043E 1000 \\u0441\\u0438\\u043C\\u0432\\u043E\\u043B\\u043E\\u0432"), /*#__PURE__*/react.createElement(Typography/* default */.Z, {\n    variant: "lightHelperText",\n    sx: {\n      textAlign: "end"\n    }\n  }, length, "/1000")))));\n};\n/* harmony default export */ const CreateAdInputs_MultiLineInput = (MultiLineInput);\n// EXTERNAL MODULE: ./node_modules/@mui/material/IconButton/IconButton.js + 1 modules\nvar IconButton = __webpack_require__(6452);\n// EXTERNAL MODULE: ./node_modules/@mui/material/Button/Button.js + 3 modules\nvar Button = __webpack_require__(4520);\n// EXTERNAL MODULE: ./node_modules/react-dropzone/dist/es/index.js + 1 modules\nvar dist_es = __webpack_require__(6182);\n// EXTERNAL MODULE: ./node_modules/@phosphor-icons/react/dist/icons/Trash.es.js\nvar Trash_es = __webpack_require__(980);\n// EXTERNAL MODULE: ./node_modules/@phosphor-icons/react/dist/icons/Camera.es.js\nvar Camera_es = __webpack_require__(5409);\n;// CONCATENATED MODULE: ./src/Components/UI/Inputs/CreateAdInputs/FileUploader.jsx\n/* provided dependency */ var FileUploader_console = __webpack_require__(1283);\nvar FileUploader_root;\nfunction FileUploader_typeof(o) { "@babel/helpers - typeof"; return FileUploader_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, FileUploader_typeof(o); }\nfunction FileUploader_toConsumableArray(arr) { return FileUploader_arrayWithoutHoles(arr) || FileUploader_iterableToArray(arr) || FileUploader_unsupportedIterableToArray(arr) || FileUploader_nonIterableSpread(); }\nfunction FileUploader_nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\nfunction FileUploader_iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }\nfunction FileUploader_arrayWithoutHoles(arr) { if (Array.isArray(arr)) return FileUploader_arrayLikeToArray(arr); }\nfunction FileUploader_slicedToArray(arr, i) { return FileUploader_arrayWithHoles(arr) || FileUploader_iterableToArrayLimit(arr, i) || FileUploader_unsupportedIterableToArray(arr, i) || FileUploader_nonIterableRest(); }\nfunction FileUploader_nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\nfunction FileUploader_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return FileUploader_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return FileUploader_arrayLikeToArray(o, minLen); }\nfunction FileUploader_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction FileUploader_iterableToArrayLimit(r, l) { var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction FileUploader_arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { FileUploader_defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _objectDestructuringEmpty(obj) { if (obj == null) throw new TypeError("Cannot destructure " + obj); }\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction FileUploader_defineProperty(obj, key, value) { key = FileUploader_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction FileUploader_toPropertyKey(arg) { var key = FileUploader_toPrimitive(arg, "string"); return FileUploader_typeof(key) === "symbol" ? key : String(key); }\nfunction FileUploader_toPrimitive(input, hint) { if (FileUploader_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (FileUploader_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }\n\n\n\n\n\n\n\n\n\n\nvar FileUploader_theme = (0,createTheme/* default */.Z)({\n  components: {\n    MuiIconButton: {\n      defaultProps: {\n        // disableElevation: true,\n        // disableRipple: true,\n        // disableTouchRipple: true,\n        // disableFocusRipple: true,\n      },\n      styleOverrides: {\n        root: (FileUploader_root = {\n          backgroundColor: "rgba(0, 0, 0, 0.04)",\n          boxShadow: "none",\n          borderRadius: "0"\n        }, FileUploader_defineProperty(FileUploader_root, "&:hover", {\n          boxShadow: "none",\n          backgroundColor: "rgba(0, 0, 0, 0.2)"\n        }), FileUploader_defineProperty(FileUploader_root, "& .active", {\n          boxShadow: "none",\n          backgroundColor: "rgba(0, 0, 0, 0.2)"\n        }), FileUploader_defineProperty(FileUploader_root, "&:focused", {\n          boxShadow: "none",\n          backgroundColor: "rgba(0, 0, 0, 0.2)"\n        }), FileUploader_root)\n      }\n    }\n  }\n});\nvar thumbsContainer = {\n  display: "flex",\n  flexDirection: "row",\n  flexWrap: "wrap",\n  marginTop: 16\n};\nvar thumb = {\n  marginTop: "20px",\n  display: "inline-flex",\n  borderRadius: 10,\n  border: "1px solid #eaeaea",\n  marginBottom: 8,\n  marginRight: 8,\n  width: 100,\n  height: 150,\n  padding: 4,\n  boxSizing: "border-box",\n  position: "relative"\n};\nvar thumbInner = {\n  display: "flex",\n  minWidth: 0\n  // overflow: "hidden",\n};\n\nvar img = {\n  display: "block",\n  width: "100%",\n  height: "100%"\n};\nvar baseStyle = {\n  flex: 1,\n  display: "flex",\n  flexDirection: "column",\n  alignItems: "center",\n  padding: "40px",\n  borderWidth: 2,\n  borderRadius: "10px",\n  borderColor: "#eeeeee",\n  borderStyle: "dashed",\n  backgroundColor: "".concat(Constants/* palette */.DG.gray300),\n  color: "#bdbdbd",\n  outline: "none",\n  transition: "border .24s ease-in-out",\n  cursor: "pointer"\n};\nvar focusedStyle = {\n  borderColor: "#2196f3"\n};\nvar acceptStyle = {\n  borderColor: "#00e676"\n};\nvar rejectStyle = {\n  borderColor: "#ff1744"\n};\nvar requiredWidth = 400;\nvar requiredHeight = 600;\nfunction validateDimensions(file) {\n  return new Promise(function (resolve, reject) {\n    var img = new Image();\n    img.src = URL.createObjectURL(file);\n    img.onload = function () {\n      var width = img.width,\n        height = img.height;\n      if (width <= requiredWidth && height <= requiredHeight) {\n        resolve();\n      } else {\n        reject("\\u0420\\u0430\\u0437\\u0440\\u0435\\u0448\\u0435\\u043D\\u0438\\u0435 \\u0438\\u0437\\u043E\\u0431\\u0440\\u0430\\u0436\\u0435\\u043D\\u0438\\u044F \\u0434\\u043E\\u043B\\u0436\\u043D\\u043E \\u0431\\u044B\\u0442\\u044C \\u043D\\u0435 \\u0431\\u043E\\u043B\\u0435\\u0435 ".concat(requiredWidth, "x").concat(requiredHeight, "px."));\n      }\n    };\n    img.onerror = function () {\n      reject("Некорректный файл изображения");\n    };\n  });\n}\nvar FileUploader = function FileUploader(_ref) {\n  var props = _extends({}, (_objectDestructuringEmpty(_ref), _ref));\n  var _useDropzone = (0,dist_es/* useDropzone */.uI)({\n      accept: {\n        "image/jpeg": [],\n        "image/png": [],\n        "image/webp": [".webp"]\n      },\n      multiple: true,\n      // maxFiles: 5,\n      onDrop: function onDrop(acceptedFiles) {\n        Promise.all(acceptedFiles.map(validateDimensions)).then(function () {\n          handleDrop(acceptedFiles, []);\n        })["catch"](function (errors) {\n          props.formik.setFieldError("images", errors);\n        });\n      }\n    }),\n    getRootProps = _useDropzone.getRootProps,\n    getInputProps = _useDropzone.getInputProps,\n    open = _useDropzone.open,\n    acceptedFiles = _useDropzone.acceptedFiles,\n    isFocused = _useDropzone.isFocused,\n    isDragAccept = _useDropzone.isDragAccept,\n    isDragReject = _useDropzone.isDragReject;\n  var style = (0,react.useMemo)(function () {\n    return _objectSpread(_objectSpread(_objectSpread(_objectSpread({}, baseStyle), isFocused ? focusedStyle : {}), isDragAccept ? acceptStyle : {}), isDragReject ? rejectStyle : {});\n  }, [isFocused, isDragAccept, isDragReject]);\n  var _useState = (0,react.useState)([]),\n    _useState2 = FileUploader_slicedToArray(_useState, 2),\n    files = _useState2[0],\n    setFiles = _useState2[1];\n  function handleDrop(acceptedFiles) {\n    FileUploader_console.log(acceptedFiles);\n    setFiles(acceptedFiles.map(function (file) {\n      return Object.assign(file, {\n        preview: URL.createObjectURL(file)\n      });\n    }));\n    props.formik.setFieldValue("images", acceptedFiles);\n    // Добавить обработку отклоненных файлов\n  }\n\n  var thumbs = files.map(function (file, index) {\n    return /*#__PURE__*/react.createElement("div", {\n      style: thumb,\n      key: index\n    }, /*#__PURE__*/react.createElement("div", {\n      style: thumbInner\n    }, /*#__PURE__*/react.createElement("img", {\n      src: file.preview,\n      style: img\n      // Revoke data uri after image is loaded\n      // onLoad={() => {\n      //   URL.revokeObjectURL(file.preview);\n      // }}\n    }), /*#__PURE__*/react.createElement(IconButton/* default */.Z, {\n      "aria-label": "delete-image",\n      size: "small",\n      sx: {\n        height: "max-content",\n        position: "absolute",\n        top: 0,\n        left: 0\n      },\n      onClick: function onClick() {\n        return handleClearUpload(index);\n      }\n    }, /*#__PURE__*/react.createElement(Trash_es/* default */.Z, {\n      color: Constants/* palette */.DG.warning\n    }))));\n  });\n  (0,react.useEffect)(function () {\n    // Make sure to revoke the data uris to avoid memory leaks, will run on unmount\n    return function () {\n      return files.forEach(function (file) {\n        return URL.revokeObjectURL(file.preview);\n      });\n    };\n  }, []);\n  var handleClearUpload = function handleClearUpload(index) {\n    setFiles([].concat(FileUploader_toConsumableArray(files.slice(0, index)), FileUploader_toConsumableArray(files.slice(index + 1))));\n    props.formik.setFieldValue("images", [].concat(FileUploader_toConsumableArray(files.slice(0, index)), FileUploader_toConsumableArray(files.slice(index + 1))));\n  };\n  return /*#__PURE__*/react.createElement(ThemeProvider/* default */.Z, {\n    theme: FileUploader_theme\n  }, /*#__PURE__*/react.createElement("label", {\n    htmlFor: "upload",\n    style: {\n      color: "".concat(Constants/* palette */.DG.active),\n      cursor: "pointer"\n    }\n  }, props.text), /*#__PURE__*/react.createElement(Box/* default */.Z, {\n    className: "container",\n    sx: {\n      position: "relative",\n      marginTop: "20px"\n    }\n  }, /*#__PURE__*/react.createElement("div", getRootProps({\n    style: style\n  }), /*#__PURE__*/react.createElement("input", _extends({}, getInputProps(), {\n    id: props.id,\n    name: props.name,\n    onBlur: props.handleBlur\n  })), /*#__PURE__*/react.createElement(Button/* default */.Z, {\n    size: "small",\n    onClick: open,\n    id: "upload",\n    sx: {\n      width: "0.1px",\n      height: "0.1px",\n      opacity: "0",\n      position: "absolute",\n      zIndex: "-10"\n    }\n  }), /*#__PURE__*/react.createElement(Camera_es/* default */.Z, {\n    size: 48,\n    color: "#676767"\n  })), files.length > 0 && /*#__PURE__*/react.createElement(Box/* default */.Z, {\n    display: "flex"\n  }, thumbs)));\n};\n/* harmony default export */ const CreateAdInputs_FileUploader = (FileUploader);\n// EXTERNAL MODULE: ./src/Store/categories/actions.js\nvar actions = __webpack_require__(498);\n// EXTERNAL MODULE: ./node_modules/react-router/dist/index.js\nvar dist = __webpack_require__(1807);\n;// CONCATENATED MODULE: ./src/Components/CreateAdvertisment/BasicData.jsx\nfunction BasicData_extends() { BasicData_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return BasicData_extends.apply(this, arguments); }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar BasicData = function BasicData(props) {\n  var categories = (0,es/* useSelector */.v9)(function (store) {\n    return store.categories.categories;\n  });\n  var requestStatus = (0,es/* useSelector */.v9)(function (store) {\n    return store.categories.requestStatus;\n  });\n  var dispatch = (0,es/* useDispatch */.I0)();\n  (0,react.useEffect)(function () {\n    (0,actions/* getCategories */.CP)(dispatch);\n  }, []);\n  var navigate = (0,dist/* useNavigate */.s0)();\n  var handleClose = function handleClose() {\n    navigate("/");\n  };\n  return /*#__PURE__*/react.createElement(react.Fragment, null, /*#__PURE__*/react.createElement(Fade/* default */.Z, {\n    "in": props.step === 0,\n    timeout: 500\n  }, /*#__PURE__*/react.createElement(Box/* default */.Z, {\n    sx: {\n      padding: "20px 20px",\n      backgroundColor: "#fff",\n      borderRadius: "10px",\n      display: "flex",\n      flexDirection: "column",\n      rowGap: "40px",\n      maxWidth: "870px"\n    }\n  }, /*#__PURE__*/react.createElement(Typography/* default */.Z, {\n    variant: "boldSubtitle1"\n  }, "1. \\u041E\\u0441\\u043D\\u043E\\u0432\\u043D\\u044B\\u0435 \\u0441\\u0432\\u0435\\u0434\\u0435\\u043D\\u0438\\u044F"), /*#__PURE__*/react.createElement(Box/* default */.Z, {\n    sx: {\n      display: "flex",\n      flexDirection: "column",\n      rowGap: "40px"\n    }\n  }, /*#__PURE__*/react.createElement(BaseAdInput/* default */.Z, BasicData_extends({\n    label: "Название"\n  }, props.formik.getFieldProps("title"), {\n    onChange: props.formik.handleChange,\n    onBlur: props.formik.handleBlur,\n    error: props.formik.touched.title && Boolean(props.formik.errors.title),\n    helperText: props.formik.touched.title && props.formik.errors.title\n  })), /*#__PURE__*/react.createElement(CreateAdInputs_AdCategorySelect, BasicData_extends({\n    label: "Категория"\n  }, props.formik.getFieldProps("category"), {\n    formik: props.formik,\n    categories: categories\n  })), /*#__PURE__*/react.createElement(CreateAdInputs_AuthorInput, BasicData_extends({\n    label: "Автор"\n  }, props.formik.getFieldProps("author"), {\n    formik: props.formik\n  }))))), /*#__PURE__*/react.createElement(Fade/* default */.Z, {\n    "in": props.step === 0,\n    timeout: 500\n  }, /*#__PURE__*/react.createElement(Box/* default */.Z, {\n    sx: {\n      padding: "20px 20px",\n      backgroundColor: "#fff",\n      borderRadius: "10px",\n      display: "flex",\n      flexDirection: "column",\n      rowGap: "40px",\n      maxWidth: "870px"\n    }\n  }, /*#__PURE__*/react.createElement(Stack/* default */.Z, {\n    rowGap: "20px"\n  }, /*#__PURE__*/react.createElement(Typography/* default */.Z, {\n    variant: "boldSubtitle1"\n  }, "2. \\u0421\\u0432\\u0435\\u0434\\u0435\\u043D\\u0438\\u044F \\u043E\\u0431 \\u0438\\u0437\\u0434\\u0430\\u043D\\u0438\\u0438"), /*#__PURE__*/react.createElement(Typography/* default */.Z, {\n    variant: "subtitle2"\n  }, "\\u0415\\u0441\\u043B\\u0438 \\u0443 \\u0432\\u0430\\u0441 \\u043D\\u0435\\u0442 \\u043D\\u0443\\u0436\\u043D\\u044B\\u0445 \\u0441\\u0432\\u0435\\u0434\\u0435\\u043D\\u0438\\u0439, \\u0442\\u043E \\u043E\\u0441\\u0442\\u0430\\u0432\\u044C\\u0442\\u0435 \\u0441\\u043E\\u043E\\u0442\\u0432\\u0435\\u0442\\u0441\\u0442\\u0432\\u0443\\u044E\\u0449\\u0435\\u0435 \\u043F\\u043E\\u043B\\u0435 \\u043F\\u0443\\u0441\\u0442\\u044B\\u043C.")), /*#__PURE__*/react.createElement(Box/* default */.Z, {\n    sx: {\n      display: "flex",\n      flexDirection: "column",\n      rowGap: "40px"\n    }\n  }, /*#__PURE__*/react.createElement(BaseAdInput/* default */.Z, BasicData_extends({\n    label: "Издательство"\n  }, props.formik.getFieldProps("publisher"), {\n    onChange: props.formik.handleChange,\n    onBlur: props.formik.handleBlur,\n    error: props.formik.touched.publisher && Boolean(props.formik.errors.publisher),\n    helperText: props.formik.touched.publisher && props.formik.errors.publisher\n  })), /*#__PURE__*/react.createElement(BaseAdInput/* default */.Z, BasicData_extends({\n    label: "Год издания"\n  }, props.formik.getFieldProps("age"), {\n    onChange: props.formik.handleChange,\n    onBlur: props.formik.handleBlur,\n    error: props.formik.touched.age && Boolean(props.formik.errors.age),\n    helperText: props.formik.touched.age && props.formik.errors.age\n  }))))), /*#__PURE__*/react.createElement(Fade/* default */.Z, {\n    "in": props.step === 0,\n    timeout: 500\n  }, /*#__PURE__*/react.createElement(Box/* default */.Z, {\n    sx: {\n      padding: "20px 20px",\n      backgroundColor: "#fff",\n      borderRadius: "10px",\n      display: "flex",\n      flexDirection: "column",\n      rowGap: "40px",\n      maxWidth: "870px"\n    }\n  }, /*#__PURE__*/react.createElement(Stack/* default */.Z, {\n    rowGap: "20px"\n  }, /*#__PURE__*/react.createElement(Typography/* default */.Z, {\n    variant: "boldSubtitle1"\n  }, "3. \\u0418\\u0437\\u043E\\u0431\\u0440\\u0430\\u0436\\u0435\\u043D\\u0438\\u044F"), /*#__PURE__*/react.createElement(Typography/* default */.Z, {\n    variant: "subtitle2"\n  }, "\\u041F\\u0435\\u0440\\u0435\\u0442\\u0430\\u0449\\u0438\\u0442\\u0435 \\u0444\\u043E\\u0442\\u043E \\u0441\\u044E\\u0434\\u0430 \\u0438\\u043B\\u0438", /*#__PURE__*/react.createElement(CreateAdInputs_FileUploader, BasicData_extends({\n    text: " выберите их на своем устройстве…"\n  }, props.formik.getFieldProps("images"), {\n    formik: props.formik\n  }))), props.formik.errors && /*#__PURE__*/react.createElement(Typography/* default */.Z, {\n    variant: "lightHelperText",\n    sx: {\n      color: Constants/* palette */.DG.warning\n    }\n  }, props.formik.errors.images), /*#__PURE__*/react.createElement(Typography/* default */.Z, {\n    variant: "lightHelperText"\n  }, "\\u041F\\u0435\\u0440\\u0432\\u043E\\u0435 \\u0444\\u043E\\u0442\\u043E \\u0431\\u0443\\u0434\\u0435\\u0442 \\u043E\\u0442\\u043E\\u0431\\u0440\\u0430\\u0436\\u0430\\u0442\\u044C\\u0441\\u044F \\u0432 \\u0440\\u0435\\u0437\\u0443\\u043B\\u044C\\u0442\\u0430\\u0442\\u0430\\u0445 \\u043F\\u043E\\u0438\\u0441\\u043A\\u0430. \\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u043D\\u0430\\u0438\\u0431\\u043E\\u043B\\u0435\\u0435 \\u0443\\u0434\\u0430\\u0447\\u043D\\u043E\\u0435. \\u0412\\u044B \\u043C\\u043E\\u0436\\u0435\\u0442\\u0435 \\u0437\\u0430\\u0433\\u0440\\u0443\\u0437\\u0438\\u0442\\u044C \\u0434\\u043E 5 \\u0444\\u043E\\u0442\\u043E\\u0433\\u0440\\u0430\\u0444\\u0438\\u0439 \\u0432 \\u0444\\u043E\\u0440\\u043C\\u0430\\u0442\\u0435 JPG, PNG \\u0438\\u043B\\u0438 WEBP. \\u0420\\u0430\\u0437\\u0440\\u0435\\u0448\\u0435\\u043D\\u0438\\u0435 \\u043A\\u0430\\u0436\\u0434\\u043E\\u0433\\u043E \\u0438\\u0437\\u043E\\u0431\\u0440\\u0430\\u0436\\u0435\\u043D\\u0438\\u044F \\u043D\\u0435 \\u0434\\u043E\\u043B\\u0436\\u043D\\u043E \\u0431\\u044B\\u0442\\u044C \\u0431\\u043E\\u043B\\u0435\\u0435 400px \\u0445 600px.")))), /*#__PURE__*/react.createElement(Fade/* default */.Z, {\n    "in": props.step === 0,\n    timeout: 500\n  }, /*#__PURE__*/react.createElement(Box/* default */.Z, {\n    sx: {\n      padding: "20px 20px",\n      backgroundColor: "#fff",\n      borderRadius: "10px",\n      display: "flex",\n      flexDirection: "column",\n      rowGap: "40px",\n      maxWidth: "870px"\n    }\n  }, /*#__PURE__*/react.createElement(Typography/* default */.Z, {\n    variant: "boldSubtitle1"\n  }, "4. \\u041E\\u043F\\u0438\\u0441\\u0430\\u043D\\u0438\\u0435"), /*#__PURE__*/react.createElement(CreateAdInputs_MultiLineInput, BasicData_extends({}, props.formik.getFieldProps("description"), {\n    formik: props.formik,\n    error: props.formik.touched.description && Boolean(props.formik.errors.description),\n    helperText: props.formik.touched.description && props.formik.errors.description\n  })))), requestStatus.status == Constants/* REQUEST_STATUS */.J_.FAILURE && /*#__PURE__*/react.createElement(Snackbar/* default */.Z, {\n    open: true,\n    autoHideDuration: 6000,\n    onClose: handleClose\n  }, /*#__PURE__*/react.createElement(Alert/* default */.Z, {\n    onClose: handleClose,\n    severity: "error",\n    sx: {\n      width: "100%"\n    },\n    variant: "filled"\n  }, "".concat(requestStatus.error, ". \\u0412\\u044B \\u0431\\u0443\\u0434\\u0435\\u0442\\u0435 \\u043F\\u0435\\u0440\\u0435\\u0432\\u0435\\u0434\\u0435\\u043D\\u044B \\u043D\\u0430 \\u0433\\u043B\\u0430\\u0432\\u043D\\u0443\\u044E \\u0441\\u0442\\u0440\\u0430\\u043D\\u0438\\u0446\\u0443"))));\n};\n/* harmony default export */ const CreateAdvertisment_BasicData = (BasicData);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///2639\n')},7764:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Z: () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _mui_material_Box_Box_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(8196);\n/* harmony import */ var _mui_material_CssBaseline_CssBaseline_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(4589);\n/* harmony import */ var _mui_material_FormControl_FormControl_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(4321);\n/* harmony import */ var _mui_material_FormHelperText_FormHelperText_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(8396);\n/* harmony import */ var _mui_material_OutlinedInput_OutlinedInput_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(4995);\n/* harmony import */ var _mui_material_Stack_Stack_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(5553);\n/* harmony import */ var _mui_material_styles_ThemeProvider_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(2033);\n/* harmony import */ var _mui_material_Typography_Typography_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(6877);\n/* harmony import */ var _mui_material_styles_createTheme_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(1334);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(5466);\n/* harmony import */ var _Utils_Constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(576);\n/* harmony import */ var _fonts_Golos_UI_Regular_ttf__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(2028);\n/* harmony import */ var _fonts_Golos_UI_Bold_ttf__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(3540);\n/* harmony import */ var _mui_material_OutlinedInput__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(139);\nvar _root;\nfunction _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar theme = (0,_mui_material_styles_createTheme_js__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)({\n  typography: {\n    inputLabel: {\n      fontSize: "16px",\n      color: "".concat(_Utils_Constants__WEBPACK_IMPORTED_MODULE_1__/* .palette */ .DG.light),\n      fontFamily: ["Golos UI Bold", "Roboto", "sans-serif"].join(", "),\n      lineHeight: "normal"\n    },\n    label: {\n      fontSize: "16px",\n      color: "#000",\n      fontFamily: ["Golos UI", "Roboto", "sans-serif"].join(", "),\n      lineHeight: "normal"\n    }\n  },\n  components: {\n    MuiOutlinedInput: {\n      styleOverrides: {\n        notchedOutline: {\n          borderRadius: "10px",\n          border: "2px solid ".concat(_Utils_Constants__WEBPACK_IMPORTED_MODULE_1__/* .palette */ .DG.gray300),\n          transition: "border 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms"\n        },\n        root: (_root = {\n          borderRadius: "10px",\n          fontSize: "16px",\n          width: "100%"\n        }, _defineProperty(_root, "&:hover .".concat(_mui_material_OutlinedInput__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z.notchedOutline), {\n          borderColor: "".concat(_Utils_Constants__WEBPACK_IMPORTED_MODULE_1__/* .palette */ .DG.light)\n        }), _defineProperty(_root, "fontSize", "16px"), _defineProperty(_root, "&.Mui-focused .".concat(_mui_material_OutlinedInput__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z.notchedOutline), {\n          borderColor: "".concat(_Utils_Constants__WEBPACK_IMPORTED_MODULE_1__/* .palette */ .DG.active)\n        }), _defineProperty(_root, "&.Mui-disabled", {\n          backgroundColor: "".concat(_Utils_Constants__WEBPACK_IMPORTED_MODULE_1__/* .palette */ .DG.gray100),\n          color: "".concat(_Utils_Constants__WEBPACK_IMPORTED_MODULE_1__/* .palette */ .DG.light),\n          WebKitTextFillColor: "".concat(_Utils_Constants__WEBPACK_IMPORTED_MODULE_1__/* .palette */ .DG.light),\n          borderColor: "".concat(_Utils_Constants__WEBPACK_IMPORTED_MODULE_1__/* .palette */ .DG.gray300)\n        }), _defineProperty(_root, "&.Mui-disabled .".concat(_mui_material_OutlinedInput__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z.notchedOutline), {\n          borderColor: "".concat(_Utils_Constants__WEBPACK_IMPORTED_MODULE_1__/* .palette */ .DG.gray300)\n        }), _root),\n        input: {\n          padding: "12px",\n          fontSize: "16px",\n          color: "".concat(_Utils_Constants__WEBPACK_IMPORTED_MODULE_1__/* .palette */ .DG.basic),\n          height: "18px"\n        }\n      }\n    },\n    MuiInputBase: {\n      styleOverrides: {\n        root: {\n          fontSize: "16px",\n          fontFamily: "Golos UI, Roboto, sans-serif"\n        }\n      }\n    },\n    MuiFormControl: {\n      styleOverrides: {\n        root: {\n          position: "relative"\n        }\n      }\n    },\n    MuiFormHelperText: {\n      styleOverrides: {\n        root: {\n          color: "".concat(_Utils_Constants__WEBPACK_IMPORTED_MODULE_1__/* .palette */ .DG.warning),\n          fontSize: "12px",\n          textAlign: "end",\n          position: "absolute",\n          right: "0",\n          top: "-20px",\n          margin: "0px",\n          fontFamily: "Golos UI"\n        }\n      }\n    },\n    MuiCssBaseline: {\n      styleOverrides: "\\n    @font-face {\\n      font-family: \'Golos UI\';\\n      font-style: normal;\\n      font-display: swap;\\n      font-weight: 400;\\n      src: local(\'Golos UI\'), url(".concat(_fonts_Golos_UI_Regular_ttf__WEBPACK_IMPORTED_MODULE_2__, ") format(\'truetype\');\\n      unicodeRange: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, 0400\\u201404FF;\\n    }\\n    * {box-sizing: border-box}\\n    :root {\\n      --basic: ").concat(_Utils_Constants__WEBPACK_IMPORTED_MODULE_1__/* .palette */ .DG.basic, ";\\n    }\\n    @font-face {\\n      font-family: \'Golos UI Bold\';\\n      font-style: normal;\\n      font-weight: normal;\\n      font-display: swap;\\n      src: local(\'Golos UI Bold\'), \\n      url(").concat(_fonts_Golos_UI_Bold_ttf__WEBPACK_IMPORTED_MODULE_3__, ")\\n       format(\'truetype\');\\n      unicodeRange: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, 0400\\u201404FF;\\n    }\\n    * {box-sizing: border-box}\\n    :root {\\n      --basic: ").concat(_Utils_Constants__WEBPACK_IMPORTED_MODULE_1__/* .palette */ .DG.basic, ";\\n    }\\n    ")\n    }\n  }\n});\nvar BaseAdInput = function BaseAdInput(props) {\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material_styles_ThemeProvider_js__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z, {\n    theme: theme\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material_CssBaseline_CssBaseline_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .ZP, null), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material_FormControl_FormControl_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z, {\n    variant: "outlined",\n    fullWidth: true\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material_Box_Box_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z, {\n    display: "flex",\n    flexDirection: "row",\n    width: "100%"\n    // justifyContent={"space-between"}\n    ,\n    alignItems: "center",\n    maxWidth: "460px"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material_Typography_Typography_js__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z, {\n    variant: "label",\n    sx: {\n      color: "#000",\n      width: "140px",\n      paddingRight: "5px"\n    }\n  }, props.label), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material_Stack_Stack_js__WEBPACK_IMPORTED_MODULE_11__/* ["default"] */ .Z, {\n    position: "relative",\n    maxWidth: "320px",\n    width: "100%"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material_FormHelperText_FormHelperText_js__WEBPACK_IMPORTED_MODULE_12__/* ["default"] */ .Z, null, props.error ? props.helperText : null), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material_OutlinedInput_OutlinedInput_js__WEBPACK_IMPORTED_MODULE_13__/* ["default"] */ .Z, {\n    type: props.type,\n    id: props.id,\n    name: props.name,\n    value: props.value,\n    onChange: props.onChange,\n    onBlur: props.onBlur,\n    error: props.error ? true : false,\n    sx: {\n      maxWidth: "320px"\n    }\n  })))));\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (BaseAdInput);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///7764\n')}}]);