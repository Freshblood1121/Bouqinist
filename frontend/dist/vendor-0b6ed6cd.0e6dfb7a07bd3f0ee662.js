"use strict";(self.webpackChunkelder_books_fe=self.webpackChunkelder_books_fe||[]).push([[322],{4175:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Z: () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _createBox__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(8672);\n'use client';\n\n\n\nconst Box = (0,_createBox__WEBPACK_IMPORTED_MODULE_0__/* [\"default\"] */ .Z)();\n false ? 0 : void 0;\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Box);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDE3NS5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsWUFBWTs7QUFFdUI7QUFDRTtBQUNyQyxNQUFNRSxHQUFHLEdBQUdELCtEQUFTLENBQUMsQ0FBQztBQUN2QkUsTUFBcUMsR0FBR0QsQ0FrQnZDLEdBQUcsS0FBSyxDQUFDO0FBQ1YsaUVBQWVBLEdBQUciLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9lbGRlci1ib29rcy1mZS8uL25vZGVfbW9kdWxlcy9AbXVpL3N5c3RlbS9lc20vQm94L0JveC5qcz84Y2ViIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2UgY2xpZW50JztcblxuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCBjcmVhdGVCb3ggZnJvbSAnLi4vY3JlYXRlQm94JztcbmNvbnN0IEJveCA9IGNyZWF0ZUJveCgpO1xucHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gQm94LnByb3BUeXBlcyAvKiByZW1vdmUtcHJvcHR5cGVzICovID0ge1xuICAvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSBXYXJuaW5nIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gIC8vIHwgVGhlc2UgUHJvcFR5cGVzIGFyZSBnZW5lcmF0ZWQgZnJvbSB0aGUgVHlwZVNjcmlwdCB0eXBlIGRlZmluaXRpb25zIHxcbiAgLy8gfCAgICAgVG8gdXBkYXRlIHRoZW0gZWRpdCB0aGUgZC50cyBmaWxlIGFuZCBydW4gXCJ5YXJuIHByb3B0eXBlc1wiICAgICB8XG4gIC8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgLyoqXG4gICAqIEBpZ25vcmVcbiAgICovXG4gIGNoaWxkcmVuOiBQcm9wVHlwZXMubm9kZSxcbiAgLyoqXG4gICAqIFRoZSBjb21wb25lbnQgdXNlZCBmb3IgdGhlIHJvb3Qgbm9kZS5cbiAgICogRWl0aGVyIGEgc3RyaW5nIHRvIHVzZSBhIEhUTUwgZWxlbWVudCBvciBhIGNvbXBvbmVudC5cbiAgICovXG4gIGNvbXBvbmVudDogUHJvcFR5cGVzLmVsZW1lbnRUeXBlLFxuICAvKipcbiAgICogVGhlIHN5c3RlbSBwcm9wIHRoYXQgYWxsb3dzIGRlZmluaW5nIHN5c3RlbSBvdmVycmlkZXMgYXMgd2VsbCBhcyBhZGRpdGlvbmFsIENTUyBzdHlsZXMuXG4gICAqL1xuICBzeDogUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLmFycmF5T2YoUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLmZ1bmMsIFByb3BUeXBlcy5vYmplY3QsIFByb3BUeXBlcy5ib29sXSkpLCBQcm9wVHlwZXMuZnVuYywgUHJvcFR5cGVzLm9iamVjdF0pXG59IDogdm9pZCAwO1xuZXhwb3J0IGRlZmF1bHQgQm94OyJdLCJuYW1lcyI6WyJQcm9wVHlwZXMiLCJjcmVhdGVCb3giLCJCb3giLCJwcm9jZXNzIiwiZW52IiwiTk9ERV9FTlYiLCJwcm9wVHlwZXMiLCJjaGlsZHJlbiIsIm5vZGUiLCJjb21wb25lbnQiLCJlbGVtZW50VHlwZSIsInN4Iiwib25lT2ZUeXBlIiwiYXJyYXlPZiIsImZ1bmMiLCJvYmplY3QiLCJib29sIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///4175\n")},2696:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Z: () => (/* binding */ createContainer)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(7958);\n/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(3123);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(5466);\n/* harmony import */ var clsx__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(512);\n/* harmony import */ var _mui_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(7127);\n/* harmony import */ var _mui_utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(1662);\n/* harmony import */ var _mui_utils__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(635);\n/* harmony import */ var _useThemeProps__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(7650);\n/* harmony import */ var _styled__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(281);\n/* harmony import */ var _createTheme__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(7841);\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(3823);\n\n\nconst _excluded = [\"className\", \"component\", \"disableGutters\", \"fixed\", \"maxWidth\", \"classes\"];\n\n\n\n\n\n\n\n\nconst defaultTheme = (0,_createTheme__WEBPACK_IMPORTED_MODULE_2__/* [\"default\"] */ .Z)();\nconst defaultCreateStyledComponent = (0,_styled__WEBPACK_IMPORTED_MODULE_3__/* [\"default\"] */ .Z)('div', {\n  name: 'MuiContainer',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`maxWidth${(0,_mui_utils__WEBPACK_IMPORTED_MODULE_4__/* [\"default\"] */ .Z)(String(ownerState.maxWidth))}`], ownerState.fixed && styles.fixed, ownerState.disableGutters && styles.disableGutters];\n  }\n});\nconst useThemePropsDefault = inProps => (0,_useThemeProps__WEBPACK_IMPORTED_MODULE_5__/* [\"default\"] */ .Z)({\n  props: inProps,\n  name: 'MuiContainer',\n  defaultTheme\n});\nconst useUtilityClasses = (ownerState, componentName) => {\n  const getContainerUtilityClass = slot => {\n    return (0,_mui_utils__WEBPACK_IMPORTED_MODULE_6__/* [\"default\"] */ .Z)(componentName, slot);\n  };\n  const {\n    classes,\n    fixed,\n    disableGutters,\n    maxWidth\n  } = ownerState;\n  const slots = {\n    root: ['root', maxWidth && `maxWidth${(0,_mui_utils__WEBPACK_IMPORTED_MODULE_4__/* [\"default\"] */ .Z)(String(maxWidth))}`, fixed && 'fixed', disableGutters && 'disableGutters']\n  };\n  return (0,_mui_utils__WEBPACK_IMPORTED_MODULE_7__/* [\"default\"] */ .Z)(slots, getContainerUtilityClass, classes);\n};\nfunction createContainer(options = {}) {\n  const {\n    // This will allow adding custom styled fn (for example for custom sx style function)\n    createStyledComponent = defaultCreateStyledComponent,\n    useThemeProps = useThemePropsDefault,\n    componentName = 'MuiContainer'\n  } = options;\n  const ContainerRoot = createStyledComponent(({\n    theme,\n    ownerState\n  }) => (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_8__/* [\"default\"] */ .Z)({\n    width: '100%',\n    marginLeft: 'auto',\n    boxSizing: 'border-box',\n    marginRight: 'auto',\n    display: 'block'\n  }, !ownerState.disableGutters && {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2),\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    [theme.breakpoints.up('sm')]: {\n      paddingLeft: theme.spacing(3),\n      paddingRight: theme.spacing(3)\n    }\n  }), ({\n    theme,\n    ownerState\n  }) => ownerState.fixed && Object.keys(theme.breakpoints.values).reduce((acc, breakpointValueKey) => {\n    const breakpoint = breakpointValueKey;\n    const value = theme.breakpoints.values[breakpoint];\n    if (value !== 0) {\n      // @ts-ignore\n      acc[theme.breakpoints.up(breakpoint)] = {\n        maxWidth: `${value}${theme.breakpoints.unit}`\n      };\n    }\n    return acc;\n  }, {}), ({\n    theme,\n    ownerState\n  }) => (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_8__/* [\"default\"] */ .Z)({}, ownerState.maxWidth === 'xs' && {\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    [theme.breakpoints.up('xs')]: {\n      // @ts-ignore module augmentation fails if custom breakpoints are used\n      maxWidth: Math.max(theme.breakpoints.values.xs, 444)\n    }\n  }, ownerState.maxWidth &&\n  // @ts-ignore module augmentation fails if custom breakpoints are used\n  ownerState.maxWidth !== 'xs' && {\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    [theme.breakpoints.up(ownerState.maxWidth)]: {\n      // @ts-ignore module augmentation fails if custom breakpoints are used\n      maxWidth: `${theme.breakpoints.values[ownerState.maxWidth]}${theme.breakpoints.unit}`\n    }\n  }));\n  const Container = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(function Container(inProps, ref) {\n    const props = useThemeProps(inProps);\n    const {\n        className,\n        component = 'div',\n        disableGutters = false,\n        fixed = false,\n        maxWidth = 'lg'\n      } = props,\n      other = (0,_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_9__/* [\"default\"] */ .Z)(props, _excluded);\n    const ownerState = (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_8__/* [\"default\"] */ .Z)({}, props, {\n      component,\n      disableGutters,\n      fixed,\n      maxWidth\n    });\n\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    const classes = useUtilityClasses(ownerState, componentName);\n    return /*#__PURE__*/(\n      // @ts-ignore theme is injected by the styled util\n      (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(ContainerRoot, (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_8__/* [\"default\"] */ .Z)({\n        as: component\n        // @ts-ignore module augmentation fails if custom breakpoints are used\n        ,\n\n        ownerState: ownerState,\n        className: (0,clsx__WEBPACK_IMPORTED_MODULE_10__/* [\"default\"] */ .Z)(classes.root, className),\n        ref: ref\n      }, other))\n    );\n  });\n   false ? 0 : void 0;\n  return Container;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///2696\n")},1299:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Z: () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(5466);\n/* harmony import */ var _mui_styled_engine__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(4112);\n/* harmony import */ var _useTheme__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(7762);\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(3823);\n'use client';\n\n\n\n\n\n\nfunction GlobalStyles({\n  styles,\n  themeId,\n  defaultTheme = {}\n}) {\n  const upperTheme = (0,_useTheme__WEBPACK_IMPORTED_MODULE_2__/* [\"default\"] */ .Z)(defaultTheme);\n  const globalStyles = typeof styles === 'function' ? styles(themeId ? upperTheme[themeId] || upperTheme : upperTheme) : styles;\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_styled_engine__WEBPACK_IMPORTED_MODULE_3__/* [\"default\"] */ .Z, {\n    styles: globalStyles\n  });\n}\n false ? 0 : void 0;\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (GlobalStyles);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTI5OS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUEsWUFBWTs7QUFFbUI7QUFDSTtBQUNrQztBQUNsQztBQUNhO0FBQ2hELFNBQVNFLFlBQVlBLENBQUM7RUFDcEJLLE1BQU07RUFDTkMsT0FBTztFQUNQQyxZQUFZLEdBQUcsQ0FBQztBQUNsQixDQUFDLEVBQUU7RUFDRCxNQUFNQyxVQUFVLEdBQUdOLDhEQUFRLENBQUNLLFlBQVksQ0FBQztFQUN6QyxNQUFNRSxZQUFZLEdBQUcsT0FBT0osTUFBTSxLQUFLLFVBQVUsR0FBR0EsTUFBTSxDQUFDQyxPQUFPLEdBQUdFLFVBQVUsQ0FBQ0YsT0FBTyxDQUFDLElBQUlFLFVBQVUsR0FBR0EsVUFBVSxDQUFDLEdBQUdILE1BQU07RUFDN0gsT0FBTyxhQUFhRCxzREFBSSxDQUFDSCxtRUFBZSxFQUFFO0lBQ3hDSSxNQUFNLEVBQUVJO0VBQ1YsQ0FBQyxDQUFDO0FBQ0o7QUFDQUMsTUFBcUMsR0FBR1YsQ0FpQnZDLEdBQUcsS0FBSyxDQUFDO0FBQ1YsaUVBQWVBLFlBQVkiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9lbGRlci1ib29rcy1mZS8uL25vZGVfbW9kdWxlcy9AbXVpL3N5c3RlbS9lc20vR2xvYmFsU3R5bGVzL0dsb2JhbFN0eWxlcy5qcz8zODdlIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2UgY2xpZW50JztcblxuaW1wb3J0ICogYXMgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCB7IEdsb2JhbFN0eWxlcyBhcyBNdWlHbG9iYWxTdHlsZXMgfSBmcm9tICdAbXVpL3N0eWxlZC1lbmdpbmUnO1xuaW1wb3J0IHVzZVRoZW1lIGZyb20gJy4uL3VzZVRoZW1lJztcbmltcG9ydCB7IGpzeCBhcyBfanN4IH0gZnJvbSBcInJlYWN0L2pzeC1ydW50aW1lXCI7XG5mdW5jdGlvbiBHbG9iYWxTdHlsZXMoe1xuICBzdHlsZXMsXG4gIHRoZW1lSWQsXG4gIGRlZmF1bHRUaGVtZSA9IHt9XG59KSB7XG4gIGNvbnN0IHVwcGVyVGhlbWUgPSB1c2VUaGVtZShkZWZhdWx0VGhlbWUpO1xuICBjb25zdCBnbG9iYWxTdHlsZXMgPSB0eXBlb2Ygc3R5bGVzID09PSAnZnVuY3Rpb24nID8gc3R5bGVzKHRoZW1lSWQgPyB1cHBlclRoZW1lW3RoZW1lSWRdIHx8IHVwcGVyVGhlbWUgOiB1cHBlclRoZW1lKSA6IHN0eWxlcztcbiAgcmV0dXJuIC8qI19fUFVSRV9fKi9fanN4KE11aUdsb2JhbFN0eWxlcywge1xuICAgIHN0eWxlczogZ2xvYmFsU3R5bGVzXG4gIH0pO1xufVxucHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gR2xvYmFsU3R5bGVzLnByb3BUeXBlcyAvKiByZW1vdmUtcHJvcHR5cGVzICovID0ge1xuICAvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSBXYXJuaW5nIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gIC8vIHwgVGhlc2UgUHJvcFR5cGVzIGFyZSBnZW5lcmF0ZWQgZnJvbSB0aGUgVHlwZVNjcmlwdCB0eXBlIGRlZmluaXRpb25zIHxcbiAgLy8gfCAgICAgVG8gdXBkYXRlIHRoZW0gZWRpdCBUeXBlU2NyaXB0IHR5cGVzIGFuZCBydW4gXCJ5YXJuIHByb3B0eXBlc1wiICB8XG4gIC8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgLyoqXG4gICAqIEBpZ25vcmVcbiAgICovXG4gIGRlZmF1bHRUaGVtZTogUHJvcFR5cGVzLm9iamVjdCxcbiAgLyoqXG4gICAqIEBpZ25vcmVcbiAgICovXG4gIHN0eWxlczogUHJvcFR5cGVzIC8qIEB0eXBlc2NyaXB0LXRvLXByb3B0eXBlcy1pZ25vcmUgKi8ub25lT2ZUeXBlKFtQcm9wVHlwZXMuYXJyYXksIFByb3BUeXBlcy5mdW5jLCBQcm9wVHlwZXMubnVtYmVyLCBQcm9wVHlwZXMub2JqZWN0LCBQcm9wVHlwZXMuc3RyaW5nLCBQcm9wVHlwZXMuYm9vbF0pLFxuICAvKipcbiAgICogQGlnbm9yZVxuICAgKi9cbiAgdGhlbWVJZDogUHJvcFR5cGVzLnN0cmluZ1xufSA6IHZvaWQgMDtcbmV4cG9ydCBkZWZhdWx0IEdsb2JhbFN0eWxlczsiXSwibmFtZXMiOlsiUmVhY3QiLCJQcm9wVHlwZXMiLCJHbG9iYWxTdHlsZXMiLCJNdWlHbG9iYWxTdHlsZXMiLCJ1c2VUaGVtZSIsImpzeCIsIl9qc3giLCJzdHlsZXMiLCJ0aGVtZUlkIiwiZGVmYXVsdFRoZW1lIiwidXBwZXJUaGVtZSIsImdsb2JhbFN0eWxlcyIsInByb2Nlc3MiLCJlbnYiLCJOT0RFX0VOViIsInByb3BUeXBlcyIsIm9iamVjdCIsIm9uZU9mVHlwZSIsImFycmF5IiwiZnVuYyIsIm51bWJlciIsInN0cmluZyIsImJvb2wiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///1299\n")},4216:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Z: () => (/* binding */ createStack)\n/* harmony export */ });\n/* unused harmony export style */\n/* harmony import */ var _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(7958);\n/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(3123);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(5466);\n/* harmony import */ var clsx__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(512);\n/* harmony import */ var _mui_utils__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(3608);\n/* harmony import */ var _mui_utils__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(635);\n/* harmony import */ var _mui_utils__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(1662);\n/* harmony import */ var _styled__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(281);\n/* harmony import */ var _useThemeProps__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(7650);\n/* harmony import */ var _styleFunctionSx__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(5059);\n/* harmony import */ var _createTheme__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(7841);\n/* harmony import */ var _breakpoints__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(5730);\n/* harmony import */ var _spacing__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(3229);\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(3823);\n\n\nconst _excluded = [\"component\", \"direction\", \"spacing\", \"divider\", \"children\", \"className\", \"useFlexGap\"];\n\n\n\n\n\n\n\n\n\n\n\nconst defaultTheme = (0,_createTheme__WEBPACK_IMPORTED_MODULE_2__/* [\"default\"] */ .Z)();\n// widening Theme to any so that the consumer can own the theme structure.\nconst defaultCreateStyledComponent = (0,_styled__WEBPACK_IMPORTED_MODULE_3__/* [\"default\"] */ .Z)('div', {\n  name: 'MuiStack',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n});\nfunction useThemePropsDefault(props) {\n  return (0,_useThemeProps__WEBPACK_IMPORTED_MODULE_4__/* [\"default\"] */ .Z)({\n    props,\n    name: 'MuiStack',\n    defaultTheme\n  });\n}\n\n/**\n * Return an array with the separator React element interspersed between\n * each React node of the input children.\n *\n * > joinChildren([1,2,3], 0)\n * [1,0,2,0,3]\n */\nfunction joinChildren(children, separator) {\n  const childrenArray = react__WEBPACK_IMPORTED_MODULE_0__.Children.toArray(children).filter(Boolean);\n  return childrenArray.reduce((output, child, index) => {\n    output.push(child);\n    if (index < childrenArray.length - 1) {\n      output.push( /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.cloneElement(separator, {\n        key: `separator-${index}`\n      }));\n    }\n    return output;\n  }, []);\n}\nconst getSideFromDirection = direction => {\n  return {\n    row: 'Left',\n    'row-reverse': 'Right',\n    column: 'Top',\n    'column-reverse': 'Bottom'\n  }[direction];\n};\nconst style = ({\n  ownerState,\n  theme\n}) => {\n  let styles = (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_5__/* [\"default\"] */ .Z)({\n    display: 'flex',\n    flexDirection: 'column'\n  }, (0,_breakpoints__WEBPACK_IMPORTED_MODULE_6__/* .handleBreakpoints */ .k9)({\n    theme\n  }, (0,_breakpoints__WEBPACK_IMPORTED_MODULE_6__/* .resolveBreakpointValues */ .P$)({\n    values: ownerState.direction,\n    breakpoints: theme.breakpoints.values\n  }), propValue => ({\n    flexDirection: propValue\n  })));\n  if (ownerState.spacing) {\n    const transformer = (0,_spacing__WEBPACK_IMPORTED_MODULE_7__/* .createUnarySpacing */ .hB)(theme);\n    const base = Object.keys(theme.breakpoints.values).reduce((acc, breakpoint) => {\n      if (typeof ownerState.spacing === 'object' && ownerState.spacing[breakpoint] != null || typeof ownerState.direction === 'object' && ownerState.direction[breakpoint] != null) {\n        acc[breakpoint] = true;\n      }\n      return acc;\n    }, {});\n    const directionValues = (0,_breakpoints__WEBPACK_IMPORTED_MODULE_6__/* .resolveBreakpointValues */ .P$)({\n      values: ownerState.direction,\n      base\n    });\n    const spacingValues = (0,_breakpoints__WEBPACK_IMPORTED_MODULE_6__/* .resolveBreakpointValues */ .P$)({\n      values: ownerState.spacing,\n      base\n    });\n    if (typeof directionValues === 'object') {\n      Object.keys(directionValues).forEach((breakpoint, index, breakpoints) => {\n        const directionValue = directionValues[breakpoint];\n        if (!directionValue) {\n          const previousDirectionValue = index > 0 ? directionValues[breakpoints[index - 1]] : 'column';\n          directionValues[breakpoint] = previousDirectionValue;\n        }\n      });\n    }\n    const styleFromPropValue = (propValue, breakpoint) => {\n      if (ownerState.useFlexGap) {\n        return {\n          gap: (0,_spacing__WEBPACK_IMPORTED_MODULE_7__/* .getValue */ .NA)(transformer, propValue)\n        };\n      }\n      return {\n        // The useFlexGap={false} implement relies on each child to give up control of the margin.\n        // We need to reset the margin to avoid double spacing.\n        '& > :not(style):not(style)': {\n          margin: 0\n        },\n        '& > :not(style) ~ :not(style)': {\n          [`margin${getSideFromDirection(breakpoint ? directionValues[breakpoint] : ownerState.direction)}`]: (0,_spacing__WEBPACK_IMPORTED_MODULE_7__/* .getValue */ .NA)(transformer, propValue)\n        }\n      };\n    };\n    styles = (0,_mui_utils__WEBPACK_IMPORTED_MODULE_8__/* [\"default\"] */ .Z)(styles, (0,_breakpoints__WEBPACK_IMPORTED_MODULE_6__/* .handleBreakpoints */ .k9)({\n      theme\n    }, spacingValues, styleFromPropValue));\n  }\n  styles = (0,_breakpoints__WEBPACK_IMPORTED_MODULE_6__/* .mergeBreakpointsInOrder */ .dt)(theme.breakpoints, styles);\n  return styles;\n};\nfunction createStack(options = {}) {\n  const {\n    // This will allow adding custom styled fn (for example for custom sx style function)\n    createStyledComponent = defaultCreateStyledComponent,\n    useThemeProps = useThemePropsDefault,\n    componentName = 'MuiStack'\n  } = options;\n  const useUtilityClasses = () => {\n    const slots = {\n      root: ['root']\n    };\n    return (0,_mui_utils__WEBPACK_IMPORTED_MODULE_9__/* [\"default\"] */ .Z)(slots, slot => (0,_mui_utils__WEBPACK_IMPORTED_MODULE_10__/* [\"default\"] */ .Z)(componentName, slot), {});\n  };\n  const StackRoot = createStyledComponent(style);\n  const Stack = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(function Grid(inProps, ref) {\n    const themeProps = useThemeProps(inProps);\n    const props = (0,_styleFunctionSx__WEBPACK_IMPORTED_MODULE_11__/* [\"default\"] */ .Z)(themeProps); // `color` type conflicts with html color attribute.\n    const {\n        component = 'div',\n        direction = 'column',\n        spacing = 0,\n        divider,\n        children,\n        className,\n        useFlexGap = false\n      } = props,\n      other = (0,_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_12__/* [\"default\"] */ .Z)(props, _excluded);\n    const ownerState = {\n      direction,\n      spacing,\n      useFlexGap\n    };\n    const classes = useUtilityClasses();\n    return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(StackRoot, (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_5__/* [\"default\"] */ .Z)({\n      as: component,\n      ownerState: ownerState,\n      ref: ref,\n      className: (0,clsx__WEBPACK_IMPORTED_MODULE_13__/* [\"default\"] */ .Z)(classes.root, className)\n    }, other, {\n      children: divider ? joinChildren(children, divider) : children\n    }));\n  });\n   false ? 0 : void 0;\n  return Stack;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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azovL2VsZGVyLWJvb2tzLWZlLy4vbm9kZV9tb2R1bGVzL0BtdWkvc3lzdGVtL2VzbS9TdGFjay9jcmVhdGVTdGFjay5qcz8yOWMwIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZSBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZVwiO1xuaW1wb3J0IF9leHRlbmRzIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9leHRlbmRzXCI7XG5jb25zdCBfZXhjbHVkZWQgPSBbXCJjb21wb25lbnRcIiwgXCJkaXJlY3Rpb25cIiwgXCJzcGFjaW5nXCIsIFwiZGl2aWRlclwiLCBcImNoaWxkcmVuXCIsIFwiY2xhc3NOYW1lXCIsIFwidXNlRmxleEdhcFwiXTtcbmltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgY2xzeCBmcm9tICdjbHN4JztcbmltcG9ydCB7IGRlZXBtZXJnZSwgdW5zdGFibGVfY29tcG9zZUNsYXNzZXMgYXMgY29tcG9zZUNsYXNzZXMsIHVuc3RhYmxlX2dlbmVyYXRlVXRpbGl0eUNsYXNzIGFzIGdlbmVyYXRlVXRpbGl0eUNsYXNzIH0gZnJvbSAnQG11aS91dGlscyc7XG5pbXBvcnQgc3lzdGVtU3R5bGVkIGZyb20gJy4uL3N0eWxlZCc7XG5pbXBvcnQgdXNlVGhlbWVQcm9wc1N5c3RlbSBmcm9tICcuLi91c2VUaGVtZVByb3BzJztcbmltcG9ydCB7IGV4dGVuZFN4UHJvcCB9IGZyb20gJy4uL3N0eWxlRnVuY3Rpb25TeCc7XG5pbXBvcnQgY3JlYXRlVGhlbWUgZnJvbSAnLi4vY3JlYXRlVGhlbWUnO1xuaW1wb3J0IHsgaGFuZGxlQnJlYWtwb2ludHMsIG1lcmdlQnJlYWtwb2ludHNJbk9yZGVyLCByZXNvbHZlQnJlYWtwb2ludFZhbHVlcyB9IGZyb20gJy4uL2JyZWFrcG9pbnRzJztcbmltcG9ydCB7IGNyZWF0ZVVuYXJ5U3BhY2luZywgZ2V0VmFsdWUgfSBmcm9tICcuLi9zcGFjaW5nJztcbmltcG9ydCB7IGpzeCBhcyBfanN4IH0gZnJvbSBcInJlYWN0L2pzeC1ydW50aW1lXCI7XG5jb25zdCBkZWZhdWx0VGhlbWUgPSBjcmVhdGVUaGVtZSgpO1xuLy8gd2lkZW5pbmcgVGhlbWUgdG8gYW55IHNvIHRoYXQgdGhlIGNvbnN1bWVyIGNhbiBvd24gdGhlIHRoZW1lIHN0cnVjdHVyZS5cbmNvbnN0IGRlZmF1bHRDcmVhdGVTdHlsZWRDb21wb25lbnQgPSBzeXN0ZW1TdHlsZWQoJ2RpdicsIHtcbiAgbmFtZTogJ011aVN0YWNrJyxcbiAgc2xvdDogJ1Jvb3QnLFxuICBvdmVycmlkZXNSZXNvbHZlcjogKHByb3BzLCBzdHlsZXMpID0+IHN0eWxlcy5yb290XG59KTtcbmZ1bmN0aW9uIHVzZVRoZW1lUHJvcHNEZWZhdWx0KHByb3BzKSB7XG4gIHJldHVybiB1c2VUaGVtZVByb3BzU3lzdGVtKHtcbiAgICBwcm9wcyxcbiAgICBuYW1lOiAnTXVpU3RhY2snLFxuICAgIGRlZmF1bHRUaGVtZVxuICB9KTtcbn1cblxuLyoqXG4gKiBSZXR1cm4gYW4gYXJyYXkgd2l0aCB0aGUgc2VwYXJhdG9yIFJlYWN0IGVsZW1lbnQgaW50ZXJzcGVyc2VkIGJldHdlZW5cbiAqIGVhY2ggUmVhY3Qgbm9kZSBvZiB0aGUgaW5wdXQgY2hpbGRyZW4uXG4gKlxuICogPiBqb2luQ2hpbGRyZW4oWzEsMiwzXSwgMClcbiAqIFsxLDAsMiwwLDNdXG4gKi9cbmZ1bmN0aW9uIGpvaW5DaGlsZHJlbihjaGlsZHJlbiwgc2VwYXJhdG9yKSB7XG4gIGNvbnN0IGNoaWxkcmVuQXJyYXkgPSBSZWFjdC5DaGlsZHJlbi50b0FycmF5KGNoaWxkcmVuKS5maWx0ZXIoQm9vbGVhbik7XG4gIHJldHVybiBjaGlsZHJlbkFycmF5LnJlZHVjZSgob3V0cHV0LCBjaGlsZCwgaW5kZXgpID0+IHtcbiAgICBvdXRwdXQucHVzaChjaGlsZCk7XG4gICAgaWYgKGluZGV4IDwgY2hpbGRyZW5BcnJheS5sZW5ndGggLSAxKSB7XG4gICAgICBvdXRwdXQucHVzaCggLyojX19QVVJFX18qL1JlYWN0LmNsb25lRWxlbWVudChzZXBhcmF0b3IsIHtcbiAgICAgICAga2V5OiBgc2VwYXJhdG9yLSR7aW5kZXh9YFxuICAgICAgfSkpO1xuICAgIH1cbiAgICByZXR1cm4gb3V0cHV0O1xuICB9LCBbXSk7XG59XG5jb25zdCBnZXRTaWRlRnJvbURpcmVjdGlvbiA9IGRpcmVjdGlvbiA9PiB7XG4gIHJldHVybiB7XG4gICAgcm93OiAnTGVmdCcsXG4gICAgJ3Jvdy1yZXZlcnNlJzogJ1JpZ2h0JyxcbiAgICBjb2x1bW46ICdUb3AnLFxuICAgICdjb2x1bW4tcmV2ZXJzZSc6ICdCb3R0b20nXG4gIH1bZGlyZWN0aW9uXTtcbn07XG5leHBvcnQgY29uc3Qgc3R5bGUgPSAoe1xuICBvd25lclN0YXRlLFxuICB0aGVtZVxufSkgPT4ge1xuICBsZXQgc3R5bGVzID0gX2V4dGVuZHMoe1xuICAgIGRpc3BsYXk6ICdmbGV4JyxcbiAgICBmbGV4RGlyZWN0aW9uOiAnY29sdW1uJ1xuICB9LCBoYW5kbGVCcmVha3BvaW50cyh7XG4gICAgdGhlbWVcbiAgfSwgcmVzb2x2ZUJyZWFrcG9pbnRWYWx1ZXMoe1xuICAgIHZhbHVlczogb3duZXJTdGF0ZS5kaXJlY3Rpb24sXG4gICAgYnJlYWtwb2ludHM6IHRoZW1lLmJyZWFrcG9pbnRzLnZhbHVlc1xuICB9KSwgcHJvcFZhbHVlID0+ICh7XG4gICAgZmxleERpcmVjdGlvbjogcHJvcFZhbHVlXG4gIH0pKSk7XG4gIGlmIChvd25lclN0YXRlLnNwYWNpbmcpIHtcbiAgICBjb25zdCB0cmFuc2Zvcm1lciA9IGNyZWF0ZVVuYXJ5U3BhY2luZyh0aGVtZSk7XG4gICAgY29uc3QgYmFzZSA9IE9iamVjdC5rZXlzKHRoZW1lLmJyZWFrcG9pbnRzLnZhbHVlcykucmVkdWNlKChhY2MsIGJyZWFrcG9pbnQpID0+IHtcbiAgICAgIGlmICh0eXBlb2Ygb3duZXJTdGF0ZS5zcGFjaW5nID09PSAnb2JqZWN0JyAmJiBvd25lclN0YXRlLnNwYWNpbmdbYnJlYWtwb2ludF0gIT0gbnVsbCB8fCB0eXBlb2Ygb3duZXJTdGF0ZS5kaXJlY3Rpb24gPT09ICdvYmplY3QnICYmIG93bmVyU3RhdGUuZGlyZWN0aW9uW2JyZWFrcG9pbnRdICE9IG51bGwpIHtcbiAgICAgICAgYWNjW2JyZWFrcG9pbnRdID0gdHJ1ZTtcbiAgICAgIH1cbiAgICAgIHJldHVybiBhY2M7XG4gICAgfSwge30pO1xuICAgIGNvbnN0IGRpcmVjdGlvblZhbHVlcyA9IHJlc29sdmVCcmVha3BvaW50VmFsdWVzKHtcbiAgICAgIHZhbHVlczogb3duZXJTdGF0ZS5kaXJlY3Rpb24sXG4gICAgICBiYXNlXG4gICAgfSk7XG4gICAgY29uc3Qgc3BhY2luZ1ZhbHVlcyA9IHJlc29sdmVCcmVha3BvaW50VmFsdWVzKHtcbiAgICAgIHZhbHVlczogb3duZXJTdGF0ZS5zcGFjaW5nLFxuICAgICAgYmFzZVxuICAgIH0pO1xuICAgIGlmICh0eXBlb2YgZGlyZWN0aW9uVmFsdWVzID09PSAnb2JqZWN0Jykge1xuICAgICAgT2JqZWN0LmtleXMoZGlyZWN0aW9uVmFsdWVzKS5mb3JFYWNoKChicmVha3BvaW50LCBpbmRleCwgYnJlYWtwb2ludHMpID0+IHtcbiAgICAgICAgY29uc3QgZGlyZWN0aW9uVmFsdWUgPSBkaXJlY3Rpb25WYWx1ZXNbYnJlYWtwb2ludF07XG4gICAgICAgIGlmICghZGlyZWN0aW9uVmFsdWUpIHtcbiAgICAgICAgICBjb25zdCBwcmV2aW91c0RpcmVjdGlvblZhbHVlID0gaW5kZXggPiAwID8gZGlyZWN0aW9uVmFsdWVzW2JyZWFrcG9pbnRzW2luZGV4IC0gMV1dIDogJ2NvbHVtbic7XG4gICAgICAgICAgZGlyZWN0aW9uVmFsdWVzW2JyZWFrcG9pbnRdID0gcHJldmlvdXNEaXJlY3Rpb25WYWx1ZTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfVxuICAgIGNvbnN0IHN0eWxlRnJvbVByb3BWYWx1ZSA9IChwcm9wVmFsdWUsIGJyZWFrcG9pbnQpID0+IHtcbiAgICAgIGlmIChvd25lclN0YXRlLnVzZUZsZXhHYXApIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICBnYXA6IGdldFZhbHVlKHRyYW5zZm9ybWVyLCBwcm9wVmFsdWUpXG4gICAgICAgIH07XG4gICAgICB9XG4gICAgICByZXR1cm4ge1xuICAgICAgICAvLyBUaGUgdXNlRmxleEdhcD17ZmFsc2V9IGltcGxlbWVudCByZWxpZXMgb24gZWFjaCBjaGlsZCB0byBnaXZlIHVwIGNvbnRyb2wgb2YgdGhlIG1hcmdpbi5cbiAgICAgICAgLy8gV2UgbmVlZCB0byByZXNldCB0aGUgbWFyZ2luIHRvIGF2b2lkIGRvdWJsZSBzcGFjaW5nLlxuICAgICAgICAnJiA+IDpub3Qoc3R5bGUpOm5vdChzdHlsZSknOiB7XG4gICAgICAgICAgbWFyZ2luOiAwXG4gICAgICAgIH0sXG4gICAgICAgICcmID4gOm5vdChzdHlsZSkgfiA6bm90KHN0eWxlKSc6IHtcbiAgICAgICAgICBbYG1hcmdpbiR7Z2V0U2lkZUZyb21EaXJlY3Rpb24oYnJlYWtwb2ludCA/IGRpcmVjdGlvblZhbHVlc1ticmVha3BvaW50XSA6IG93bmVyU3RhdGUuZGlyZWN0aW9uKX1gXTogZ2V0VmFsdWUodHJhbnNmb3JtZXIsIHByb3BWYWx1ZSlcbiAgICAgICAgfVxuICAgICAgfTtcbiAgICB9O1xuICAgIHN0eWxlcyA9IGRlZXBtZXJnZShzdHlsZXMsIGhhbmRsZUJyZWFrcG9pbnRzKHtcbiAgICAgIHRoZW1lXG4gICAgfSwgc3BhY2luZ1ZhbHVlcywgc3R5bGVGcm9tUHJvcFZhbHVlKSk7XG4gIH1cbiAgc3R5bGVzID0gbWVyZ2VCcmVha3BvaW50c0luT3JkZXIodGhlbWUuYnJlYWtwb2ludHMsIHN0eWxlcyk7XG4gIHJldHVybiBzdHlsZXM7XG59O1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gY3JlYXRlU3RhY2sob3B0aW9ucyA9IHt9KSB7XG4gIGNvbnN0IHtcbiAgICAvLyBUaGlzIHdpbGwgYWxsb3cgYWRkaW5nIGN1c3RvbSBzdHlsZWQgZm4gKGZvciBleGFtcGxlIGZvciBjdXN0b20gc3ggc3R5bGUgZnVuY3Rpb24pXG4gICAgY3JlYXRlU3R5bGVkQ29tcG9uZW50ID0gZGVmYXVsdENyZWF0ZVN0eWxlZENvbXBvbmVudCxcbiAgICB1c2VUaGVtZVByb3BzID0gdXNlVGhlbWVQcm9wc0RlZmF1bHQsXG4gICAgY29tcG9uZW50TmFtZSA9ICdNdWlTdGFjaydcbiAgfSA9IG9wdGlvbnM7XG4gIGNvbnN0IHVzZVV0aWxpdHlDbGFzc2VzID0gKCkgPT4ge1xuICAgIGNvbnN0IHNsb3RzID0ge1xuICAgICAgcm9vdDogWydyb290J11cbiAgICB9O1xuICAgIHJldHVybiBjb21wb3NlQ2xhc3NlcyhzbG90cywgc2xvdCA9PiBnZW5lcmF0ZVV0aWxpdHlDbGFzcyhjb21wb25lbnROYW1lLCBzbG90KSwge30pO1xuICB9O1xuICBjb25zdCBTdGFja1Jvb3QgPSBjcmVhdGVTdHlsZWRDb21wb25lbnQoc3R5bGUpO1xuICBjb25zdCBTdGFjayA9IC8qI19fUFVSRV9fKi9SZWFjdC5mb3J3YXJkUmVmKGZ1bmN0aW9uIEdyaWQoaW5Qcm9wcywgcmVmKSB7XG4gICAgY29uc3QgdGhlbWVQcm9wcyA9IHVzZVRoZW1lUHJvcHMoaW5Qcm9wcyk7XG4gICAgY29uc3QgcHJvcHMgPSBleHRlbmRTeFByb3AodGhlbWVQcm9wcyk7IC8vIGBjb2xvcmAgdHlwZSBjb25mbGljdHMgd2l0aCBodG1sIGNvbG9yIGF0dHJpYnV0ZS5cbiAgICBjb25zdCB7XG4gICAgICAgIGNvbXBvbmVudCA9ICdkaXYnLFxuICAgICAgICBkaXJlY3Rpb24gPSAnY29sdW1uJyxcbiAgICAgICAgc3BhY2luZyA9IDAsXG4gICAgICAgIGRpdmlkZXIsXG4gICAgICAgIGNoaWxkcmVuLFxuICAgICAgICBjbGFzc05hbWUsXG4gICAgICAgIHVzZUZsZXhHYXAgPSBmYWxzZVxuICAgICAgfSA9IHByb3BzLFxuICAgICAgb3RoZXIgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZShwcm9wcywgX2V4Y2x1ZGVkKTtcbiAgICBjb25zdCBvd25lclN0YXRlID0ge1xuICAgICAgZGlyZWN0aW9uLFxuICAgICAgc3BhY2luZyxcbiAgICAgIHVzZUZsZXhHYXBcbiAgICB9O1xuICAgIGNvbnN0IGNsYXNzZXMgPSB1c2VVdGlsaXR5Q2xhc3NlcygpO1xuICAgIHJldHVybiAvKiNfX1BVUkVfXyovX2pzeChTdGFja1Jvb3QsIF9leHRlbmRzKHtcbiAgICAgIGFzOiBjb21wb25lbnQsXG4gICAgICBvd25lclN0YXRlOiBvd25lclN0YXRlLFxuICAgICAgcmVmOiByZWYsXG4gICAgICBjbGFzc05hbWU6IGNsc3goY2xhc3Nlcy5yb290LCBjbGFzc05hbWUpXG4gICAgfSwgb3RoZXIsIHtcbiAgICAgIGNoaWxkcmVuOiBkaXZpZGVyID8gam9pbkNoaWxkcmVuKGNoaWxkcmVuLCBkaXZpZGVyKSA6IGNoaWxkcmVuXG4gICAgfSkpO1xuICB9KTtcbiAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gU3RhY2sucHJvcFR5cGVzIC8qIHJlbW92ZS1wcm9wdHlwZXMgKi8gPSB7XG4gICAgY2hpbGRyZW46IFByb3BUeXBlcy5ub2RlLFxuICAgIGRpcmVjdGlvbjogUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLm9uZU9mKFsnY29sdW1uLXJldmVyc2UnLCAnY29sdW1uJywgJ3Jvdy1yZXZlcnNlJywgJ3JvdyddKSwgUHJvcFR5cGVzLmFycmF5T2YoUHJvcFR5cGVzLm9uZU9mKFsnY29sdW1uLXJldmVyc2UnLCAnY29sdW1uJywgJ3Jvdy1yZXZlcnNlJywgJ3JvdyddKSksIFByb3BUeXBlcy5vYmplY3RdKSxcbiAgICBkaXZpZGVyOiBQcm9wVHlwZXMubm9kZSxcbiAgICBzcGFjaW5nOiBQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMuYXJyYXlPZihQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMubnVtYmVyLCBQcm9wVHlwZXMuc3RyaW5nXSkpLCBQcm9wVHlwZXMubnVtYmVyLCBQcm9wVHlwZXMub2JqZWN0LCBQcm9wVHlwZXMuc3RyaW5nXSksXG4gICAgc3g6IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5hcnJheU9mKFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5mdW5jLCBQcm9wVHlwZXMub2JqZWN0LCBQcm9wVHlwZXMuYm9vbF0pKSwgUHJvcFR5cGVzLmZ1bmMsIFByb3BUeXBlcy5vYmplY3RdKVxuICB9IDogdm9pZCAwO1xuICByZXR1cm4gU3RhY2s7XG59Il0sIm5hbWVzIjpbIl9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlIiwiX2V4dGVuZHMiLCJfZXhjbHVkZWQiLCJSZWFjdCIsIlByb3BUeXBlcyIsImNsc3giLCJkZWVwbWVyZ2UiLCJ1bnN0YWJsZV9jb21wb3NlQ2xhc3NlcyIsImNvbXBvc2VDbGFzc2VzIiwidW5zdGFibGVfZ2VuZXJhdGVVdGlsaXR5Q2xhc3MiLCJnZW5lcmF0ZVV0aWxpdHlDbGFzcyIsInN5c3RlbVN0eWxlZCIsInVzZVRoZW1lUHJvcHNTeXN0ZW0iLCJleHRlbmRTeFByb3AiLCJjcmVhdGVUaGVtZSIsImhhbmRsZUJyZWFrcG9pbnRzIiwibWVyZ2VCcmVha3BvaW50c0luT3JkZXIiLCJyZXNvbHZlQnJlYWtwb2ludFZhbHVlcyIsImNyZWF0ZVVuYXJ5U3BhY2luZyIsImdldFZhbHVlIiwianN4IiwiX2pzeCIsImRlZmF1bHRUaGVtZSIsImRlZmF1bHRDcmVhdGVTdHlsZWRDb21wb25lbnQiLCJuYW1lIiwic2xvdCIsIm92ZXJyaWRlc1Jlc29sdmVyIiwicHJvcHMiLCJzdHlsZXMiLCJyb290IiwidXNlVGhlbWVQcm9wc0RlZmF1bHQiLCJqb2luQ2hpbGRyZW4iLCJjaGlsZHJlbiIsInNlcGFyYXRvciIsImNoaWxkcmVuQXJyYXkiLCJDaGlsZHJlbiIsInRvQXJyYXkiLCJmaWx0ZXIiLCJCb29sZWFuIiwicmVkdWNlIiwib3V0cHV0IiwiY2hpbGQiLCJpbmRleCIsInB1c2giLCJsZW5ndGgiLCJjbG9uZUVsZW1lbnQiLCJrZXkiLCJnZXRTaWRlRnJvbURpcmVjdGlvbiIsImRpcmVjdGlvbiIsInJvdyIsImNvbHVtbiIsInN0eWxlIiwib3duZXJTdGF0ZSIsInRoZW1lIiwiZGlzcGxheSIsImZsZXhEaXJlY3Rpb24iLCJ2YWx1ZXMiLCJicmVha3BvaW50cyIsInByb3BWYWx1ZSIsInNwYWNpbmciLCJ0cmFuc2Zvcm1lciIsImJhc2UiLCJPYmplY3QiLCJrZXlzIiwiYWNjIiwiYnJlYWtwb2ludCIsImRpcmVjdGlvblZhbHVlcyIsInNwYWNpbmdWYWx1ZXMiLCJmb3JFYWNoIiwiZGlyZWN0aW9uVmFsdWUiLCJwcmV2aW91c0RpcmVjdGlvblZhbHVlIiwic3R5bGVGcm9tUHJvcFZhbHVlIiwidXNlRmxleEdhcCIsImdhcCIsIm1hcmdpbiIsImNyZWF0ZVN0YWNrIiwib3B0aW9ucyIsImNyZWF0ZVN0eWxlZENvbXBvbmVudCIsInVzZVRoZW1lUHJvcHMiLCJjb21wb25lbnROYW1lIiwidXNlVXRpbGl0eUNsYXNzZXMiLCJzbG90cyIsIlN0YWNrUm9vdCIsIlN0YWNrIiwiZm9yd2FyZFJlZiIsIkdyaWQiLCJpblByb3BzIiwicmVmIiwidGhlbWVQcm9wcyIsImNvbXBvbmVudCIsImRpdmlkZXIiLCJjbGFzc05hbWUiLCJvdGhlciIsImNsYXNzZXMiLCJhcyIsInByb2Nlc3MiLCJlbnYiLCJOT0RFX0VOViIsInByb3BUeXBlcyIsIm5vZGUiLCJvbmVPZlR5cGUiLCJvbmVPZiIsImFycmF5T2YiLCJvYmplY3QiLCJudW1iZXIiLCJzdHJpbmciLCJzeCIsImZ1bmMiLCJib29sIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///4216\n")},2041:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Z: () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(3123);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(5466);\n/* harmony import */ var _mui_private_theming__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(8986);\n/* harmony import */ var _mui_private_theming__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(5333);\n/* harmony import */ var _mui_styled_engine__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(7644);\n/* harmony import */ var _useThemeWithoutDefault__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(7609);\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(3823);\n\'use client\';\n\n\n\n\n\n\n\n\n\nconst EMPTY_THEME = {};\nfunction useThemeScoping(themeId, upperTheme, localTheme, isPrivate = false) {\n  return react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => {\n    const resolvedTheme = themeId ? upperTheme[themeId] || upperTheme : upperTheme;\n    if (typeof localTheme === \'function\') {\n      const mergedTheme = localTheme(resolvedTheme);\n      const result = themeId ? (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)({}, upperTheme, {\n        [themeId]: mergedTheme\n      }) : mergedTheme;\n      // must return a function for the private theme to NOT merge with the upper theme.\n      // see the test case "use provided theme from a callback" in ThemeProvider.test.js\n      if (isPrivate) {\n        return () => result;\n      }\n      return result;\n    }\n    return themeId ? (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)({}, upperTheme, {\n      [themeId]: localTheme\n    }) : (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)({}, upperTheme, localTheme);\n  }, [themeId, upperTheme, localTheme, isPrivate]);\n}\n\n/**\n * This component makes the `theme` available down the React tree.\n * It should preferably be used at **the root of your component tree**.\n *\n * <ThemeProvider theme={theme}> // existing use case\n * <ThemeProvider theme={{ id: theme }}> // theme scoping\n */\nfunction ThemeProvider(props) {\n  const {\n    children,\n    theme: localTheme,\n    themeId\n  } = props;\n  const upperTheme = (0,_useThemeWithoutDefault__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)(EMPTY_THEME);\n  const upperPrivateTheme = (0,_mui_private_theming__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)() || EMPTY_THEME;\n  if (false) {}\n  const engineTheme = useThemeScoping(themeId, upperTheme, localTheme);\n  const privateTheme = useThemeScoping(themeId, upperPrivateTheme, localTheme, true);\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_private_theming__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z, {\n    theme: privateTheme,\n    children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_styled_engine__WEBPACK_IMPORTED_MODULE_6__.T.Provider, {\n      value: engineTheme,\n      children: children\n    })\n  });\n}\n false ? 0 : void 0;\nif (false) {}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (ThemeProvider);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///2041\n')},5730:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   L7: () => (/* binding */ removeUnusedBreakpoints),\n/* harmony export */   P$: () => (/* binding */ resolveBreakpointValues),\n/* harmony export */   VO: () => (/* binding */ values),\n/* harmony export */   W8: () => (/* binding */ createEmptyBreakpointObject),\n/* harmony export */   dt: () => (/* binding */ mergeBreakpointsInOrder),\n/* harmony export */   k9: () => (/* binding */ handleBreakpoints)\n/* harmony export */ });\n/* unused harmony export computeBreakpointsBase */\n/* harmony import */ var _mui_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3608);\n\n\n\n\n\n// The breakpoint **start** at this value.\n// For instance with the first breakpoint xs: [xs, sm[.\nconst values = {\n  xs: 0,\n  // phone\n  sm: 600,\n  // tablet\n  md: 900,\n  // small laptop\n  lg: 1200,\n  // desktop\n  xl: 1536 // large screen\n};\n\nconst defaultBreakpoints = {\n  // Sorted ASC by size. That's important.\n  // It can't be configured as it's used statically for propTypes.\n  keys: ['xs', 'sm', 'md', 'lg', 'xl'],\n  up: key => `@media (min-width:${values[key]}px)`\n};\nfunction handleBreakpoints(props, propValue, styleFromPropValue) {\n  const theme = props.theme || {};\n  if (Array.isArray(propValue)) {\n    const themeBreakpoints = theme.breakpoints || defaultBreakpoints;\n    return propValue.reduce((acc, item, index) => {\n      acc[themeBreakpoints.up(themeBreakpoints.keys[index])] = styleFromPropValue(propValue[index]);\n      return acc;\n    }, {});\n  }\n  if (typeof propValue === 'object') {\n    const themeBreakpoints = theme.breakpoints || defaultBreakpoints;\n    return Object.keys(propValue).reduce((acc, breakpoint) => {\n      // key is breakpoint\n      if (Object.keys(themeBreakpoints.values || values).indexOf(breakpoint) !== -1) {\n        const mediaKey = themeBreakpoints.up(breakpoint);\n        acc[mediaKey] = styleFromPropValue(propValue[breakpoint], breakpoint);\n      } else {\n        const cssKey = breakpoint;\n        acc[cssKey] = propValue[cssKey];\n      }\n      return acc;\n    }, {});\n  }\n  const output = styleFromPropValue(propValue);\n  return output;\n}\nfunction breakpoints(styleFunction) {\n  // false positive\n  // eslint-disable-next-line react/function-component-definition\n  const newStyleFunction = props => {\n    const theme = props.theme || {};\n    const base = styleFunction(props);\n    const themeBreakpoints = theme.breakpoints || defaultBreakpoints;\n    const extended = themeBreakpoints.keys.reduce((acc, key) => {\n      if (props[key]) {\n        acc = acc || {};\n        acc[themeBreakpoints.up(key)] = styleFunction(_extends({\n          theme\n        }, props[key]));\n      }\n      return acc;\n    }, null);\n    return merge(base, extended);\n  };\n  newStyleFunction.propTypes =  false ? 0 : {};\n  newStyleFunction.filterProps = ['xs', 'sm', 'md', 'lg', 'xl', ...styleFunction.filterProps];\n  return newStyleFunction;\n}\nfunction createEmptyBreakpointObject(breakpointsInput = {}) {\n  var _breakpointsInput$key;\n  const breakpointsInOrder = (_breakpointsInput$key = breakpointsInput.keys) == null ? void 0 : _breakpointsInput$key.reduce((acc, key) => {\n    const breakpointStyleKey = breakpointsInput.up(key);\n    acc[breakpointStyleKey] = {};\n    return acc;\n  }, {});\n  return breakpointsInOrder || {};\n}\nfunction removeUnusedBreakpoints(breakpointKeys, style) {\n  return breakpointKeys.reduce((acc, key) => {\n    const breakpointOutput = acc[key];\n    const isBreakpointUnused = !breakpointOutput || Object.keys(breakpointOutput).length === 0;\n    if (isBreakpointUnused) {\n      delete acc[key];\n    }\n    return acc;\n  }, style);\n}\nfunction mergeBreakpointsInOrder(breakpointsInput, ...styles) {\n  const emptyBreakpoints = createEmptyBreakpointObject(breakpointsInput);\n  const mergedOutput = [emptyBreakpoints, ...styles].reduce((prev, next) => (0,_mui_utils__WEBPACK_IMPORTED_MODULE_0__/* [\"default\"] */ .Z)(prev, next), {});\n  return removeUnusedBreakpoints(Object.keys(emptyBreakpoints), mergedOutput);\n}\n\n// compute base for responsive values; e.g.,\n// [1,2,3] => {xs: true, sm: true, md: true}\n// {xs: 1, sm: 2, md: 3} => {xs: true, sm: true, md: true}\nfunction computeBreakpointsBase(breakpointValues, themeBreakpoints) {\n  // fixed value\n  if (typeof breakpointValues !== 'object') {\n    return {};\n  }\n  const base = {};\n  const breakpointsKeys = Object.keys(themeBreakpoints);\n  if (Array.isArray(breakpointValues)) {\n    breakpointsKeys.forEach((breakpoint, i) => {\n      if (i < breakpointValues.length) {\n        base[breakpoint] = true;\n      }\n    });\n  } else {\n    breakpointsKeys.forEach(breakpoint => {\n      if (breakpointValues[breakpoint] != null) {\n        base[breakpoint] = true;\n      }\n    });\n  }\n  return base;\n}\nfunction resolveBreakpointValues({\n  values: breakpointValues,\n  breakpoints: themeBreakpoints,\n  base: customBase\n}) {\n  const base = customBase || computeBreakpointsBase(breakpointValues, themeBreakpoints);\n  const keys = Object.keys(base);\n  if (keys.length === 0) {\n    return breakpointValues;\n  }\n  let previous;\n  return keys.reduce((acc, breakpoint, i) => {\n    if (Array.isArray(breakpointValues)) {\n      acc[breakpoint] = breakpointValues[i] != null ? breakpointValues[i] : breakpointValues[previous];\n      previous = i;\n    } else if (typeof breakpointValues === 'object') {\n      acc[breakpoint] = breakpointValues[breakpoint] != null ? breakpointValues[breakpoint] : breakpointValues[previous];\n      previous = breakpoint;\n    } else {\n      acc[breakpoint] = breakpointValues;\n    }\n    return acc;\n  }, {});\n}\n/* unused harmony default export */ var __WEBPACK_DEFAULT_EXPORT__ = ((/* unused pure expression or super */ null && (breakpoints)));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///5730\n")},5285:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   $n: () => (/* binding */ lighten),\n/* harmony export */   Fq: () => (/* binding */ alpha),\n/* harmony export */   _4: () => (/* binding */ emphasize),\n/* harmony export */   _j: () => (/* binding */ darken),\n/* harmony export */   mi: () => (/* binding */ getContrastRatio)\n/* harmony export */ });\n/* unused harmony exports hexToRgb, decomposeColor, colorChannel, private_safeColorChannel, recomposeColor, rgbToHex, hslToRgb, getLuminance, private_safeAlpha, private_safeDarken, private_safeLighten, private_safeEmphasize */\n/* harmony import */ var _mui_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(8281);\n\n/* eslint-disable @typescript-eslint/naming-convention */\n/**\n * Returns a number whose value is limited to the given range.\n * @param {number} value The value to be clamped\n * @param {number} min The lower boundary of the output range\n * @param {number} max The upper boundary of the output range\n * @returns {number} A number in the range [min, max]\n */\nfunction clamp(value, min = 0, max = 1) {\n  if (false) {}\n  return Math.min(Math.max(min, value), max);\n}\n\n/**\n * Converts a color from CSS hex format to CSS rgb format.\n * @param {string} color - Hex color, i.e. #nnn or #nnnnnn\n * @returns {string} A CSS rgb color string\n */\nfunction hexToRgb(color) {\n  color = color.slice(1);\n  const re = new RegExp(`.{1,${color.length >= 6 ? 2 : 1}}`, 'g');\n  let colors = color.match(re);\n  if (colors && colors[0].length === 1) {\n    colors = colors.map(n => n + n);\n  }\n  return colors ? `rgb${colors.length === 4 ? 'a' : ''}(${colors.map((n, index) => {\n    return index < 3 ? parseInt(n, 16) : Math.round(parseInt(n, 16) / 255 * 1000) / 1000;\n  }).join(', ')})` : '';\n}\nfunction intToHex(int) {\n  const hex = int.toString(16);\n  return hex.length === 1 ? `0${hex}` : hex;\n}\n\n/**\n * Returns an object with the type and values of a color.\n *\n * Note: Does not support rgb % values.\n * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color()\n * @returns {object} - A MUI color object: {type: string, values: number[]}\n */\nfunction decomposeColor(color) {\n  // Idempotent\n  if (color.type) {\n    return color;\n  }\n  if (color.charAt(0) === '#') {\n    return decomposeColor(hexToRgb(color));\n  }\n  const marker = color.indexOf('(');\n  const type = color.substring(0, marker);\n  if (['rgb', 'rgba', 'hsl', 'hsla', 'color'].indexOf(type) === -1) {\n    throw new Error( false ? 0 : (0,_mui_utils__WEBPACK_IMPORTED_MODULE_0__/* [\"default\"] */ .Z)(9, color));\n  }\n  let values = color.substring(marker + 1, color.length - 1);\n  let colorSpace;\n  if (type === 'color') {\n    values = values.split(' ');\n    colorSpace = values.shift();\n    if (values.length === 4 && values[3].charAt(0) === '/') {\n      values[3] = values[3].slice(1);\n    }\n    if (['srgb', 'display-p3', 'a98-rgb', 'prophoto-rgb', 'rec-2020'].indexOf(colorSpace) === -1) {\n      throw new Error( false ? 0 : (0,_mui_utils__WEBPACK_IMPORTED_MODULE_0__/* [\"default\"] */ .Z)(10, colorSpace));\n    }\n  } else {\n    values = values.split(',');\n  }\n  values = values.map(value => parseFloat(value));\n  return {\n    type,\n    values,\n    colorSpace\n  };\n}\n\n/**\n * Returns a channel created from the input color.\n *\n * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color()\n * @returns {string} - The channel for the color, that can be used in rgba or hsla colors\n */\nconst colorChannel = color => {\n  const decomposedColor = decomposeColor(color);\n  return decomposedColor.values.slice(0, 3).map((val, idx) => decomposedColor.type.indexOf('hsl') !== -1 && idx !== 0 ? `${val}%` : val).join(' ');\n};\nconst private_safeColorChannel = (color, warning) => {\n  try {\n    return colorChannel(color);\n  } catch (error) {\n    if (warning && \"production\" !== 'production') {}\n    return color;\n  }\n};\n\n/**\n * Converts a color object with type and values to a string.\n * @param {object} color - Decomposed color\n * @param {string} color.type - One of: 'rgb', 'rgba', 'hsl', 'hsla', 'color'\n * @param {array} color.values - [n,n,n] or [n,n,n,n]\n * @returns {string} A CSS color string\n */\nfunction recomposeColor(color) {\n  const {\n    type,\n    colorSpace\n  } = color;\n  let {\n    values\n  } = color;\n  if (type.indexOf('rgb') !== -1) {\n    // Only convert the first 3 values to int (i.e. not alpha)\n    values = values.map((n, i) => i < 3 ? parseInt(n, 10) : n);\n  } else if (type.indexOf('hsl') !== -1) {\n    values[1] = `${values[1]}%`;\n    values[2] = `${values[2]}%`;\n  }\n  if (type.indexOf('color') !== -1) {\n    values = `${colorSpace} ${values.join(' ')}`;\n  } else {\n    values = `${values.join(', ')}`;\n  }\n  return `${type}(${values})`;\n}\n\n/**\n * Converts a color from CSS rgb format to CSS hex format.\n * @param {string} color - RGB color, i.e. rgb(n, n, n)\n * @returns {string} A CSS rgb color string, i.e. #nnnnnn\n */\nfunction rgbToHex(color) {\n  // Idempotent\n  if (color.indexOf('#') === 0) {\n    return color;\n  }\n  const {\n    values\n  } = decomposeColor(color);\n  return `#${values.map((n, i) => intToHex(i === 3 ? Math.round(255 * n) : n)).join('')}`;\n}\n\n/**\n * Converts a color from hsl format to rgb format.\n * @param {string} color - HSL color values\n * @returns {string} rgb color values\n */\nfunction hslToRgb(color) {\n  color = decomposeColor(color);\n  const {\n    values\n  } = color;\n  const h = values[0];\n  const s = values[1] / 100;\n  const l = values[2] / 100;\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  let type = 'rgb';\n  const rgb = [Math.round(f(0) * 255), Math.round(f(8) * 255), Math.round(f(4) * 255)];\n  if (color.type === 'hsla') {\n    type += 'a';\n    rgb.push(values[3]);\n  }\n  return recomposeColor({\n    type,\n    values: rgb\n  });\n}\n/**\n * The relative brightness of any point in a color space,\n * normalized to 0 for darkest black and 1 for lightest white.\n *\n * Formula: https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color()\n * @returns {number} The relative brightness of the color in the range 0 - 1\n */\nfunction getLuminance(color) {\n  color = decomposeColor(color);\n  let rgb = color.type === 'hsl' || color.type === 'hsla' ? decomposeColor(hslToRgb(color)).values : color.values;\n  rgb = rgb.map(val => {\n    if (color.type !== 'color') {\n      val /= 255; // normalized\n    }\n\n    return val <= 0.03928 ? val / 12.92 : ((val + 0.055) / 1.055) ** 2.4;\n  });\n\n  // Truncate at 3 digits\n  return Number((0.2126 * rgb[0] + 0.7152 * rgb[1] + 0.0722 * rgb[2]).toFixed(3));\n}\n\n/**\n * Calculates the contrast ratio between two colors.\n *\n * Formula: https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n * @param {string} foreground - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()\n * @param {string} background - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()\n * @returns {number} A contrast ratio value in the range 0 - 21.\n */\nfunction getContrastRatio(foreground, background) {\n  const lumA = getLuminance(foreground);\n  const lumB = getLuminance(background);\n  return (Math.max(lumA, lumB) + 0.05) / (Math.min(lumA, lumB) + 0.05);\n}\n\n/**\n * Sets the absolute transparency of a color.\n * Any existing alpha values are overwritten.\n * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color()\n * @param {number} value - value to set the alpha channel to in the range 0 - 1\n * @returns {string} A CSS color string. Hex input values are returned as rgb\n */\nfunction alpha(color, value) {\n  color = decomposeColor(color);\n  value = clamp(value);\n  if (color.type === 'rgb' || color.type === 'hsl') {\n    color.type += 'a';\n  }\n  if (color.type === 'color') {\n    color.values[3] = `/${value}`;\n  } else {\n    color.values[3] = value;\n  }\n  return recomposeColor(color);\n}\nfunction private_safeAlpha(color, value, warning) {\n  try {\n    return alpha(color, value);\n  } catch (error) {\n    if (warning && \"production\" !== 'production') {}\n    return color;\n  }\n}\n\n/**\n * Darkens a color.\n * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color()\n * @param {number} coefficient - multiplier in the range 0 - 1\n * @returns {string} A CSS color string. Hex input values are returned as rgb\n */\nfunction darken(color, coefficient) {\n  color = decomposeColor(color);\n  coefficient = clamp(coefficient);\n  if (color.type.indexOf('hsl') !== -1) {\n    color.values[2] *= 1 - coefficient;\n  } else if (color.type.indexOf('rgb') !== -1 || color.type.indexOf('color') !== -1) {\n    for (let i = 0; i < 3; i += 1) {\n      color.values[i] *= 1 - coefficient;\n    }\n  }\n  return recomposeColor(color);\n}\nfunction private_safeDarken(color, coefficient, warning) {\n  try {\n    return darken(color, coefficient);\n  } catch (error) {\n    if (warning && \"production\" !== 'production') {}\n    return color;\n  }\n}\n\n/**\n * Lightens a color.\n * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color()\n * @param {number} coefficient - multiplier in the range 0 - 1\n * @returns {string} A CSS color string. Hex input values are returned as rgb\n */\nfunction lighten(color, coefficient) {\n  color = decomposeColor(color);\n  coefficient = clamp(coefficient);\n  if (color.type.indexOf('hsl') !== -1) {\n    color.values[2] += (100 - color.values[2]) * coefficient;\n  } else if (color.type.indexOf('rgb') !== -1) {\n    for (let i = 0; i < 3; i += 1) {\n      color.values[i] += (255 - color.values[i]) * coefficient;\n    }\n  } else if (color.type.indexOf('color') !== -1) {\n    for (let i = 0; i < 3; i += 1) {\n      color.values[i] += (1 - color.values[i]) * coefficient;\n    }\n  }\n  return recomposeColor(color);\n}\nfunction private_safeLighten(color, coefficient, warning) {\n  try {\n    return lighten(color, coefficient);\n  } catch (error) {\n    if (warning && \"production\" !== 'production') {}\n    return color;\n  }\n}\n\n/**\n * Darken or lighten a color, depending on its luminance.\n * Light colors are darkened, dark colors are lightened.\n * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color()\n * @param {number} coefficient=0.15 - multiplier in the range 0 - 1\n * @returns {string} A CSS color string. Hex input values are returned as rgb\n */\nfunction emphasize(color, coefficient = 0.15) {\n  return getLuminance(color) > 0.5 ? darken(color, coefficient) : lighten(color, coefficient);\n}\nfunction private_safeEmphasize(color, coefficient, warning) {\n  try {\n    return private_safeEmphasize(color, coefficient);\n  } catch (error) {\n    if (warning && \"production\" !== 'production') {}\n    return color;\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUFDLElBQUksQ0FBQyxDQUFDLEdBQUdyQyxLQUFLLENBQUN3QixNQUFNLENBQUNhLENBQUMsQ0FBQyxJQUFJc0IsV0FBVztJQUN4RDtFQUNGO0VBQ0EsT0FBT3ZCLGNBQWMsQ0FBQ3BDLEtBQUssQ0FBQztBQUM5QjtBQUNPLFNBQVM4RCxtQkFBbUJBLENBQUM5RCxLQUFLLEVBQUUyRCxXQUFXLEVBQUV6QixPQUFPLEVBQUU7RUFDL0QsSUFBSTtJQUNGLE9BQU8yQixPQUFPLENBQUM3RCxLQUFLLEVBQUUyRCxXQUFXLENBQUM7RUFDcEMsQ0FBQyxDQUFDLE9BQU85RCxLQUFLLEVBQUU7SUFDZCxJQUFJcUMsT0FBTyxJQUFJekMsWUFBb0IsS0FBSyxZQUFZLEVBQUUsRUFFckQ7SUFDRCxPQUFPTyxLQUFLO0VBQ2Q7QUFDRjs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLFNBQVMrRCxTQUFTQSxDQUFDL0QsS0FBSyxFQUFFMkQsV0FBVyxHQUFHLElBQUksRUFBRTtFQUNuRCxPQUFPWCxZQUFZLENBQUNoRCxLQUFLLENBQUMsR0FBRyxHQUFHLEdBQUcwRCxNQUFNLENBQUMxRCxLQUFLLEVBQUUyRCxXQUFXLENBQUMsR0FBR0UsT0FBTyxDQUFDN0QsS0FBSyxFQUFFMkQsV0FBVyxDQUFDO0FBQzdGO0FBQ08sU0FBU0sscUJBQXFCQSxDQUFDaEUsS0FBSyxFQUFFMkQsV0FBVyxFQUFFekIsT0FBTyxFQUFFO0VBQ2pFLElBQUk7SUFDRixPQUFPOEIscUJBQXFCLENBQUNoRSxLQUFLLEVBQUUyRCxXQUFXLENBQUM7RUFDbEQsQ0FBQyxDQUFDLE9BQU85RCxLQUFLLEVBQUU7SUFDZCxJQUFJcUMsT0FBTyxJQUFJekMsWUFBb0IsS0FBSyxZQUFZLEVBQUUsRUFFckQ7SUFDRCxPQUFPTyxLQUFLO0VBQ2Q7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL2VsZGVyLWJvb2tzLWZlLy4vbm9kZV9tb2R1bGVzL0BtdWkvc3lzdGVtL2VzbS9jb2xvck1hbmlwdWxhdG9yLmpzP2Q5MGEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZm9ybWF0TXVpRXJyb3JNZXNzYWdlIGFzIF9mb3JtYXRNdWlFcnJvck1lc3NhZ2UgfSBmcm9tIFwiQG11aS91dGlsc1wiO1xuLyogZXNsaW50LWRpc2FibGUgQHR5cGVzY3JpcHQtZXNsaW50L25hbWluZy1jb252ZW50aW9uICovXG4vKipcbiAqIFJldHVybnMgYSBudW1iZXIgd2hvc2UgdmFsdWUgaXMgbGltaXRlZCB0byB0aGUgZ2l2ZW4gcmFuZ2UuXG4gKiBAcGFyYW0ge251bWJlcn0gdmFsdWUgVGhlIHZhbHVlIHRvIGJlIGNsYW1wZWRcbiAqIEBwYXJhbSB7bnVtYmVyfSBtaW4gVGhlIGxvd2VyIGJvdW5kYXJ5IG9mIHRoZSBvdXRwdXQgcmFuZ2VcbiAqIEBwYXJhbSB7bnVtYmVyfSBtYXggVGhlIHVwcGVyIGJvdW5kYXJ5IG9mIHRoZSBvdXRwdXQgcmFuZ2VcbiAqIEByZXR1cm5zIHtudW1iZXJ9IEEgbnVtYmVyIGluIHRoZSByYW5nZSBbbWluLCBtYXhdXG4gKi9cbmZ1bmN0aW9uIGNsYW1wKHZhbHVlLCBtaW4gPSAwLCBtYXggPSAxKSB7XG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgaWYgKHZhbHVlIDwgbWluIHx8IHZhbHVlID4gbWF4KSB7XG4gICAgICBjb25zb2xlLmVycm9yKGBNVUk6IFRoZSB2YWx1ZSBwcm92aWRlZCAke3ZhbHVlfSBpcyBvdXQgb2YgcmFuZ2UgWyR7bWlufSwgJHttYXh9XS5gKTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIE1hdGgubWluKE1hdGgubWF4KG1pbiwgdmFsdWUpLCBtYXgpO1xufVxuXG4vKipcbiAqIENvbnZlcnRzIGEgY29sb3IgZnJvbSBDU1MgaGV4IGZvcm1hdCB0byBDU1MgcmdiIGZvcm1hdC5cbiAqIEBwYXJhbSB7c3RyaW5nfSBjb2xvciAtIEhleCBjb2xvciwgaS5lLiAjbm5uIG9yICNubm5ubm5cbiAqIEByZXR1cm5zIHtzdHJpbmd9IEEgQ1NTIHJnYiBjb2xvciBzdHJpbmdcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGhleFRvUmdiKGNvbG9yKSB7XG4gIGNvbG9yID0gY29sb3Iuc2xpY2UoMSk7XG4gIGNvbnN0IHJlID0gbmV3IFJlZ0V4cChgLnsxLCR7Y29sb3IubGVuZ3RoID49IDYgPyAyIDogMX19YCwgJ2cnKTtcbiAgbGV0IGNvbG9ycyA9IGNvbG9yLm1hdGNoKHJlKTtcbiAgaWYgKGNvbG9ycyAmJiBjb2xvcnNbMF0ubGVuZ3RoID09PSAxKSB7XG4gICAgY29sb3JzID0gY29sb3JzLm1hcChuID0+IG4gKyBuKTtcbiAgfVxuICByZXR1cm4gY29sb3JzID8gYHJnYiR7Y29sb3JzLmxlbmd0aCA9PT0gNCA/ICdhJyA6ICcnfSgke2NvbG9ycy5tYXAoKG4sIGluZGV4KSA9PiB7XG4gICAgcmV0dXJuIGluZGV4IDwgMyA/IHBhcnNlSW50KG4sIDE2KSA6IE1hdGgucm91bmQocGFyc2VJbnQobiwgMTYpIC8gMjU1ICogMTAwMCkgLyAxMDAwO1xuICB9KS5qb2luKCcsICcpfSlgIDogJyc7XG59XG5mdW5jdGlvbiBpbnRUb0hleChpbnQpIHtcbiAgY29uc3QgaGV4ID0gaW50LnRvU3RyaW5nKDE2KTtcbiAgcmV0dXJuIGhleC5sZW5ndGggPT09IDEgPyBgMCR7aGV4fWAgOiBoZXg7XG59XG5cbi8qKlxuICogUmV0dXJucyBhbiBvYmplY3Qgd2l0aCB0aGUgdHlwZSBhbmQgdmFsdWVzIG9mIGEgY29sb3IuXG4gKlxuICogTm90ZTogRG9lcyBub3Qgc3VwcG9ydCByZ2IgJSB2YWx1ZXMuXG4gKiBAcGFyYW0ge3N0cmluZ30gY29sb3IgLSBDU1MgY29sb3IsIGkuZS4gb25lIG9mOiAjbm5uLCAjbm5ubm5uLCByZ2IoKSwgcmdiYSgpLCBoc2woKSwgaHNsYSgpLCBjb2xvcigpXG4gKiBAcmV0dXJucyB7b2JqZWN0fSAtIEEgTVVJIGNvbG9yIG9iamVjdDoge3R5cGU6IHN0cmluZywgdmFsdWVzOiBudW1iZXJbXX1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGRlY29tcG9zZUNvbG9yKGNvbG9yKSB7XG4gIC8vIElkZW1wb3RlbnRcbiAgaWYgKGNvbG9yLnR5cGUpIHtcbiAgICByZXR1cm4gY29sb3I7XG4gIH1cbiAgaWYgKGNvbG9yLmNoYXJBdCgwKSA9PT0gJyMnKSB7XG4gICAgcmV0dXJuIGRlY29tcG9zZUNvbG9yKGhleFRvUmdiKGNvbG9yKSk7XG4gIH1cbiAgY29uc3QgbWFya2VyID0gY29sb3IuaW5kZXhPZignKCcpO1xuICBjb25zdCB0eXBlID0gY29sb3Iuc3Vic3RyaW5nKDAsIG1hcmtlcik7XG4gIGlmIChbJ3JnYicsICdyZ2JhJywgJ2hzbCcsICdoc2xhJywgJ2NvbG9yJ10uaW5kZXhPZih0eXBlKSA9PT0gLTEpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gYE1VSTogVW5zdXBwb3J0ZWQgXFxgJHtjb2xvcn1cXGAgY29sb3IuXG5UaGUgZm9sbG93aW5nIGZvcm1hdHMgYXJlIHN1cHBvcnRlZDogI25ubiwgI25ubm5ubiwgcmdiKCksIHJnYmEoKSwgaHNsKCksIGhzbGEoKSwgY29sb3IoKS5gIDogX2Zvcm1hdE11aUVycm9yTWVzc2FnZSg5LCBjb2xvcikpO1xuICB9XG4gIGxldCB2YWx1ZXMgPSBjb2xvci5zdWJzdHJpbmcobWFya2VyICsgMSwgY29sb3IubGVuZ3RoIC0gMSk7XG4gIGxldCBjb2xvclNwYWNlO1xuICBpZiAodHlwZSA9PT0gJ2NvbG9yJykge1xuICAgIHZhbHVlcyA9IHZhbHVlcy5zcGxpdCgnICcpO1xuICAgIGNvbG9yU3BhY2UgPSB2YWx1ZXMuc2hpZnQoKTtcbiAgICBpZiAodmFsdWVzLmxlbmd0aCA9PT0gNCAmJiB2YWx1ZXNbM10uY2hhckF0KDApID09PSAnLycpIHtcbiAgICAgIHZhbHVlc1szXSA9IHZhbHVlc1szXS5zbGljZSgxKTtcbiAgICB9XG4gICAgaWYgKFsnc3JnYicsICdkaXNwbGF5LXAzJywgJ2E5OC1yZ2InLCAncHJvcGhvdG8tcmdiJywgJ3JlYy0yMDIwJ10uaW5kZXhPZihjb2xvclNwYWNlKSA9PT0gLTEpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBgTVVJOiB1bnN1cHBvcnRlZCBcXGAke2NvbG9yU3BhY2V9XFxgIGNvbG9yIHNwYWNlLlxuVGhlIGZvbGxvd2luZyBjb2xvciBzcGFjZXMgYXJlIHN1cHBvcnRlZDogc3JnYiwgZGlzcGxheS1wMywgYTk4LXJnYiwgcHJvcGhvdG8tcmdiLCByZWMtMjAyMC5gIDogX2Zvcm1hdE11aUVycm9yTWVzc2FnZSgxMCwgY29sb3JTcGFjZSkpO1xuICAgIH1cbiAgfSBlbHNlIHtcbiAgICB2YWx1ZXMgPSB2YWx1ZXMuc3BsaXQoJywnKTtcbiAgfVxuICB2YWx1ZXMgPSB2YWx1ZXMubWFwKHZhbHVlID0+IHBhcnNlRmxvYXQodmFsdWUpKTtcbiAgcmV0dXJuIHtcbiAgICB0eXBlLFxuICAgIHZhbHVlcyxcbiAgICBjb2xvclNwYWNlXG4gIH07XG59XG5cbi8qKlxuICogUmV0dXJucyBhIGNoYW5uZWwgY3JlYXRlZCBmcm9tIHRoZSBpbnB1dCBjb2xvci5cbiAqXG4gKiBAcGFyYW0ge3N0cmluZ30gY29sb3IgLSBDU1MgY29sb3IsIGkuZS4gb25lIG9mOiAjbm5uLCAjbm5ubm5uLCByZ2IoKSwgcmdiYSgpLCBoc2woKSwgaHNsYSgpLCBjb2xvcigpXG4gKiBAcmV0dXJucyB7c3RyaW5nfSAtIFRoZSBjaGFubmVsIGZvciB0aGUgY29sb3IsIHRoYXQgY2FuIGJlIHVzZWQgaW4gcmdiYSBvciBoc2xhIGNvbG9yc1xuICovXG5leHBvcnQgY29uc3QgY29sb3JDaGFubmVsID0gY29sb3IgPT4ge1xuICBjb25zdCBkZWNvbXBvc2VkQ29sb3IgPSBkZWNvbXBvc2VDb2xvcihjb2xvcik7XG4gIHJldHVybiBkZWNvbXBvc2VkQ29sb3IudmFsdWVzLnNsaWNlKDAsIDMpLm1hcCgodmFsLCBpZHgpID0+IGRlY29tcG9zZWRDb2xvci50eXBlLmluZGV4T2YoJ2hzbCcpICE9PSAtMSAmJiBpZHggIT09IDAgPyBgJHt2YWx9JWAgOiB2YWwpLmpvaW4oJyAnKTtcbn07XG5leHBvcnQgY29uc3QgcHJpdmF0ZV9zYWZlQ29sb3JDaGFubmVsID0gKGNvbG9yLCB3YXJuaW5nKSA9PiB7XG4gIHRyeSB7XG4gICAgcmV0dXJuIGNvbG9yQ2hhbm5lbChjb2xvcik7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgaWYgKHdhcm5pbmcgJiYgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgICAgY29uc29sZS53YXJuKHdhcm5pbmcpO1xuICAgIH1cbiAgICByZXR1cm4gY29sb3I7XG4gIH1cbn07XG5cbi8qKlxuICogQ29udmVydHMgYSBjb2xvciBvYmplY3Qgd2l0aCB0eXBlIGFuZCB2YWx1ZXMgdG8gYSBzdHJpbmcuXG4gKiBAcGFyYW0ge29iamVjdH0gY29sb3IgLSBEZWNvbXBvc2VkIGNvbG9yXG4gKiBAcGFyYW0ge3N0cmluZ30gY29sb3IudHlwZSAtIE9uZSBvZjogJ3JnYicsICdyZ2JhJywgJ2hzbCcsICdoc2xhJywgJ2NvbG9yJ1xuICogQHBhcmFtIHthcnJheX0gY29sb3IudmFsdWVzIC0gW24sbixuXSBvciBbbixuLG4sbl1cbiAqIEByZXR1cm5zIHtzdHJpbmd9IEEgQ1NTIGNvbG9yIHN0cmluZ1xuICovXG5leHBvcnQgZnVuY3Rpb24gcmVjb21wb3NlQ29sb3IoY29sb3IpIHtcbiAgY29uc3Qge1xuICAgIHR5cGUsXG4gICAgY29sb3JTcGFjZVxuICB9ID0gY29sb3I7XG4gIGxldCB7XG4gICAgdmFsdWVzXG4gIH0gPSBjb2xvcjtcbiAgaWYgKHR5cGUuaW5kZXhPZigncmdiJykgIT09IC0xKSB7XG4gICAgLy8gT25seSBjb252ZXJ0IHRoZSBmaXJzdCAzIHZhbHVlcyB0byBpbnQgKGkuZS4gbm90IGFscGhhKVxuICAgIHZhbHVlcyA9IHZhbHVlcy5tYXAoKG4sIGkpID0+IGkgPCAzID8gcGFyc2VJbnQobiwgMTApIDogbik7XG4gIH0gZWxzZSBpZiAodHlwZS5pbmRleE9mKCdoc2wnKSAhPT0gLTEpIHtcbiAgICB2YWx1ZXNbMV0gPSBgJHt2YWx1ZXNbMV19JWA7XG4gICAgdmFsdWVzWzJdID0gYCR7dmFsdWVzWzJdfSVgO1xuICB9XG4gIGlmICh0eXBlLmluZGV4T2YoJ2NvbG9yJykgIT09IC0xKSB7XG4gICAgdmFsdWVzID0gYCR7Y29sb3JTcGFjZX0gJHt2YWx1ZXMuam9pbignICcpfWA7XG4gIH0gZWxzZSB7XG4gICAgdmFsdWVzID0gYCR7dmFsdWVzLmpvaW4oJywgJyl9YDtcbiAgfVxuICByZXR1cm4gYCR7dHlwZX0oJHt2YWx1ZXN9KWA7XG59XG5cbi8qKlxuICogQ29udmVydHMgYSBjb2xvciBmcm9tIENTUyByZ2IgZm9ybWF0IHRvIENTUyBoZXggZm9ybWF0LlxuICogQHBhcmFtIHtzdHJpbmd9IGNvbG9yIC0gUkdCIGNvbG9yLCBpLmUuIHJnYihuLCBuLCBuKVxuICogQHJldHVybnMge3N0cmluZ30gQSBDU1MgcmdiIGNvbG9yIHN0cmluZywgaS5lLiAjbm5ubm5uXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiByZ2JUb0hleChjb2xvcikge1xuICAvLyBJZGVtcG90ZW50XG4gIGlmIChjb2xvci5pbmRleE9mKCcjJykgPT09IDApIHtcbiAgICByZXR1cm4gY29sb3I7XG4gIH1cbiAgY29uc3Qge1xuICAgIHZhbHVlc1xuICB9ID0gZGVjb21wb3NlQ29sb3IoY29sb3IpO1xuICByZXR1cm4gYCMke3ZhbHVlcy5tYXAoKG4sIGkpID0+IGludFRvSGV4KGkgPT09IDMgPyBNYXRoLnJvdW5kKDI1NSAqIG4pIDogbikpLmpvaW4oJycpfWA7XG59XG5cbi8qKlxuICogQ29udmVydHMgYSBjb2xvciBmcm9tIGhzbCBmb3JtYXQgdG8gcmdiIGZvcm1hdC5cbiAqIEBwYXJhbSB7c3RyaW5nfSBjb2xvciAtIEhTTCBjb2xvciB2YWx1ZXNcbiAqIEByZXR1cm5zIHtzdHJpbmd9IHJnYiBjb2xvciB2YWx1ZXNcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGhzbFRvUmdiKGNvbG9yKSB7XG4gIGNvbG9yID0gZGVjb21wb3NlQ29sb3IoY29sb3IpO1xuICBjb25zdCB7XG4gICAgdmFsdWVzXG4gIH0gPSBjb2xvcjtcbiAgY29uc3QgaCA9IHZhbHVlc1swXTtcbiAgY29uc3QgcyA9IHZhbHVlc1sxXSAvIDEwMDtcbiAgY29uc3QgbCA9IHZhbHVlc1syXSAvIDEwMDtcbiAgY29uc3QgYSA9IHMgKiBNYXRoLm1pbihsLCAxIC0gbCk7XG4gIGNvbnN0IGYgPSAobiwgayA9IChuICsgaCAvIDMwKSAlIDEyKSA9PiBsIC0gYSAqIE1hdGgubWF4KE1hdGgubWluKGsgLSAzLCA5IC0gaywgMSksIC0xKTtcbiAgbGV0IHR5cGUgPSAncmdiJztcbiAgY29uc3QgcmdiID0gW01hdGgucm91bmQoZigwKSAqIDI1NSksIE1hdGgucm91bmQoZig4KSAqIDI1NSksIE1hdGgucm91bmQoZig0KSAqIDI1NSldO1xuICBpZiAoY29sb3IudHlwZSA9PT0gJ2hzbGEnKSB7XG4gICAgdHlwZSArPSAnYSc7XG4gICAgcmdiLnB1c2godmFsdWVzWzNdKTtcbiAgfVxuICByZXR1cm4gcmVjb21wb3NlQ29sb3Ioe1xuICAgIHR5cGUsXG4gICAgdmFsdWVzOiByZ2JcbiAgfSk7XG59XG4vKipcbiAqIFRoZSByZWxhdGl2ZSBicmlnaHRuZXNzIG9mIGFueSBwb2ludCBpbiBhIGNvbG9yIHNwYWNlLFxuICogbm9ybWFsaXplZCB0byAwIGZvciBkYXJrZXN0IGJsYWNrIGFuZCAxIGZvciBsaWdodGVzdCB3aGl0ZS5cbiAqXG4gKiBGb3JtdWxhOiBodHRwczovL3d3dy53My5vcmcvVFIvV0NBRzIwLVRFQ0hTL0cxNy5odG1sI0cxNy10ZXN0c1xuICogQHBhcmFtIHtzdHJpbmd9IGNvbG9yIC0gQ1NTIGNvbG9yLCBpLmUuIG9uZSBvZjogI25ubiwgI25ubm5ubiwgcmdiKCksIHJnYmEoKSwgaHNsKCksIGhzbGEoKSwgY29sb3IoKVxuICogQHJldHVybnMge251bWJlcn0gVGhlIHJlbGF0aXZlIGJyaWdodG5lc3Mgb2YgdGhlIGNvbG9yIGluIHRoZSByYW5nZSAwIC0gMVxuICovXG5leHBvcnQgZnVuY3Rpb24gZ2V0THVtaW5hbmNlKGNvbG9yKSB7XG4gIGNvbG9yID0gZGVjb21wb3NlQ29sb3IoY29sb3IpO1xuICBsZXQgcmdiID0gY29sb3IudHlwZSA9PT0gJ2hzbCcgfHwgY29sb3IudHlwZSA9PT0gJ2hzbGEnID8gZGVjb21wb3NlQ29sb3IoaHNsVG9SZ2IoY29sb3IpKS52YWx1ZXMgOiBjb2xvci52YWx1ZXM7XG4gIHJnYiA9IHJnYi5tYXAodmFsID0+IHtcbiAgICBpZiAoY29sb3IudHlwZSAhPT0gJ2NvbG9yJykge1xuICAgICAgdmFsIC89IDI1NTsgLy8gbm9ybWFsaXplZFxuICAgIH1cblxuICAgIHJldHVybiB2YWwgPD0gMC4wMzkyOCA/IHZhbCAvIDEyLjkyIDogKCh2YWwgKyAwLjA1NSkgLyAxLjA1NSkgKiogMi40O1xuICB9KTtcblxuICAvLyBUcnVuY2F0ZSBhdCAzIGRpZ2l0c1xuICByZXR1cm4gTnVtYmVyKCgwLjIxMjYgKiByZ2JbMF0gKyAwLjcxNTIgKiByZ2JbMV0gKyAwLjA3MjIgKiByZ2JbMl0pLnRvRml4ZWQoMykpO1xufVxuXG4vKipcbiAqIENhbGN1bGF0ZXMgdGhlIGNvbnRyYXN0IHJhdGlvIGJldHdlZW4gdHdvIGNvbG9ycy5cbiAqXG4gKiBGb3JtdWxhOiBodHRwczovL3d3dy53My5vcmcvVFIvV0NBRzIwLVRFQ0hTL0cxNy5odG1sI0cxNy10ZXN0c1xuICogQHBhcmFtIHtzdHJpbmd9IGZvcmVncm91bmQgLSBDU1MgY29sb3IsIGkuZS4gb25lIG9mOiAjbm5uLCAjbm5ubm5uLCByZ2IoKSwgcmdiYSgpLCBoc2woKSwgaHNsYSgpXG4gKiBAcGFyYW0ge3N0cmluZ30gYmFja2dyb3VuZCAtIENTUyBjb2xvciwgaS5lLiBvbmUgb2Y6ICNubm4sICNubm5ubm4sIHJnYigpLCByZ2JhKCksIGhzbCgpLCBoc2xhKClcbiAqIEByZXR1cm5zIHtudW1iZXJ9IEEgY29udHJhc3QgcmF0aW8gdmFsdWUgaW4gdGhlIHJhbmdlIDAgLSAyMS5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGdldENvbnRyYXN0UmF0aW8oZm9yZWdyb3VuZCwgYmFja2dyb3VuZCkge1xuICBjb25zdCBsdW1BID0gZ2V0THVtaW5hbmNlKGZvcmVncm91bmQpO1xuICBjb25zdCBsdW1CID0gZ2V0THVtaW5hbmNlKGJhY2tncm91bmQpO1xuICByZXR1cm4gKE1hdGgubWF4KGx1bUEsIGx1bUIpICsgMC4wNSkgLyAoTWF0aC5taW4obHVtQSwgbHVtQikgKyAwLjA1KTtcbn1cblxuLyoqXG4gKiBTZXRzIHRoZSBhYnNvbHV0ZSB0cmFuc3BhcmVuY3kgb2YgYSBjb2xvci5cbiAqIEFueSBleGlzdGluZyBhbHBoYSB2YWx1ZXMgYXJlIG92ZXJ3cml0dGVuLlxuICogQHBhcmFtIHtzdHJpbmd9IGNvbG9yIC0gQ1NTIGNvbG9yLCBpLmUuIG9uZSBvZjogI25ubiwgI25ubm5ubiwgcmdiKCksIHJnYmEoKSwgaHNsKCksIGhzbGEoKSwgY29sb3IoKVxuICogQHBhcmFtIHtudW1iZXJ9IHZhbHVlIC0gdmFsdWUgdG8gc2V0IHRoZSBhbHBoYSBjaGFubmVsIHRvIGluIHRoZSByYW5nZSAwIC0gMVxuICogQHJldHVybnMge3N0cmluZ30gQSBDU1MgY29sb3Igc3RyaW5nLiBIZXggaW5wdXQgdmFsdWVzIGFyZSByZXR1cm5lZCBhcyByZ2JcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGFscGhhKGNvbG9yLCB2YWx1ZSkge1xuICBjb2xvciA9IGRlY29tcG9zZUNvbG9yKGNvbG9yKTtcbiAgdmFsdWUgPSBjbGFtcCh2YWx1ZSk7XG4gIGlmIChjb2xvci50eXBlID09PSAncmdiJyB8fCBjb2xvci50eXBlID09PSAnaHNsJykge1xuICAgIGNvbG9yLnR5cGUgKz0gJ2EnO1xuICB9XG4gIGlmIChjb2xvci50eXBlID09PSAnY29sb3InKSB7XG4gICAgY29sb3IudmFsdWVzWzNdID0gYC8ke3ZhbHVlfWA7XG4gIH0gZWxzZSB7XG4gICAgY29sb3IudmFsdWVzWzNdID0gdmFsdWU7XG4gIH1cbiAgcmV0dXJuIHJlY29tcG9zZUNvbG9yKGNvbG9yKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBwcml2YXRlX3NhZmVBbHBoYShjb2xvciwgdmFsdWUsIHdhcm5pbmcpIHtcbiAgdHJ5IHtcbiAgICByZXR1cm4gYWxwaGEoY29sb3IsIHZhbHVlKTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBpZiAod2FybmluZyAmJiBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgICBjb25zb2xlLndhcm4od2FybmluZyk7XG4gICAgfVxuICAgIHJldHVybiBjb2xvcjtcbiAgfVxufVxuXG4vKipcbiAqIERhcmtlbnMgYSBjb2xvci5cbiAqIEBwYXJhbSB7c3RyaW5nfSBjb2xvciAtIENTUyBjb2xvciwgaS5lLiBvbmUgb2Y6ICNubm4sICNubm5ubm4sIHJnYigpLCByZ2JhKCksIGhzbCgpLCBoc2xhKCksIGNvbG9yKClcbiAqIEBwYXJhbSB7bnVtYmVyfSBjb2VmZmljaWVudCAtIG11bHRpcGxpZXIgaW4gdGhlIHJhbmdlIDAgLSAxXG4gKiBAcmV0dXJucyB7c3RyaW5nfSBBIENTUyBjb2xvciBzdHJpbmcuIEhleCBpbnB1dCB2YWx1ZXMgYXJlIHJldHVybmVkIGFzIHJnYlxuICovXG5leHBvcnQgZnVuY3Rpb24gZGFya2VuKGNvbG9yLCBjb2VmZmljaWVudCkge1xuICBjb2xvciA9IGRlY29tcG9zZUNvbG9yKGNvbG9yKTtcbiAgY29lZmZpY2llbnQgPSBjbGFtcChjb2VmZmljaWVudCk7XG4gIGlmIChjb2xvci50eXBlLmluZGV4T2YoJ2hzbCcpICE9PSAtMSkge1xuICAgIGNvbG9yLnZhbHVlc1syXSAqPSAxIC0gY29lZmZpY2llbnQ7XG4gIH0gZWxzZSBpZiAoY29sb3IudHlwZS5pbmRleE9mKCdyZ2InKSAhPT0gLTEgfHwgY29sb3IudHlwZS5pbmRleE9mKCdjb2xvcicpICE9PSAtMSkge1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgMzsgaSArPSAxKSB7XG4gICAgICBjb2xvci52YWx1ZXNbaV0gKj0gMSAtIGNvZWZmaWNpZW50O1xuICAgIH1cbiAgfVxuICByZXR1cm4gcmVjb21wb3NlQ29sb3IoY29sb3IpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIHByaXZhdGVfc2FmZURhcmtlbihjb2xvciwgY29lZmZpY2llbnQsIHdhcm5pbmcpIHtcbiAgdHJ5IHtcbiAgICByZXR1cm4gZGFya2VuKGNvbG9yLCBjb2VmZmljaWVudCk7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgaWYgKHdhcm5pbmcgJiYgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgICAgY29uc29sZS53YXJuKHdhcm5pbmcpO1xuICAgIH1cbiAgICByZXR1cm4gY29sb3I7XG4gIH1cbn1cblxuLyoqXG4gKiBMaWdodGVucyBhIGNvbG9yLlxuICogQHBhcmFtIHtzdHJpbmd9IGNvbG9yIC0gQ1NTIGNvbG9yLCBpLmUuIG9uZSBvZjogI25ubiwgI25ubm5ubiwgcmdiKCksIHJnYmEoKSwgaHNsKCksIGhzbGEoKSwgY29sb3IoKVxuICogQHBhcmFtIHtudW1iZXJ9IGNvZWZmaWNpZW50IC0gbXVsdGlwbGllciBpbiB0aGUgcmFuZ2UgMCAtIDFcbiAqIEByZXR1cm5zIHtzdHJpbmd9IEEgQ1NTIGNvbG9yIHN0cmluZy4gSGV4IGlucHV0IHZhbHVlcyBhcmUgcmV0dXJuZWQgYXMgcmdiXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBsaWdodGVuKGNvbG9yLCBjb2VmZmljaWVudCkge1xuICBjb2xvciA9IGRlY29tcG9zZUNvbG9yKGNvbG9yKTtcbiAgY29lZmZpY2llbnQgPSBjbGFtcChjb2VmZmljaWVudCk7XG4gIGlmIChjb2xvci50eXBlLmluZGV4T2YoJ2hzbCcpICE9PSAtMSkge1xuICAgIGNvbG9yLnZhbHVlc1syXSArPSAoMTAwIC0gY29sb3IudmFsdWVzWzJdKSAqIGNvZWZmaWNpZW50O1xuICB9IGVsc2UgaWYgKGNvbG9yLnR5cGUuaW5kZXhPZigncmdiJykgIT09IC0xKSB7XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCAzOyBpICs9IDEpIHtcbiAgICAgIGNvbG9yLnZhbHVlc1tpXSArPSAoMjU1IC0gY29sb3IudmFsdWVzW2ldKSAqIGNvZWZmaWNpZW50O1xuICAgIH1cbiAgfSBlbHNlIGlmIChjb2xvci50eXBlLmluZGV4T2YoJ2NvbG9yJykgIT09IC0xKSB7XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCAzOyBpICs9IDEpIHtcbiAgICAgIGNvbG9yLnZhbHVlc1tpXSArPSAoMSAtIGNvbG9yLnZhbHVlc1tpXSkgKiBjb2VmZmljaWVudDtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHJlY29tcG9zZUNvbG9yKGNvbG9yKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBwcml2YXRlX3NhZmVMaWdodGVuKGNvbG9yLCBjb2VmZmljaWVudCwgd2FybmluZykge1xuICB0cnkge1xuICAgIHJldHVybiBsaWdodGVuKGNvbG9yLCBjb2VmZmljaWVudCk7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgaWYgKHdhcm5pbmcgJiYgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgICAgY29uc29sZS53YXJuKHdhcm5pbmcpO1xuICAgIH1cbiAgICByZXR1cm4gY29sb3I7XG4gIH1cbn1cblxuLyoqXG4gKiBEYXJrZW4gb3IgbGlnaHRlbiBhIGNvbG9yLCBkZXBlbmRpbmcgb24gaXRzIGx1bWluYW5jZS5cbiAqIExpZ2h0IGNvbG9ycyBhcmUgZGFya2VuZWQsIGRhcmsgY29sb3JzIGFyZSBsaWdodGVuZWQuXG4gKiBAcGFyYW0ge3N0cmluZ30gY29sb3IgLSBDU1MgY29sb3IsIGkuZS4gb25lIG9mOiAjbm5uLCAjbm5ubm5uLCByZ2IoKSwgcmdiYSgpLCBoc2woKSwgaHNsYSgpLCBjb2xvcigpXG4gKiBAcGFyYW0ge251bWJlcn0gY29lZmZpY2llbnQ9MC4xNSAtIG11bHRpcGxpZXIgaW4gdGhlIHJhbmdlIDAgLSAxXG4gKiBAcmV0dXJucyB7c3RyaW5nfSBBIENTUyBjb2xvciBzdHJpbmcuIEhleCBpbnB1dCB2YWx1ZXMgYXJlIHJldHVybmVkIGFzIHJnYlxuICovXG5leHBvcnQgZnVuY3Rpb24gZW1waGFzaXplKGNvbG9yLCBjb2VmZmljaWVudCA9IDAuMTUpIHtcbiAgcmV0dXJuIGdldEx1bWluYW5jZShjb2xvcikgPiAwLjUgPyBkYXJrZW4oY29sb3IsIGNvZWZmaWNpZW50KSA6IGxpZ2h0ZW4oY29sb3IsIGNvZWZmaWNpZW50KTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBwcml2YXRlX3NhZmVFbXBoYXNpemUoY29sb3IsIGNvZWZmaWNpZW50LCB3YXJuaW5nKSB7XG4gIHRyeSB7XG4gICAgcmV0dXJuIHByaXZhdGVfc2FmZUVtcGhhc2l6ZShjb2xvciwgY29lZmZpY2llbnQpO1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGlmICh3YXJuaW5nICYmIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICAgIGNvbnNvbGUud2Fybih3YXJuaW5nKTtcbiAgICB9XG4gICAgcmV0dXJuIGNvbG9yO1xuICB9XG59Il0sIm5hbWVzIjpbImZvcm1hdE11aUVycm9yTWVzc2FnZSIsIl9mb3JtYXRNdWlFcnJvck1lc3NhZ2UiLCJjbGFtcCIsInZhbHVlIiwibWluIiwibWF4IiwicHJvY2VzcyIsImVudiIsIk5PREVfRU5WIiwiY29uc29sZSIsImVycm9yIiwiTWF0aCIsImhleFRvUmdiIiwiY29sb3IiLCJzbGljZSIsInJlIiwiUmVnRXhwIiwibGVuZ3RoIiwiY29sb3JzIiwibWF0Y2giLCJtYXAiLCJuIiwiaW5kZXgiLCJwYXJzZUludCIsInJvdW5kIiwiam9pbiIsImludFRvSGV4IiwiaW50IiwiaGV4IiwidG9TdHJpbmciLCJkZWNvbXBvc2VDb2xvciIsInR5cGUiLCJjaGFyQXQiLCJtYXJrZXIiLCJpbmRleE9mIiwic3Vic3RyaW5nIiwiRXJyb3IiLCJ2YWx1ZXMiLCJjb2xvclNwYWNlIiwic3BsaXQiLCJzaGlmdCIsInBhcnNlRmxvYXQiLCJjb2xvckNoYW5uZWwiLCJkZWNvbXBvc2VkQ29sb3IiLCJ2YWwiLCJpZHgiLCJwcml2YXRlX3NhZmVDb2xvckNoYW5uZWwiLCJ3YXJuaW5nIiwid2FybiIsInJlY29tcG9zZUNvbG9yIiwiaSIsInJnYlRvSGV4IiwiaHNsVG9SZ2IiLCJoIiwicyIsImwiLCJhIiwiZiIsImsiLCJyZ2IiLCJwdXNoIiwiZ2V0THVtaW5hbmNlIiwiTnVtYmVyIiwidG9GaXhlZCIsImdldENvbnRyYXN0UmF0aW8iLCJmb3JlZ3JvdW5kIiwiYmFja2dyb3VuZCIsImx1bUEiLCJsdW1CIiwiYWxwaGEiLCJwcml2YXRlX3NhZmVBbHBoYSIsImRhcmtlbiIsImNvZWZmaWNpZW50IiwicHJpdmF0ZV9zYWZlRGFya2VuIiwibGlnaHRlbiIsInByaXZhdGVfc2FmZUxpZ2h0ZW4iLCJlbXBoYXNpemUiLCJwcml2YXRlX3NhZmVFbXBoYXNpemUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///5285\n")},8672:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Z: () => (/* binding */ createBox)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(3123);\n/* harmony import */ var _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(7958);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(5466);\n/* harmony import */ var clsx__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(512);\n/* harmony import */ var _mui_styled_engine__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(7344);\n/* harmony import */ var _styleFunctionSx__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(5196);\n/* harmony import */ var _styleFunctionSx__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(5059);\n/* harmony import */ var _useTheme__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(7762);\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(3823);\n\'use client\';\n\n\n\nconst _excluded = ["className", "component"];\n\n\n\n\n\n\nfunction createBox(options = {}) {\n  const {\n    themeId,\n    defaultTheme,\n    defaultClassName = \'MuiBox-root\',\n    generateClassName\n  } = options;\n  const BoxRoot = (0,_mui_styled_engine__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .ZP)(\'div\', {\n    shouldForwardProp: prop => prop !== \'theme\' && prop !== \'sx\' && prop !== \'as\'\n  })(_styleFunctionSx__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z);\n  const Box = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(function Box(inProps, ref) {\n    const theme = (0,_useTheme__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(defaultTheme);\n    const _extendSxProp = (0,_styleFunctionSx__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)(inProps),\n      {\n        className,\n        component = \'div\'\n      } = _extendSxProp,\n      other = (0,_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z)(_extendSxProp, _excluded);\n    return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(BoxRoot, (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z)({\n      as: component,\n      ref: ref,\n      className: (0,clsx__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(className, generateClassName ? generateClassName(defaultClassName) : defaultClassName),\n      theme: themeId ? theme[themeId] || theme : theme\n    }, other));\n  });\n  return Box;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiODY3Mi5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7QUFBQSxZQUFZOztBQUU4QztBQUMwQztBQUNwRyxNQUFNRSxTQUFTLEdBQUcsQ0FBQyxXQUFXLEVBQUUsV0FBVyxDQUFDO0FBQ2I7QUFDUDtBQUNnQjtBQUMwQjtBQUNoQztBQUNjO0FBQ2pDLFNBQVNTLFNBQVNBLENBQUNDLE9BQU8sR0FBRyxDQUFDLENBQUMsRUFBRTtFQUM5QyxNQUFNO0lBQ0pDLE9BQU87SUFDUEMsWUFBWTtJQUNaQyxnQkFBZ0IsR0FBRyxhQUFhO0lBQ2hDQztFQUNGLENBQUMsR0FBR0osT0FBTztFQUNYLE1BQU1LLE9BQU8sR0FBR1osd0VBQU0sQ0FBQyxLQUFLLEVBQUU7SUFDNUJhLGlCQUFpQixFQUFFQyxJQUFJLElBQUlBLElBQUksS0FBSyxPQUFPLElBQUlBLElBQUksS0FBSyxJQUFJLElBQUlBLElBQUksS0FBSztFQUMzRSxDQUFDLENBQUMsQ0FBQ2IsaUVBQWUsQ0FBQztFQUNuQixNQUFNYyxHQUFHLEdBQUcsYUFBYWpCLDZDQUFnQixDQUFDLFNBQVNpQixHQUFHQSxDQUFDRSxPQUFPLEVBQUVDLEdBQUcsRUFBRTtJQUNuRSxNQUFNQyxLQUFLLEdBQUdoQiw4REFBUSxDQUFDTSxZQUFZLENBQUM7SUFDcEMsTUFBTVcsYUFBYSxHQUFHbEIscUVBQVksQ0FBQ2UsT0FBTyxDQUFDO01BQ3pDO1FBQ0VJLFNBQVM7UUFDVEMsU0FBUyxHQUFHO01BQ2QsQ0FBQyxHQUFHRixhQUFhO01BQ2pCRyxLQUFLLEdBQUczQiw0R0FBNkIsQ0FBQ3dCLGFBQWEsRUFBRXZCLFNBQVMsQ0FBQztJQUNqRSxPQUFPLGFBQWFRLHNEQUFJLENBQUNPLE9BQU8sRUFBRWpCLHVGQUFRLENBQUM7TUFDekM2QixFQUFFLEVBQUVGLFNBQVM7TUFDYkosR0FBRyxFQUFFQSxHQUFHO01BQ1JHLFNBQVMsRUFBRXRCLHlEQUFJLENBQUNzQixTQUFTLEVBQUVWLGlCQUFpQixHQUFHQSxpQkFBaUIsQ0FBQ0QsZ0JBQWdCLENBQUMsR0FBR0EsZ0JBQWdCLENBQUM7TUFDdEdTLEtBQUssRUFBRVgsT0FBTyxHQUFHVyxLQUFLLENBQUNYLE9BQU8sQ0FBQyxJQUFJVyxLQUFLLEdBQUdBO0lBQzdDLENBQUMsRUFBRUksS0FBSyxDQUFDLENBQUM7RUFDWixDQUFDLENBQUM7RUFDRixPQUFPUixHQUFHO0FBQ1oiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9lbGRlci1ib29rcy1mZS8uL25vZGVfbW9kdWxlcy9AbXVpL3N5c3RlbS9lc20vY3JlYXRlQm94LmpzPzI3YTQiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBjbGllbnQnO1xuXG5pbXBvcnQgX2V4dGVuZHMgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2V4dGVuZHNcIjtcbmltcG9ydCBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZSBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZVwiO1xuY29uc3QgX2V4Y2x1ZGVkID0gW1wiY2xhc3NOYW1lXCIsIFwiY29tcG9uZW50XCJdO1xuaW1wb3J0ICogYXMgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IGNsc3ggZnJvbSAnY2xzeCc7XG5pbXBvcnQgc3R5bGVkIGZyb20gJ0BtdWkvc3R5bGVkLWVuZ2luZSc7XG5pbXBvcnQgc3R5bGVGdW5jdGlvblN4LCB7IGV4dGVuZFN4UHJvcCB9IGZyb20gJy4vc3R5bGVGdW5jdGlvblN4JztcbmltcG9ydCB1c2VUaGVtZSBmcm9tICcuL3VzZVRoZW1lJztcbmltcG9ydCB7IGpzeCBhcyBfanN4IH0gZnJvbSBcInJlYWN0L2pzeC1ydW50aW1lXCI7XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBjcmVhdGVCb3gob3B0aW9ucyA9IHt9KSB7XG4gIGNvbnN0IHtcbiAgICB0aGVtZUlkLFxuICAgIGRlZmF1bHRUaGVtZSxcbiAgICBkZWZhdWx0Q2xhc3NOYW1lID0gJ011aUJveC1yb290JyxcbiAgICBnZW5lcmF0ZUNsYXNzTmFtZVxuICB9ID0gb3B0aW9ucztcbiAgY29uc3QgQm94Um9vdCA9IHN0eWxlZCgnZGl2Jywge1xuICAgIHNob3VsZEZvcndhcmRQcm9wOiBwcm9wID0+IHByb3AgIT09ICd0aGVtZScgJiYgcHJvcCAhPT0gJ3N4JyAmJiBwcm9wICE9PSAnYXMnXG4gIH0pKHN0eWxlRnVuY3Rpb25TeCk7XG4gIGNvbnN0IEJveCA9IC8qI19fUFVSRV9fKi9SZWFjdC5mb3J3YXJkUmVmKGZ1bmN0aW9uIEJveChpblByb3BzLCByZWYpIHtcbiAgICBjb25zdCB0aGVtZSA9IHVzZVRoZW1lKGRlZmF1bHRUaGVtZSk7XG4gICAgY29uc3QgX2V4dGVuZFN4UHJvcCA9IGV4dGVuZFN4UHJvcChpblByb3BzKSxcbiAgICAgIHtcbiAgICAgICAgY2xhc3NOYW1lLFxuICAgICAgICBjb21wb25lbnQgPSAnZGl2J1xuICAgICAgfSA9IF9leHRlbmRTeFByb3AsXG4gICAgICBvdGhlciA9IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlKF9leHRlbmRTeFByb3AsIF9leGNsdWRlZCk7XG4gICAgcmV0dXJuIC8qI19fUFVSRV9fKi9fanN4KEJveFJvb3QsIF9leHRlbmRzKHtcbiAgICAgIGFzOiBjb21wb25lbnQsXG4gICAgICByZWY6IHJlZixcbiAgICAgIGNsYXNzTmFtZTogY2xzeChjbGFzc05hbWUsIGdlbmVyYXRlQ2xhc3NOYW1lID8gZ2VuZXJhdGVDbGFzc05hbWUoZGVmYXVsdENsYXNzTmFtZSkgOiBkZWZhdWx0Q2xhc3NOYW1lKSxcbiAgICAgIHRoZW1lOiB0aGVtZUlkID8gdGhlbWVbdGhlbWVJZF0gfHwgdGhlbWUgOiB0aGVtZVxuICAgIH0sIG90aGVyKSk7XG4gIH0pO1xuICByZXR1cm4gQm94O1xufSJdLCJuYW1lcyI6WyJfZXh0ZW5kcyIsIl9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlIiwiX2V4Y2x1ZGVkIiwiUmVhY3QiLCJjbHN4Iiwic3R5bGVkIiwic3R5bGVGdW5jdGlvblN4IiwiZXh0ZW5kU3hQcm9wIiwidXNlVGhlbWUiLCJqc3giLCJfanN4IiwiY3JlYXRlQm94Iiwib3B0aW9ucyIsInRoZW1lSWQiLCJkZWZhdWx0VGhlbWUiLCJkZWZhdWx0Q2xhc3NOYW1lIiwiZ2VuZXJhdGVDbGFzc05hbWUiLCJCb3hSb290Iiwic2hvdWxkRm9yd2FyZFByb3AiLCJwcm9wIiwiQm94IiwiZm9yd2FyZFJlZiIsImluUHJvcHMiLCJyZWYiLCJ0aGVtZSIsIl9leHRlbmRTeFByb3AiLCJjbGFzc05hbWUiLCJjb21wb25lbnQiLCJvdGhlciIsImFzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///8672\n')},4509:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval("\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  ZP: () => (/* binding */ createStyled),\n  x9: () => (/* binding */ shouldForwardProp)\n});\n\n// UNUSED EXPORTS: systemDefaultTheme\n\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js\nvar objectWithoutPropertiesLoose = __webpack_require__(7958);\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/extends.js\nvar esm_extends = __webpack_require__(3123);\n// EXTERNAL MODULE: ./node_modules/@mui/styled-engine/index.js\nvar styled_engine = __webpack_require__(7344);\n// EXTERNAL MODULE: ./node_modules/@mui/system/esm/createTheme/createTheme.js + 3 modules\nvar createTheme = __webpack_require__(7841);\n// EXTERNAL MODULE: ./node_modules/@mui/utils/esm/capitalize/capitalize.js\nvar capitalize = __webpack_require__(7127);\n;// CONCATENATED MODULE: ./node_modules/@mui/system/esm/propsToClassKey.js\n\nconst _excluded = [\"variant\"];\n\nfunction isEmpty(string) {\n  return string.length === 0;\n}\n\n/**\n * Generates string classKey based on the properties provided. It starts with the\n * variant if defined, and then it appends all other properties in alphabetical order.\n * @param {object} props - the properties for which the classKey should be created.\n */\nfunction propsToClassKey(props) {\n  const {\n      variant\n    } = props,\n    other = (0,objectWithoutPropertiesLoose/* default */.Z)(props, _excluded);\n  let classKey = variant || '';\n  Object.keys(other).sort().forEach(key => {\n    if (key === 'color') {\n      classKey += isEmpty(classKey) ? props[key] : (0,capitalize/* default */.Z)(props[key]);\n    } else {\n      classKey += `${isEmpty(classKey) ? key : (0,capitalize/* default */.Z)(key)}${(0,capitalize/* default */.Z)(props[key].toString())}`;\n    }\n  });\n  return classKey;\n}\n// EXTERNAL MODULE: ./node_modules/@mui/system/esm/styleFunctionSx/styleFunctionSx.js\nvar styleFunctionSx = __webpack_require__(5196);\n;// CONCATENATED MODULE: ./node_modules/@mui/system/esm/createStyled.js\n\n\nconst createStyled_excluded = [\"name\", \"slot\", \"skipVariantsResolver\", \"skipSx\", \"overridesResolver\"];\n/* eslint-disable no-underscore-dangle */\n\n\n\n\n\nfunction createStyled_isEmpty(obj) {\n  return Object.keys(obj).length === 0;\n}\n\n// https://github.com/emotion-js/emotion/blob/26ded6109fcd8ca9875cc2ce4564fee678a3f3c5/packages/styled/src/utils.js#L40\nfunction isStringTag(tag) {\n  return typeof tag === 'string' &&\n  // 96 is one less than the char code\n  // for \"a\" so this is checking that\n  // it's a lowercase character\n  tag.charCodeAt(0) > 96;\n}\nconst getStyleOverrides = (name, theme) => {\n  if (theme.components && theme.components[name] && theme.components[name].styleOverrides) {\n    return theme.components[name].styleOverrides;\n  }\n  return null;\n};\nconst getVariantStyles = (name, theme) => {\n  let variants = [];\n  if (theme && theme.components && theme.components[name] && theme.components[name].variants) {\n    variants = theme.components[name].variants;\n  }\n  const variantsStyles = {};\n  variants.forEach(definition => {\n    const key = propsToClassKey(definition.props);\n    variantsStyles[key] = definition.style;\n  });\n  return variantsStyles;\n};\nconst variantsResolver = (props, styles, theme, name) => {\n  var _theme$components;\n  const {\n    ownerState = {}\n  } = props;\n  const variantsStyles = [];\n  const themeVariants = theme == null || (_theme$components = theme.components) == null || (_theme$components = _theme$components[name]) == null ? void 0 : _theme$components.variants;\n  if (themeVariants) {\n    themeVariants.forEach(themeVariant => {\n      let isMatch = true;\n      Object.keys(themeVariant.props).forEach(key => {\n        if (ownerState[key] !== themeVariant.props[key] && props[key] !== themeVariant.props[key]) {\n          isMatch = false;\n        }\n      });\n      if (isMatch) {\n        variantsStyles.push(styles[propsToClassKey(themeVariant.props)]);\n      }\n    });\n  }\n  return variantsStyles;\n};\n\n// Update /system/styled/#api in case if this changes\nfunction shouldForwardProp(prop) {\n  return prop !== 'ownerState' && prop !== 'theme' && prop !== 'sx' && prop !== 'as';\n}\nconst systemDefaultTheme = (0,createTheme/* default */.Z)();\nconst lowercaseFirstLetter = string => {\n  if (!string) {\n    return string;\n  }\n  return string.charAt(0).toLowerCase() + string.slice(1);\n};\nfunction resolveTheme({\n  defaultTheme,\n  theme,\n  themeId\n}) {\n  return createStyled_isEmpty(theme) ? defaultTheme : theme[themeId] || theme;\n}\nfunction defaultOverridesResolver(slot) {\n  if (!slot) {\n    return null;\n  }\n  return (props, styles) => styles[slot];\n}\nfunction createStyled(input = {}) {\n  const {\n    themeId,\n    defaultTheme = systemDefaultTheme,\n    rootShouldForwardProp = shouldForwardProp,\n    slotShouldForwardProp = shouldForwardProp\n  } = input;\n  const systemSx = props => {\n    return (0,styleFunctionSx/* default */.Z)((0,esm_extends/* default */.Z)({}, props, {\n      theme: resolveTheme((0,esm_extends/* default */.Z)({}, props, {\n        defaultTheme,\n        themeId\n      }))\n    }));\n  };\n  systemSx.__mui_systemSx = true;\n  return (tag, inputOptions = {}) => {\n    // Filter out the `sx` style function from the previous styled component to prevent unnecessary styles generated by the composite components.\n    (0,styled_engine/* internal_processStyles */.Co)(tag, styles => styles.filter(style => !(style != null && style.__mui_systemSx)));\n    const {\n        name: componentName,\n        slot: componentSlot,\n        skipVariantsResolver: inputSkipVariantsResolver,\n        skipSx: inputSkipSx,\n        // TODO v6: remove `lowercaseFirstLetter()` in the next major release\n        // For more details: https://github.com/mui/material-ui/pull/37908\n        overridesResolver = defaultOverridesResolver(lowercaseFirstLetter(componentSlot))\n      } = inputOptions,\n      options = (0,objectWithoutPropertiesLoose/* default */.Z)(inputOptions, createStyled_excluded);\n\n    // if skipVariantsResolver option is defined, take the value, otherwise, true for root and false for other slots.\n    const skipVariantsResolver = inputSkipVariantsResolver !== undefined ? inputSkipVariantsResolver :\n    // TODO v6: remove `Root` in the next major release\n    // For more details: https://github.com/mui/material-ui/pull/37908\n    componentSlot && componentSlot !== 'Root' && componentSlot !== 'root' || false;\n    const skipSx = inputSkipSx || false;\n    let label;\n    if (false) {}\n    let shouldForwardPropOption = shouldForwardProp;\n\n    // TODO v6: remove `Root` in the next major release\n    // For more details: https://github.com/mui/material-ui/pull/37908\n    if (componentSlot === 'Root' || componentSlot === 'root') {\n      shouldForwardPropOption = rootShouldForwardProp;\n    } else if (componentSlot) {\n      // any other slot specified\n      shouldForwardPropOption = slotShouldForwardProp;\n    } else if (isStringTag(tag)) {\n      // for string (html) tag, preserve the behavior in emotion & styled-components.\n      shouldForwardPropOption = undefined;\n    }\n    const defaultStyledResolver = (0,styled_engine/* default */.ZP)(tag, (0,esm_extends/* default */.Z)({\n      shouldForwardProp: shouldForwardPropOption,\n      label\n    }, options));\n    const muiStyledResolver = (styleArg, ...expressions) => {\n      const expressionsWithDefaultTheme = expressions ? expressions.map(stylesArg => {\n        // On the server Emotion doesn't use React.forwardRef for creating components, so the created\n        // component stays as a function. This condition makes sure that we do not interpolate functions\n        // which are basically components used as a selectors.\n        return typeof stylesArg === 'function' && stylesArg.__emotion_real !== stylesArg ? props => {\n          return stylesArg((0,esm_extends/* default */.Z)({}, props, {\n            theme: resolveTheme((0,esm_extends/* default */.Z)({}, props, {\n              defaultTheme,\n              themeId\n            }))\n          }));\n        } : stylesArg;\n      }) : [];\n      let transformedStyleArg = styleArg;\n      if (componentName && overridesResolver) {\n        expressionsWithDefaultTheme.push(props => {\n          const theme = resolveTheme((0,esm_extends/* default */.Z)({}, props, {\n            defaultTheme,\n            themeId\n          }));\n          const styleOverrides = getStyleOverrides(componentName, theme);\n          if (styleOverrides) {\n            const resolvedStyleOverrides = {};\n            Object.entries(styleOverrides).forEach(([slotKey, slotStyle]) => {\n              resolvedStyleOverrides[slotKey] = typeof slotStyle === 'function' ? slotStyle((0,esm_extends/* default */.Z)({}, props, {\n                theme\n              })) : slotStyle;\n            });\n            return overridesResolver(props, resolvedStyleOverrides);\n          }\n          return null;\n        });\n      }\n      if (componentName && !skipVariantsResolver) {\n        expressionsWithDefaultTheme.push(props => {\n          const theme = resolveTheme((0,esm_extends/* default */.Z)({}, props, {\n            defaultTheme,\n            themeId\n          }));\n          return variantsResolver(props, getVariantStyles(componentName, theme), theme, componentName);\n        });\n      }\n      if (!skipSx) {\n        expressionsWithDefaultTheme.push(systemSx);\n      }\n      const numOfCustomFnsApplied = expressionsWithDefaultTheme.length - expressions.length;\n      if (Array.isArray(styleArg) && numOfCustomFnsApplied > 0) {\n        const placeholders = new Array(numOfCustomFnsApplied).fill('');\n        // If the type is array, than we need to add placeholders in the template for the overrides, variants and the sx styles.\n        transformedStyleArg = [...styleArg, ...placeholders];\n        transformedStyleArg.raw = [...styleArg.raw, ...placeholders];\n      } else if (typeof styleArg === 'function' &&\n      // On the server Emotion doesn't use React.forwardRef for creating components, so the created\n      // component stays as a function. This condition makes sure that we do not interpolate functions\n      // which are basically components used as a selectors.\n      styleArg.__emotion_real !== styleArg) {\n        // If the type is function, we need to define the default theme.\n        transformedStyleArg = props => styleArg((0,esm_extends/* default */.Z)({}, props, {\n          theme: resolveTheme((0,esm_extends/* default */.Z)({}, props, {\n            defaultTheme,\n            themeId\n          }))\n        }));\n      }\n      const Component = defaultStyledResolver(transformedStyleArg, ...expressionsWithDefaultTheme);\n      if (false) {}\n      if (tag.muiName) {\n        Component.muiName = tag.muiName;\n      }\n      return Component;\n    };\n    if (defaultStyledResolver.withConfig) {\n      muiStyledResolver.withConfig = defaultStyledResolver.withConfig;\n    }\n    return muiStyledResolver;\n  };\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QyxDQUFDO1FBQ0osQ0FBQyxDQUFDLENBQUM7TUFDTDtNQUNBLE1BQU00QyxTQUFTLEdBQUduQixxQkFBcUIsQ0FBQ1EsbUJBQW1CLEVBQUUsR0FBR0osMkJBQTJCLENBQUM7TUFDNUYsSUFBSVIsS0FBcUMsRUFBRSxFQVMxQztNQUNELElBQUlsRCxHQUFHLENBQUMyRSxPQUFPLEVBQUU7UUFDZkYsU0FBUyxDQUFDRSxPQUFPLEdBQUczRSxHQUFHLENBQUMyRSxPQUFPO01BQ2pDO01BQ0EsT0FBT0YsU0FBUztJQUNsQixDQUFDO0lBQ0QsSUFBSW5CLHFCQUFxQixDQUFDc0IsVUFBVSxFQUFFO01BQ3BDckIsaUJBQWlCLENBQUNxQixVQUFVLEdBQUd0QixxQkFBcUIsQ0FBQ3NCLFVBQVU7SUFDakU7SUFDQSxPQUFPckIsaUJBQWlCO0VBQzFCLENBQUM7QUFDSCIsInNvdXJjZXMiOlsid2VicGFjazovL2VsZGVyLWJvb2tzLWZlLy4vbm9kZV9tb2R1bGVzL0BtdWkvc3lzdGVtL2VzbS9wcm9wc1RvQ2xhc3NLZXkuanM/ZTBmZiIsIndlYnBhY2s6Ly9lbGRlci1ib29rcy1mZS8uL25vZGVfbW9kdWxlcy9AbXVpL3N5c3RlbS9lc20vY3JlYXRlU3R5bGVkLmpzP2M2ZWIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlXCI7XG5jb25zdCBfZXhjbHVkZWQgPSBbXCJ2YXJpYW50XCJdO1xuaW1wb3J0IHsgdW5zdGFibGVfY2FwaXRhbGl6ZSBhcyBjYXBpdGFsaXplIH0gZnJvbSAnQG11aS91dGlscyc7XG5mdW5jdGlvbiBpc0VtcHR5KHN0cmluZykge1xuICByZXR1cm4gc3RyaW5nLmxlbmd0aCA9PT0gMDtcbn1cblxuLyoqXG4gKiBHZW5lcmF0ZXMgc3RyaW5nIGNsYXNzS2V5IGJhc2VkIG9uIHRoZSBwcm9wZXJ0aWVzIHByb3ZpZGVkLiBJdCBzdGFydHMgd2l0aCB0aGVcbiAqIHZhcmlhbnQgaWYgZGVmaW5lZCwgYW5kIHRoZW4gaXQgYXBwZW5kcyBhbGwgb3RoZXIgcHJvcGVydGllcyBpbiBhbHBoYWJldGljYWwgb3JkZXIuXG4gKiBAcGFyYW0ge29iamVjdH0gcHJvcHMgLSB0aGUgcHJvcGVydGllcyBmb3Igd2hpY2ggdGhlIGNsYXNzS2V5IHNob3VsZCBiZSBjcmVhdGVkLlxuICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBwcm9wc1RvQ2xhc3NLZXkocHJvcHMpIHtcbiAgY29uc3Qge1xuICAgICAgdmFyaWFudFxuICAgIH0gPSBwcm9wcyxcbiAgICBvdGhlciA9IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlKHByb3BzLCBfZXhjbHVkZWQpO1xuICBsZXQgY2xhc3NLZXkgPSB2YXJpYW50IHx8ICcnO1xuICBPYmplY3Qua2V5cyhvdGhlcikuc29ydCgpLmZvckVhY2goa2V5ID0+IHtcbiAgICBpZiAoa2V5ID09PSAnY29sb3InKSB7XG4gICAgICBjbGFzc0tleSArPSBpc0VtcHR5KGNsYXNzS2V5KSA/IHByb3BzW2tleV0gOiBjYXBpdGFsaXplKHByb3BzW2tleV0pO1xuICAgIH0gZWxzZSB7XG4gICAgICBjbGFzc0tleSArPSBgJHtpc0VtcHR5KGNsYXNzS2V5KSA/IGtleSA6IGNhcGl0YWxpemUoa2V5KX0ke2NhcGl0YWxpemUocHJvcHNba2V5XS50b1N0cmluZygpKX1gO1xuICAgIH1cbiAgfSk7XG4gIHJldHVybiBjbGFzc0tleTtcbn0iLCJpbXBvcnQgX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2VcIjtcbmltcG9ydCBfZXh0ZW5kcyBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZXh0ZW5kc1wiO1xuY29uc3QgX2V4Y2x1ZGVkID0gW1wibmFtZVwiLCBcInNsb3RcIiwgXCJza2lwVmFyaWFudHNSZXNvbHZlclwiLCBcInNraXBTeFwiLCBcIm92ZXJyaWRlc1Jlc29sdmVyXCJdO1xuLyogZXNsaW50LWRpc2FibGUgbm8tdW5kZXJzY29yZS1kYW5nbGUgKi9cbmltcG9ydCBzdHlsZWRFbmdpbmVTdHlsZWQsIHsgaW50ZXJuYWxfcHJvY2Vzc1N0eWxlcyBhcyBwcm9jZXNzU3R5bGVzIH0gZnJvbSAnQG11aS9zdHlsZWQtZW5naW5lJztcbmltcG9ydCB7IGdldERpc3BsYXlOYW1lLCB1bnN0YWJsZV9jYXBpdGFsaXplIGFzIGNhcGl0YWxpemUgfSBmcm9tICdAbXVpL3V0aWxzJztcbmltcG9ydCBjcmVhdGVUaGVtZSBmcm9tICcuL2NyZWF0ZVRoZW1lJztcbmltcG9ydCBwcm9wc1RvQ2xhc3NLZXkgZnJvbSAnLi9wcm9wc1RvQ2xhc3NLZXknO1xuaW1wb3J0IHN0eWxlRnVuY3Rpb25TeCBmcm9tICcuL3N0eWxlRnVuY3Rpb25TeCc7XG5mdW5jdGlvbiBpc0VtcHR5KG9iaikge1xuICByZXR1cm4gT2JqZWN0LmtleXMob2JqKS5sZW5ndGggPT09IDA7XG59XG5cbi8vIGh0dHBzOi8vZ2l0aHViLmNvbS9lbW90aW9uLWpzL2Vtb3Rpb24vYmxvYi8yNmRlZDYxMDlmY2Q4Y2E5ODc1Y2MyY2U0NTY0ZmVlNjc4YTNmM2M1L3BhY2thZ2VzL3N0eWxlZC9zcmMvdXRpbHMuanMjTDQwXG5mdW5jdGlvbiBpc1N0cmluZ1RhZyh0YWcpIHtcbiAgcmV0dXJuIHR5cGVvZiB0YWcgPT09ICdzdHJpbmcnICYmXG4gIC8vIDk2IGlzIG9uZSBsZXNzIHRoYW4gdGhlIGNoYXIgY29kZVxuICAvLyBmb3IgXCJhXCIgc28gdGhpcyBpcyBjaGVja2luZyB0aGF0XG4gIC8vIGl0J3MgYSBsb3dlcmNhc2UgY2hhcmFjdGVyXG4gIHRhZy5jaGFyQ29kZUF0KDApID4gOTY7XG59XG5jb25zdCBnZXRTdHlsZU92ZXJyaWRlcyA9IChuYW1lLCB0aGVtZSkgPT4ge1xuICBpZiAodGhlbWUuY29tcG9uZW50cyAmJiB0aGVtZS5jb21wb25lbnRzW25hbWVdICYmIHRoZW1lLmNvbXBvbmVudHNbbmFtZV0uc3R5bGVPdmVycmlkZXMpIHtcbiAgICByZXR1cm4gdGhlbWUuY29tcG9uZW50c1tuYW1lXS5zdHlsZU92ZXJyaWRlcztcbiAgfVxuICByZXR1cm4gbnVsbDtcbn07XG5jb25zdCBnZXRWYXJpYW50U3R5bGVzID0gKG5hbWUsIHRoZW1lKSA9PiB7XG4gIGxldCB2YXJpYW50cyA9IFtdO1xuICBpZiAodGhlbWUgJiYgdGhlbWUuY29tcG9uZW50cyAmJiB0aGVtZS5jb21wb25lbnRzW25hbWVdICYmIHRoZW1lLmNvbXBvbmVudHNbbmFtZV0udmFyaWFudHMpIHtcbiAgICB2YXJpYW50cyA9IHRoZW1lLmNvbXBvbmVudHNbbmFtZV0udmFyaWFudHM7XG4gIH1cbiAgY29uc3QgdmFyaWFudHNTdHlsZXMgPSB7fTtcbiAgdmFyaWFudHMuZm9yRWFjaChkZWZpbml0aW9uID0+IHtcbiAgICBjb25zdCBrZXkgPSBwcm9wc1RvQ2xhc3NLZXkoZGVmaW5pdGlvbi5wcm9wcyk7XG4gICAgdmFyaWFudHNTdHlsZXNba2V5XSA9IGRlZmluaXRpb24uc3R5bGU7XG4gIH0pO1xuICByZXR1cm4gdmFyaWFudHNTdHlsZXM7XG59O1xuY29uc3QgdmFyaWFudHNSZXNvbHZlciA9IChwcm9wcywgc3R5bGVzLCB0aGVtZSwgbmFtZSkgPT4ge1xuICB2YXIgX3RoZW1lJGNvbXBvbmVudHM7XG4gIGNvbnN0IHtcbiAgICBvd25lclN0YXRlID0ge31cbiAgfSA9IHByb3BzO1xuICBjb25zdCB2YXJpYW50c1N0eWxlcyA9IFtdO1xuICBjb25zdCB0aGVtZVZhcmlhbnRzID0gdGhlbWUgPT0gbnVsbCB8fCAoX3RoZW1lJGNvbXBvbmVudHMgPSB0aGVtZS5jb21wb25lbnRzKSA9PSBudWxsIHx8IChfdGhlbWUkY29tcG9uZW50cyA9IF90aGVtZSRjb21wb25lbnRzW25hbWVdKSA9PSBudWxsID8gdm9pZCAwIDogX3RoZW1lJGNvbXBvbmVudHMudmFyaWFudHM7XG4gIGlmICh0aGVtZVZhcmlhbnRzKSB7XG4gICAgdGhlbWVWYXJpYW50cy5mb3JFYWNoKHRoZW1lVmFyaWFudCA9PiB7XG4gICAgICBsZXQgaXNNYXRjaCA9IHRydWU7XG4gICAgICBPYmplY3Qua2V5cyh0aGVtZVZhcmlhbnQucHJvcHMpLmZvckVhY2goa2V5ID0+IHtcbiAgICAgICAgaWYgKG93bmVyU3RhdGVba2V5XSAhPT0gdGhlbWVWYXJpYW50LnByb3BzW2tleV0gJiYgcHJvcHNba2V5XSAhPT0gdGhlbWVWYXJpYW50LnByb3BzW2tleV0pIHtcbiAgICAgICAgICBpc01hdGNoID0gZmFsc2U7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgICAgaWYgKGlzTWF0Y2gpIHtcbiAgICAgICAgdmFyaWFudHNTdHlsZXMucHVzaChzdHlsZXNbcHJvcHNUb0NsYXNzS2V5KHRoZW1lVmFyaWFudC5wcm9wcyldKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuICByZXR1cm4gdmFyaWFudHNTdHlsZXM7XG59O1xuXG4vLyBVcGRhdGUgL3N5c3RlbS9zdHlsZWQvI2FwaSBpbiBjYXNlIGlmIHRoaXMgY2hhbmdlc1xuZXhwb3J0IGZ1bmN0aW9uIHNob3VsZEZvcndhcmRQcm9wKHByb3ApIHtcbiAgcmV0dXJuIHByb3AgIT09ICdvd25lclN0YXRlJyAmJiBwcm9wICE9PSAndGhlbWUnICYmIHByb3AgIT09ICdzeCcgJiYgcHJvcCAhPT0gJ2FzJztcbn1cbmV4cG9ydCBjb25zdCBzeXN0ZW1EZWZhdWx0VGhlbWUgPSBjcmVhdGVUaGVtZSgpO1xuY29uc3QgbG93ZXJjYXNlRmlyc3RMZXR0ZXIgPSBzdHJpbmcgPT4ge1xuICBpZiAoIXN0cmluZykge1xuICAgIHJldHVybiBzdHJpbmc7XG4gIH1cbiAgcmV0dXJuIHN0cmluZy5jaGFyQXQoMCkudG9Mb3dlckNhc2UoKSArIHN0cmluZy5zbGljZSgxKTtcbn07XG5mdW5jdGlvbiByZXNvbHZlVGhlbWUoe1xuICBkZWZhdWx0VGhlbWUsXG4gIHRoZW1lLFxuICB0aGVtZUlkXG59KSB7XG4gIHJldHVybiBpc0VtcHR5KHRoZW1lKSA/IGRlZmF1bHRUaGVtZSA6IHRoZW1lW3RoZW1lSWRdIHx8IHRoZW1lO1xufVxuZnVuY3Rpb24gZGVmYXVsdE92ZXJyaWRlc1Jlc29sdmVyKHNsb3QpIHtcbiAgaWYgKCFzbG90KSB7XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cbiAgcmV0dXJuIChwcm9wcywgc3R5bGVzKSA9PiBzdHlsZXNbc2xvdF07XG59XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBjcmVhdGVTdHlsZWQoaW5wdXQgPSB7fSkge1xuICBjb25zdCB7XG4gICAgdGhlbWVJZCxcbiAgICBkZWZhdWx0VGhlbWUgPSBzeXN0ZW1EZWZhdWx0VGhlbWUsXG4gICAgcm9vdFNob3VsZEZvcndhcmRQcm9wID0gc2hvdWxkRm9yd2FyZFByb3AsXG4gICAgc2xvdFNob3VsZEZvcndhcmRQcm9wID0gc2hvdWxkRm9yd2FyZFByb3BcbiAgfSA9IGlucHV0O1xuICBjb25zdCBzeXN0ZW1TeCA9IHByb3BzID0+IHtcbiAgICByZXR1cm4gc3R5bGVGdW5jdGlvblN4KF9leHRlbmRzKHt9LCBwcm9wcywge1xuICAgICAgdGhlbWU6IHJlc29sdmVUaGVtZShfZXh0ZW5kcyh7fSwgcHJvcHMsIHtcbiAgICAgICAgZGVmYXVsdFRoZW1lLFxuICAgICAgICB0aGVtZUlkXG4gICAgICB9KSlcbiAgICB9KSk7XG4gIH07XG4gIHN5c3RlbVN4Ll9fbXVpX3N5c3RlbVN4ID0gdHJ1ZTtcbiAgcmV0dXJuICh0YWcsIGlucHV0T3B0aW9ucyA9IHt9KSA9PiB7XG4gICAgLy8gRmlsdGVyIG91dCB0aGUgYHN4YCBzdHlsZSBmdW5jdGlvbiBmcm9tIHRoZSBwcmV2aW91cyBzdHlsZWQgY29tcG9uZW50IHRvIHByZXZlbnQgdW5uZWNlc3Nhcnkgc3R5bGVzIGdlbmVyYXRlZCBieSB0aGUgY29tcG9zaXRlIGNvbXBvbmVudHMuXG4gICAgcHJvY2Vzc1N0eWxlcyh0YWcsIHN0eWxlcyA9PiBzdHlsZXMuZmlsdGVyKHN0eWxlID0+ICEoc3R5bGUgIT0gbnVsbCAmJiBzdHlsZS5fX211aV9zeXN0ZW1TeCkpKTtcbiAgICBjb25zdCB7XG4gICAgICAgIG5hbWU6IGNvbXBvbmVudE5hbWUsXG4gICAgICAgIHNsb3Q6IGNvbXBvbmVudFNsb3QsXG4gICAgICAgIHNraXBWYXJpYW50c1Jlc29sdmVyOiBpbnB1dFNraXBWYXJpYW50c1Jlc29sdmVyLFxuICAgICAgICBza2lwU3g6IGlucHV0U2tpcFN4LFxuICAgICAgICAvLyBUT0RPIHY2OiByZW1vdmUgYGxvd2VyY2FzZUZpcnN0TGV0dGVyKClgIGluIHRoZSBuZXh0IG1ham9yIHJlbGVhc2VcbiAgICAgICAgLy8gRm9yIG1vcmUgZGV0YWlsczogaHR0cHM6Ly9naXRodWIuY29tL211aS9tYXRlcmlhbC11aS9wdWxsLzM3OTA4XG4gICAgICAgIG92ZXJyaWRlc1Jlc29sdmVyID0gZGVmYXVsdE92ZXJyaWRlc1Jlc29sdmVyKGxvd2VyY2FzZUZpcnN0TGV0dGVyKGNvbXBvbmVudFNsb3QpKVxuICAgICAgfSA9IGlucHV0T3B0aW9ucyxcbiAgICAgIG9wdGlvbnMgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZShpbnB1dE9wdGlvbnMsIF9leGNsdWRlZCk7XG5cbiAgICAvLyBpZiBza2lwVmFyaWFudHNSZXNvbHZlciBvcHRpb24gaXMgZGVmaW5lZCwgdGFrZSB0aGUgdmFsdWUsIG90aGVyd2lzZSwgdHJ1ZSBmb3Igcm9vdCBhbmQgZmFsc2UgZm9yIG90aGVyIHNsb3RzLlxuICAgIGNvbnN0IHNraXBWYXJpYW50c1Jlc29sdmVyID0gaW5wdXRTa2lwVmFyaWFudHNSZXNvbHZlciAhPT0gdW5kZWZpbmVkID8gaW5wdXRTa2lwVmFyaWFudHNSZXNvbHZlciA6XG4gICAgLy8gVE9ETyB2NjogcmVtb3ZlIGBSb290YCBpbiB0aGUgbmV4dCBtYWpvciByZWxlYXNlXG4gICAgLy8gRm9yIG1vcmUgZGV0YWlsczogaHR0cHM6Ly9naXRodWIuY29tL211aS9tYXRlcmlhbC11aS9wdWxsLzM3OTA4XG4gICAgY29tcG9uZW50U2xvdCAmJiBjb21wb25lbnRTbG90ICE9PSAnUm9vdCcgJiYgY29tcG9uZW50U2xvdCAhPT0gJ3Jvb3QnIHx8IGZhbHNlO1xuICAgIGNvbnN0IHNraXBTeCA9IGlucHV0U2tpcFN4IHx8IGZhbHNlO1xuICAgIGxldCBsYWJlbDtcbiAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgICAgaWYgKGNvbXBvbmVudE5hbWUpIHtcbiAgICAgICAgLy8gVE9ETyB2NjogcmVtb3ZlIGBsb3dlcmNhc2VGaXJzdExldHRlcigpYCBpbiB0aGUgbmV4dCBtYWpvciByZWxlYXNlXG4gICAgICAgIC8vIEZvciBtb3JlIGRldGFpbHM6IGh0dHBzOi8vZ2l0aHViLmNvbS9tdWkvbWF0ZXJpYWwtdWkvcHVsbC8zNzkwOFxuICAgICAgICBsYWJlbCA9IGAke2NvbXBvbmVudE5hbWV9LSR7bG93ZXJjYXNlRmlyc3RMZXR0ZXIoY29tcG9uZW50U2xvdCB8fCAnUm9vdCcpfWA7XG4gICAgICB9XG4gICAgfVxuICAgIGxldCBzaG91bGRGb3J3YXJkUHJvcE9wdGlvbiA9IHNob3VsZEZvcndhcmRQcm9wO1xuXG4gICAgLy8gVE9ETyB2NjogcmVtb3ZlIGBSb290YCBpbiB0aGUgbmV4dCBtYWpvciByZWxlYXNlXG4gICAgLy8gRm9yIG1vcmUgZGV0YWlsczogaHR0cHM6Ly9naXRodWIuY29tL211aS9tYXRlcmlhbC11aS9wdWxsLzM3OTA4XG4gICAgaWYgKGNvbXBvbmVudFNsb3QgPT09ICdSb290JyB8fCBjb21wb25lbnRTbG90ID09PSAncm9vdCcpIHtcbiAgICAgIHNob3VsZEZvcndhcmRQcm9wT3B0aW9uID0gcm9vdFNob3VsZEZvcndhcmRQcm9wO1xuICAgIH0gZWxzZSBpZiAoY29tcG9uZW50U2xvdCkge1xuICAgICAgLy8gYW55IG90aGVyIHNsb3Qgc3BlY2lmaWVkXG4gICAgICBzaG91bGRGb3J3YXJkUHJvcE9wdGlvbiA9IHNsb3RTaG91bGRGb3J3YXJkUHJvcDtcbiAgICB9IGVsc2UgaWYgKGlzU3RyaW5nVGFnKHRhZykpIHtcbiAgICAgIC8vIGZvciBzdHJpbmcgKGh0bWwpIHRhZywgcHJlc2VydmUgdGhlIGJlaGF2aW9yIGluIGVtb3Rpb24gJiBzdHlsZWQtY29tcG9uZW50cy5cbiAgICAgIHNob3VsZEZvcndhcmRQcm9wT3B0aW9uID0gdW5kZWZpbmVkO1xuICAgIH1cbiAgICBjb25zdCBkZWZhdWx0U3R5bGVkUmVzb2x2ZXIgPSBzdHlsZWRFbmdpbmVTdHlsZWQodGFnLCBfZXh0ZW5kcyh7XG4gICAgICBzaG91bGRGb3J3YXJkUHJvcDogc2hvdWxkRm9yd2FyZFByb3BPcHRpb24sXG4gICAgICBsYWJlbFxuICAgIH0sIG9wdGlvbnMpKTtcbiAgICBjb25zdCBtdWlTdHlsZWRSZXNvbHZlciA9IChzdHlsZUFyZywgLi4uZXhwcmVzc2lvbnMpID0+IHtcbiAgICAgIGNvbnN0IGV4cHJlc3Npb25zV2l0aERlZmF1bHRUaGVtZSA9IGV4cHJlc3Npb25zID8gZXhwcmVzc2lvbnMubWFwKHN0eWxlc0FyZyA9PiB7XG4gICAgICAgIC8vIE9uIHRoZSBzZXJ2ZXIgRW1vdGlvbiBkb2Vzbid0IHVzZSBSZWFjdC5mb3J3YXJkUmVmIGZvciBjcmVhdGluZyBjb21wb25lbnRzLCBzbyB0aGUgY3JlYXRlZFxuICAgICAgICAvLyBjb21wb25lbnQgc3RheXMgYXMgYSBmdW5jdGlvbi4gVGhpcyBjb25kaXRpb24gbWFrZXMgc3VyZSB0aGF0IHdlIGRvIG5vdCBpbnRlcnBvbGF0ZSBmdW5jdGlvbnNcbiAgICAgICAgLy8gd2hpY2ggYXJlIGJhc2ljYWxseSBjb21wb25lbnRzIHVzZWQgYXMgYSBzZWxlY3RvcnMuXG4gICAgICAgIHJldHVybiB0eXBlb2Ygc3R5bGVzQXJnID09PSAnZnVuY3Rpb24nICYmIHN0eWxlc0FyZy5fX2Vtb3Rpb25fcmVhbCAhPT0gc3R5bGVzQXJnID8gcHJvcHMgPT4ge1xuICAgICAgICAgIHJldHVybiBzdHlsZXNBcmcoX2V4dGVuZHMoe30sIHByb3BzLCB7XG4gICAgICAgICAgICB0aGVtZTogcmVzb2x2ZVRoZW1lKF9leHRlbmRzKHt9LCBwcm9wcywge1xuICAgICAgICAgICAgICBkZWZhdWx0VGhlbWUsXG4gICAgICAgICAgICAgIHRoZW1lSWRcbiAgICAgICAgICAgIH0pKVxuICAgICAgICAgIH0pKTtcbiAgICAgICAgfSA6IHN0eWxlc0FyZztcbiAgICAgIH0pIDogW107XG4gICAgICBsZXQgdHJhbnNmb3JtZWRTdHlsZUFyZyA9IHN0eWxlQXJnO1xuICAgICAgaWYgKGNvbXBvbmVudE5hbWUgJiYgb3ZlcnJpZGVzUmVzb2x2ZXIpIHtcbiAgICAgICAgZXhwcmVzc2lvbnNXaXRoRGVmYXVsdFRoZW1lLnB1c2gocHJvcHMgPT4ge1xuICAgICAgICAgIGNvbnN0IHRoZW1lID0gcmVzb2x2ZVRoZW1lKF9leHRlbmRzKHt9LCBwcm9wcywge1xuICAgICAgICAgICAgZGVmYXVsdFRoZW1lLFxuICAgICAgICAgICAgdGhlbWVJZFxuICAgICAgICAgIH0pKTtcbiAgICAgICAgICBjb25zdCBzdHlsZU92ZXJyaWRlcyA9IGdldFN0eWxlT3ZlcnJpZGVzKGNvbXBvbmVudE5hbWUsIHRoZW1lKTtcbiAgICAgICAgICBpZiAoc3R5bGVPdmVycmlkZXMpIHtcbiAgICAgICAgICAgIGNvbnN0IHJlc29sdmVkU3R5bGVPdmVycmlkZXMgPSB7fTtcbiAgICAgICAgICAgIE9iamVjdC5lbnRyaWVzKHN0eWxlT3ZlcnJpZGVzKS5mb3JFYWNoKChbc2xvdEtleSwgc2xvdFN0eWxlXSkgPT4ge1xuICAgICAgICAgICAgICByZXNvbHZlZFN0eWxlT3ZlcnJpZGVzW3Nsb3RLZXldID0gdHlwZW9mIHNsb3RTdHlsZSA9PT0gJ2Z1bmN0aW9uJyA/IHNsb3RTdHlsZShfZXh0ZW5kcyh7fSwgcHJvcHMsIHtcbiAgICAgICAgICAgICAgICB0aGVtZVxuICAgICAgICAgICAgICB9KSkgOiBzbG90U3R5bGU7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIHJldHVybiBvdmVycmlkZXNSZXNvbHZlcihwcm9wcywgcmVzb2x2ZWRTdHlsZU92ZXJyaWRlcyk7XG4gICAgICAgICAgfVxuICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICAgIGlmIChjb21wb25lbnROYW1lICYmICFza2lwVmFyaWFudHNSZXNvbHZlcikge1xuICAgICAgICBleHByZXNzaW9uc1dpdGhEZWZhdWx0VGhlbWUucHVzaChwcm9wcyA9PiB7XG4gICAgICAgICAgY29uc3QgdGhlbWUgPSByZXNvbHZlVGhlbWUoX2V4dGVuZHMoe30sIHByb3BzLCB7XG4gICAgICAgICAgICBkZWZhdWx0VGhlbWUsXG4gICAgICAgICAgICB0aGVtZUlkXG4gICAgICAgICAgfSkpO1xuICAgICAgICAgIHJldHVybiB2YXJpYW50c1Jlc29sdmVyKHByb3BzLCBnZXRWYXJpYW50U3R5bGVzKGNvbXBvbmVudE5hbWUsIHRoZW1lKSwgdGhlbWUsIGNvbXBvbmVudE5hbWUpO1xuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICAgIGlmICghc2tpcFN4KSB7XG4gICAgICAgIGV4cHJlc3Npb25zV2l0aERlZmF1bHRUaGVtZS5wdXNoKHN5c3RlbVN4KTtcbiAgICAgIH1cbiAgICAgIGNvbnN0IG51bU9mQ3VzdG9tRm5zQXBwbGllZCA9IGV4cHJlc3Npb25zV2l0aERlZmF1bHRUaGVtZS5sZW5ndGggLSBleHByZXNzaW9ucy5sZW5ndGg7XG4gICAgICBpZiAoQXJyYXkuaXNBcnJheShzdHlsZUFyZykgJiYgbnVtT2ZDdXN0b21GbnNBcHBsaWVkID4gMCkge1xuICAgICAgICBjb25zdCBwbGFjZWhvbGRlcnMgPSBuZXcgQXJyYXkobnVtT2ZDdXN0b21GbnNBcHBsaWVkKS5maWxsKCcnKTtcbiAgICAgICAgLy8gSWYgdGhlIHR5cGUgaXMgYXJyYXksIHRoYW4gd2UgbmVlZCB0byBhZGQgcGxhY2Vob2xkZXJzIGluIHRoZSB0ZW1wbGF0ZSBmb3IgdGhlIG92ZXJyaWRlcywgdmFyaWFudHMgYW5kIHRoZSBzeCBzdHlsZXMuXG4gICAgICAgIHRyYW5zZm9ybWVkU3R5bGVBcmcgPSBbLi4uc3R5bGVBcmcsIC4uLnBsYWNlaG9sZGVyc107XG4gICAgICAgIHRyYW5zZm9ybWVkU3R5bGVBcmcucmF3ID0gWy4uLnN0eWxlQXJnLnJhdywgLi4ucGxhY2Vob2xkZXJzXTtcbiAgICAgIH0gZWxzZSBpZiAodHlwZW9mIHN0eWxlQXJnID09PSAnZnVuY3Rpb24nICYmXG4gICAgICAvLyBPbiB0aGUgc2VydmVyIEVtb3Rpb24gZG9lc24ndCB1c2UgUmVhY3QuZm9yd2FyZFJlZiBmb3IgY3JlYXRpbmcgY29tcG9uZW50cywgc28gdGhlIGNyZWF0ZWRcbiAgICAgIC8vIGNvbXBvbmVudCBzdGF5cyBhcyBhIGZ1bmN0aW9uLiBUaGlzIGNvbmRpdGlvbiBtYWtlcyBzdXJlIHRoYXQgd2UgZG8gbm90IGludGVycG9sYXRlIGZ1bmN0aW9uc1xuICAgICAgLy8gd2hpY2ggYXJlIGJhc2ljYWxseSBjb21wb25lbnRzIHVzZWQgYXMgYSBzZWxlY3RvcnMuXG4gICAgICBzdHlsZUFyZy5fX2Vtb3Rpb25fcmVhbCAhPT0gc3R5bGVBcmcpIHtcbiAgICAgICAgLy8gSWYgdGhlIHR5cGUgaXMgZnVuY3Rpb24sIHdlIG5lZWQgdG8gZGVmaW5lIHRoZSBkZWZhdWx0IHRoZW1lLlxuICAgICAgICB0cmFuc2Zvcm1lZFN0eWxlQXJnID0gcHJvcHMgPT4gc3R5bGVBcmcoX2V4dGVuZHMoe30sIHByb3BzLCB7XG4gICAgICAgICAgdGhlbWU6IHJlc29sdmVUaGVtZShfZXh0ZW5kcyh7fSwgcHJvcHMsIHtcbiAgICAgICAgICAgIGRlZmF1bHRUaGVtZSxcbiAgICAgICAgICAgIHRoZW1lSWRcbiAgICAgICAgICB9KSlcbiAgICAgICAgfSkpO1xuICAgICAgfVxuICAgICAgY29uc3QgQ29tcG9uZW50ID0gZGVmYXVsdFN0eWxlZFJlc29sdmVyKHRyYW5zZm9ybWVkU3R5bGVBcmcsIC4uLmV4cHJlc3Npb25zV2l0aERlZmF1bHRUaGVtZSk7XG4gICAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgICAgICBsZXQgZGlzcGxheU5hbWU7XG4gICAgICAgIGlmIChjb21wb25lbnROYW1lKSB7XG4gICAgICAgICAgZGlzcGxheU5hbWUgPSBgJHtjb21wb25lbnROYW1lfSR7Y2FwaXRhbGl6ZShjb21wb25lbnRTbG90IHx8ICcnKX1gO1xuICAgICAgICB9XG4gICAgICAgIGlmIChkaXNwbGF5TmFtZSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgZGlzcGxheU5hbWUgPSBgU3R5bGVkKCR7Z2V0RGlzcGxheU5hbWUodGFnKX0pYDtcbiAgICAgICAgfVxuICAgICAgICBDb21wb25lbnQuZGlzcGxheU5hbWUgPSBkaXNwbGF5TmFtZTtcbiAgICAgIH1cbiAgICAgIGlmICh0YWcubXVpTmFtZSkge1xuICAgICAgICBDb21wb25lbnQubXVpTmFtZSA9IHRhZy5tdWlOYW1lO1xuICAgICAgfVxuICAgICAgcmV0dXJuIENvbXBvbmVudDtcbiAgICB9O1xuICAgIGlmIChkZWZhdWx0U3R5bGVkUmVzb2x2ZXIud2l0aENvbmZpZykge1xuICAgICAgbXVpU3R5bGVkUmVzb2x2ZXIud2l0aENvbmZpZyA9IGRlZmF1bHRTdHlsZWRSZXNvbHZlci53aXRoQ29uZmlnO1xuICAgIH1cbiAgICByZXR1cm4gbXVpU3R5bGVkUmVzb2x2ZXI7XG4gIH07XG59Il0sIm5hbWVzIjpbIl9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlIiwiX2V4Y2x1ZGVkIiwidW5zdGFibGVfY2FwaXRhbGl6ZSIsImNhcGl0YWxpemUiLCJpc0VtcHR5Iiwic3RyaW5nIiwibGVuZ3RoIiwicHJvcHNUb0NsYXNzS2V5IiwicHJvcHMiLCJ2YXJpYW50Iiwib3RoZXIiLCJjbGFzc0tleSIsIk9iamVjdCIsImtleXMiLCJzb3J0IiwiZm9yRWFjaCIsImtleSIsInRvU3RyaW5nIiwiX2V4dGVuZHMiLCJzdHlsZWRFbmdpbmVTdHlsZWQiLCJpbnRlcm5hbF9wcm9jZXNzU3R5bGVzIiwicHJvY2Vzc1N0eWxlcyIsImdldERpc3BsYXlOYW1lIiwiY3JlYXRlVGhlbWUiLCJzdHlsZUZ1bmN0aW9uU3giLCJvYmoiLCJpc1N0cmluZ1RhZyIsInRhZyIsImNoYXJDb2RlQXQiLCJnZXRTdHlsZU92ZXJyaWRlcyIsIm5hbWUiLCJ0aGVtZSIsImNvbXBvbmVudHMiLCJzdHlsZU92ZXJyaWRlcyIsImdldFZhcmlhbnRTdHlsZXMiLCJ2YXJpYW50cyIsInZhcmlhbnRzU3R5bGVzIiwiZGVmaW5pdGlvbiIsInN0eWxlIiwidmFyaWFudHNSZXNvbHZlciIsInN0eWxlcyIsIl90aGVtZSRjb21wb25lbnRzIiwib3duZXJTdGF0ZSIsInRoZW1lVmFyaWFudHMiLCJ0aGVtZVZhcmlhbnQiLCJpc01hdGNoIiwicHVzaCIsInNob3VsZEZvcndhcmRQcm9wIiwicHJvcCIsInN5c3RlbURlZmF1bHRUaGVtZSIsImxvd2VyY2FzZUZpcnN0TGV0dGVyIiwiY2hhckF0IiwidG9Mb3dlckNhc2UiLCJzbGljZSIsInJlc29sdmVUaGVtZSIsImRlZmF1bHRUaGVtZSIsInRoZW1lSWQiLCJkZWZhdWx0T3ZlcnJpZGVzUmVzb2x2ZXIiLCJzbG90IiwiY3JlYXRlU3R5bGVkIiwiaW5wdXQiLCJyb290U2hvdWxkRm9yd2FyZFByb3AiLCJzbG90U2hvdWxkRm9yd2FyZFByb3AiLCJzeXN0ZW1TeCIsIl9fbXVpX3N5c3RlbVN4IiwiaW5wdXRPcHRpb25zIiwiZmlsdGVyIiwiY29tcG9uZW50TmFtZSIsImNvbXBvbmVudFNsb3QiLCJza2lwVmFyaWFudHNSZXNvbHZlciIsImlucHV0U2tpcFZhcmlhbnRzUmVzb2x2ZXIiLCJza2lwU3giLCJpbnB1dFNraXBTeCIsIm92ZXJyaWRlc1Jlc29sdmVyIiwib3B0aW9ucyIsInVuZGVmaW5lZCIsImxhYmVsIiwicHJvY2VzcyIsImVudiIsIk5PREVfRU5WIiwic2hvdWxkRm9yd2FyZFByb3BPcHRpb24iLCJkZWZhdWx0U3R5bGVkUmVzb2x2ZXIiLCJtdWlTdHlsZWRSZXNvbHZlciIsInN0eWxlQXJnIiwiZXhwcmVzc2lvbnMiLCJleHByZXNzaW9uc1dpdGhEZWZhdWx0VGhlbWUiLCJtYXAiLCJzdHlsZXNBcmciLCJfX2Vtb3Rpb25fcmVhbCIsInRyYW5zZm9ybWVkU3R5bGVBcmciLCJyZXNvbHZlZFN0eWxlT3ZlcnJpZGVzIiwiZW50cmllcyIsInNsb3RLZXkiLCJzbG90U3R5bGUiLCJudW1PZkN1c3RvbUZuc0FwcGxpZWQiLCJBcnJheSIsImlzQXJyYXkiLCJwbGFjZWhvbGRlcnMiLCJmaWxsIiwicmF3IiwiQ29tcG9uZW50IiwiZGlzcGxheU5hbWUiLCJtdWlOYW1lIiwid2l0aENvbmZpZyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///4509\n")},7841:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval("\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  Z: () => (/* binding */ createTheme_createTheme)\n});\n\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/extends.js\nvar esm_extends = __webpack_require__(3123);\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js\nvar objectWithoutPropertiesLoose = __webpack_require__(7958);\n// EXTERNAL MODULE: ./node_modules/@mui/utils/esm/deepmerge.js\nvar deepmerge = __webpack_require__(3608);\n;// CONCATENATED MODULE: ./node_modules/@mui/system/esm/createTheme/createBreakpoints.js\n\n\nconst _excluded = [\"values\", \"unit\", \"step\"];\n// Sorted ASC by size. That's important.\n// It can't be configured as it's used statically for propTypes.\nconst breakpointKeys = (/* unused pure expression or super */ null && (['xs', 'sm', 'md', 'lg', 'xl']));\nconst sortBreakpointsValues = values => {\n  const breakpointsAsArray = Object.keys(values).map(key => ({\n    key,\n    val: values[key]\n  })) || [];\n  // Sort in ascending order\n  breakpointsAsArray.sort((breakpoint1, breakpoint2) => breakpoint1.val - breakpoint2.val);\n  return breakpointsAsArray.reduce((acc, obj) => {\n    return (0,esm_extends/* default */.Z)({}, acc, {\n      [obj.key]: obj.val\n    });\n  }, {});\n};\n\n// Keep in mind that @media is inclusive by the CSS specification.\nfunction createBreakpoints(breakpoints) {\n  const {\n      // The breakpoint **start** at this value.\n      // For instance with the first breakpoint xs: [xs, sm).\n      values = {\n        xs: 0,\n        // phone\n        sm: 600,\n        // tablet\n        md: 900,\n        // small laptop\n        lg: 1200,\n        // desktop\n        xl: 1536 // large screen\n      },\n\n      unit = 'px',\n      step = 5\n    } = breakpoints,\n    other = (0,objectWithoutPropertiesLoose/* default */.Z)(breakpoints, _excluded);\n  const sortedValues = sortBreakpointsValues(values);\n  const keys = Object.keys(sortedValues);\n  function up(key) {\n    const value = typeof values[key] === 'number' ? values[key] : key;\n    return `@media (min-width:${value}${unit})`;\n  }\n  function down(key) {\n    const value = typeof values[key] === 'number' ? values[key] : key;\n    return `@media (max-width:${value - step / 100}${unit})`;\n  }\n  function between(start, end) {\n    const endIndex = keys.indexOf(end);\n    return `@media (min-width:${typeof values[start] === 'number' ? values[start] : start}${unit}) and ` + `(max-width:${(endIndex !== -1 && typeof values[keys[endIndex]] === 'number' ? values[keys[endIndex]] : end) - step / 100}${unit})`;\n  }\n  function only(key) {\n    if (keys.indexOf(key) + 1 < keys.length) {\n      return between(key, keys[keys.indexOf(key) + 1]);\n    }\n    return up(key);\n  }\n  function not(key) {\n    // handle first and last key separately, for better readability\n    const keyIndex = keys.indexOf(key);\n    if (keyIndex === 0) {\n      return up(keys[1]);\n    }\n    if (keyIndex === keys.length - 1) {\n      return down(keys[keyIndex]);\n    }\n    return between(key, keys[keys.indexOf(key) + 1]).replace('@media', '@media not all and');\n  }\n  return (0,esm_extends/* default */.Z)({\n    keys,\n    values: sortedValues,\n    up,\n    down,\n    between,\n    only,\n    not,\n    unit\n  }, other);\n}\n;// CONCATENATED MODULE: ./node_modules/@mui/system/esm/createTheme/shape.js\nconst shape = {\n  borderRadius: 4\n};\n/* harmony default export */ const createTheme_shape = (shape);\n// EXTERNAL MODULE: ./node_modules/@mui/system/esm/spacing.js + 1 modules\nvar esm_spacing = __webpack_require__(3229);\n;// CONCATENATED MODULE: ./node_modules/@mui/system/esm/createTheme/createSpacing.js\n\n\n// The different signatures imply different meaning for their arguments that can't be expressed structurally.\n// We express the difference with variable names.\n/* tslint:disable:unified-signatures */\n/* tslint:enable:unified-signatures */\n\nfunction createSpacing(spacingInput = 8) {\n  // Already transformed.\n  if (spacingInput.mui) {\n    return spacingInput;\n  }\n\n  // Material Design layouts are visually balanced. Most measurements align to an 8dp grid, which aligns both spacing and the overall layout.\n  // Smaller components, such as icons, can align to a 4dp grid.\n  // https://m2.material.io/design/layout/understanding-layout.html\n  const transform = (0,esm_spacing/* createUnarySpacing */.hB)({\n    spacing: spacingInput\n  });\n  const spacing = (...argsInput) => {\n    if (false) {}\n    const args = argsInput.length === 0 ? [1] : argsInput;\n    return args.map(argument => {\n      const output = transform(argument);\n      return typeof output === 'number' ? `${output}px` : output;\n    }).join(' ');\n  };\n  spacing.mui = true;\n  return spacing;\n}\n// EXTERNAL MODULE: ./node_modules/@mui/system/esm/styleFunctionSx/styleFunctionSx.js\nvar styleFunctionSx = __webpack_require__(5196);\n// EXTERNAL MODULE: ./node_modules/@mui/system/esm/styleFunctionSx/defaultSxConfig.js + 5 modules\nvar defaultSxConfig = __webpack_require__(7132);\n;// CONCATENATED MODULE: ./node_modules/@mui/system/esm/createTheme/createTheme.js\n\n\nconst createTheme_excluded = [\"breakpoints\", \"palette\", \"spacing\", \"shape\"];\n\n\n\n\n\n\nfunction createTheme(options = {}, ...args) {\n  const {\n      breakpoints: breakpointsInput = {},\n      palette: paletteInput = {},\n      spacing: spacingInput,\n      shape: shapeInput = {}\n    } = options,\n    other = (0,objectWithoutPropertiesLoose/* default */.Z)(options, createTheme_excluded);\n  const breakpoints = createBreakpoints(breakpointsInput);\n  const spacing = createSpacing(spacingInput);\n  let muiTheme = (0,deepmerge/* default */.Z)({\n    breakpoints,\n    direction: 'ltr',\n    components: {},\n    // Inject component definitions.\n    palette: (0,esm_extends/* default */.Z)({\n      mode: 'light'\n    }, paletteInput),\n    spacing,\n    shape: (0,esm_extends/* default */.Z)({}, createTheme_shape, shapeInput)\n  }, other);\n  muiTheme = args.reduce((acc, argument) => (0,deepmerge/* default */.Z)(acc, argument), muiTheme);\n  muiTheme.unstable_sxConfig = (0,esm_extends/* default */.Z)({}, defaultSxConfig/* default */.Z, other == null ? void 0 : other.unstable_sxConfig);\n  muiTheme.unstable_sx = function sx(props) {\n    return (0,styleFunctionSx/* default */.Z)({\n      sx: props,\n      theme: this\n    });\n  };\n  return muiTheme;\n}\n/* harmony default export */ const createTheme_createTheme = (createTheme);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///7841\n")},8367:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Z: () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _mui_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3608);\n\nfunction merge(acc, item) {\n  if (!item) {\n    return acc;\n  }\n  return (0,_mui_utils__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(acc, item, {\n    clone: false // No need to clone deep, it\'s way faster.\n  });\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (merge);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiODM2Ny5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQXVDO0FBQ3ZDLFNBQVNDLEtBQUtBLENBQUNDLEdBQUcsRUFBRUMsSUFBSSxFQUFFO0VBQ3hCLElBQUksQ0FBQ0EsSUFBSSxFQUFFO0lBQ1QsT0FBT0QsR0FBRztFQUNaO0VBQ0EsT0FBT0YsK0RBQVMsQ0FBQ0UsR0FBRyxFQUFFQyxJQUFJLEVBQUU7SUFDMUJDLEtBQUssRUFBRSxLQUFLLENBQUM7RUFDZixDQUFDLENBQUM7QUFDSjs7QUFFQSxpRUFBZUgsS0FBSyIsInNvdXJjZXMiOlsid2VicGFjazovL2VsZGVyLWJvb2tzLWZlLy4vbm9kZV9tb2R1bGVzL0BtdWkvc3lzdGVtL2VzbS9tZXJnZS5qcz83MDQzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGRlZXBtZXJnZSB9IGZyb20gJ0BtdWkvdXRpbHMnO1xuZnVuY3Rpb24gbWVyZ2UoYWNjLCBpdGVtKSB7XG4gIGlmICghaXRlbSkge1xuICAgIHJldHVybiBhY2M7XG4gIH1cbiAgcmV0dXJuIGRlZXBtZXJnZShhY2MsIGl0ZW0sIHtcbiAgICBjbG9uZTogZmFsc2UgLy8gTm8gbmVlZCB0byBjbG9uZSBkZWVwLCBpdCdzIHdheSBmYXN0ZXIuXG4gIH0pO1xufVxuXG5leHBvcnQgZGVmYXVsdCBtZXJnZTsiXSwibmFtZXMiOlsiZGVlcG1lcmdlIiwibWVyZ2UiLCJhY2MiLCJpdGVtIiwiY2xvbmUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///8367\n')},3229:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval("\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  hB: () => (/* binding */ createUnarySpacing),\n  eI: () => (/* binding */ createUnaryUnit),\n  NA: () => (/* binding */ getValue),\n  e6: () => (/* binding */ margin),\n  o3: () => (/* binding */ padding)\n});\n\n// UNUSED EXPORTS: default, getStyleFromPropValue, marginKeys, paddingKeys\n\n// EXTERNAL MODULE: ./node_modules/@mui/system/esm/breakpoints.js\nvar breakpoints = __webpack_require__(5730);\n// EXTERNAL MODULE: ./node_modules/@mui/system/esm/style.js\nvar style = __webpack_require__(7954);\n// EXTERNAL MODULE: ./node_modules/@mui/system/esm/merge.js\nvar merge = __webpack_require__(8367);\n;// CONCATENATED MODULE: ./node_modules/@mui/system/esm/memoize.js\nfunction memoize(fn) {\n  const cache = {};\n  return arg => {\n    if (cache[arg] === undefined) {\n      cache[arg] = fn(arg);\n    }\n    return cache[arg];\n  };\n}\n;// CONCATENATED MODULE: ./node_modules/@mui/system/esm/spacing.js\n\n\n\n\n\nconst properties = {\n  m: 'margin',\n  p: 'padding'\n};\nconst directions = {\n  t: 'Top',\n  r: 'Right',\n  b: 'Bottom',\n  l: 'Left',\n  x: ['Left', 'Right'],\n  y: ['Top', 'Bottom']\n};\nconst aliases = {\n  marginX: 'mx',\n  marginY: 'my',\n  paddingX: 'px',\n  paddingY: 'py'\n};\n\n// memoize() impact:\n// From 300,000 ops/sec\n// To 350,000 ops/sec\nconst getCssProperties = memoize(prop => {\n  // It's not a shorthand notation.\n  if (prop.length > 2) {\n    if (aliases[prop]) {\n      prop = aliases[prop];\n    } else {\n      return [prop];\n    }\n  }\n  const [a, b] = prop.split('');\n  const property = properties[a];\n  const direction = directions[b] || '';\n  return Array.isArray(direction) ? direction.map(dir => property + dir) : [property + direction];\n});\nconst marginKeys = ['m', 'mt', 'mr', 'mb', 'ml', 'mx', 'my', 'margin', 'marginTop', 'marginRight', 'marginBottom', 'marginLeft', 'marginX', 'marginY', 'marginInline', 'marginInlineStart', 'marginInlineEnd', 'marginBlock', 'marginBlockStart', 'marginBlockEnd'];\nconst paddingKeys = ['p', 'pt', 'pr', 'pb', 'pl', 'px', 'py', 'padding', 'paddingTop', 'paddingRight', 'paddingBottom', 'paddingLeft', 'paddingX', 'paddingY', 'paddingInline', 'paddingInlineStart', 'paddingInlineEnd', 'paddingBlock', 'paddingBlockStart', 'paddingBlockEnd'];\nconst spacingKeys = [...marginKeys, ...paddingKeys];\nfunction createUnaryUnit(theme, themeKey, defaultValue, propName) {\n  var _getPath;\n  const themeSpacing = (_getPath = (0,style/* getPath */.DW)(theme, themeKey, false)) != null ? _getPath : defaultValue;\n  if (typeof themeSpacing === 'number') {\n    return abs => {\n      if (typeof abs === 'string') {\n        return abs;\n      }\n      if (false) {}\n      return themeSpacing * abs;\n    };\n  }\n  if (Array.isArray(themeSpacing)) {\n    return abs => {\n      if (typeof abs === 'string') {\n        return abs;\n      }\n      if (false) {}\n      return themeSpacing[abs];\n    };\n  }\n  if (typeof themeSpacing === 'function') {\n    return themeSpacing;\n  }\n  if (false) {}\n  return () => undefined;\n}\nfunction createUnarySpacing(theme) {\n  return createUnaryUnit(theme, 'spacing', 8, 'spacing');\n}\nfunction getValue(transformer, propValue) {\n  if (typeof propValue === 'string' || propValue == null) {\n    return propValue;\n  }\n  const abs = Math.abs(propValue);\n  const transformed = transformer(abs);\n  if (propValue >= 0) {\n    return transformed;\n  }\n  if (typeof transformed === 'number') {\n    return -transformed;\n  }\n  return `-${transformed}`;\n}\nfunction getStyleFromPropValue(cssProperties, transformer) {\n  return propValue => cssProperties.reduce((acc, cssProperty) => {\n    acc[cssProperty] = getValue(transformer, propValue);\n    return acc;\n  }, {});\n}\nfunction resolveCssProperty(props, keys, prop, transformer) {\n  // Using a hash computation over an array iteration could be faster, but with only 28 items,\n  // it's doesn't worth the bundle size.\n  if (keys.indexOf(prop) === -1) {\n    return null;\n  }\n  const cssProperties = getCssProperties(prop);\n  const styleFromPropValue = getStyleFromPropValue(cssProperties, transformer);\n  const propValue = props[prop];\n  return (0,breakpoints/* handleBreakpoints */.k9)(props, propValue, styleFromPropValue);\n}\nfunction spacing_style(props, keys) {\n  const transformer = createUnarySpacing(props.theme);\n  return Object.keys(props).map(prop => resolveCssProperty(props, keys, prop, transformer)).reduce(merge/* default */.Z, {});\n}\nfunction margin(props) {\n  return spacing_style(props, marginKeys);\n}\nmargin.propTypes =  false ? 0 : {};\nmargin.filterProps = marginKeys;\nfunction padding(props) {\n  return spacing_style(props, paddingKeys);\n}\npadding.propTypes =  false ? 0 : {};\npadding.filterProps = paddingKeys;\nfunction spacing(props) {\n  return spacing_style(props, spacingKeys);\n}\nspacing.propTypes =  false ? 0 : {};\nspacing.filterProps = spacingKeys;\n/* harmony default export */ const esm_spacing = ((/* unused pure expression or super */ null && (spacing)));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///3229\n")},7954:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DW: () => (/* binding */ getPath),\n/* harmony export */   Jq: () => (/* binding */ getStyleValue),\n/* harmony export */   ZP: () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _mui_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(7127);\n/* harmony import */ var _breakpoints__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(5730);\n\n\n\nfunction getPath(obj, path, checkVars = true) {\n  if (!path || typeof path !== 'string') {\n    return null;\n  }\n\n  // Check if CSS variables are used\n  if (obj && obj.vars && checkVars) {\n    const val = `vars.${path}`.split('.').reduce((acc, item) => acc && acc[item] ? acc[item] : null, obj);\n    if (val != null) {\n      return val;\n    }\n  }\n  return path.split('.').reduce((acc, item) => {\n    if (acc && acc[item] != null) {\n      return acc[item];\n    }\n    return null;\n  }, obj);\n}\nfunction getStyleValue(themeMapping, transform, propValueFinal, userValue = propValueFinal) {\n  let value;\n  if (typeof themeMapping === 'function') {\n    value = themeMapping(propValueFinal);\n  } else if (Array.isArray(themeMapping)) {\n    value = themeMapping[propValueFinal] || userValue;\n  } else {\n    value = getPath(themeMapping, propValueFinal) || userValue;\n  }\n  if (transform) {\n    value = transform(value, userValue, themeMapping);\n  }\n  return value;\n}\nfunction style(options) {\n  const {\n    prop,\n    cssProperty = options.prop,\n    themeKey,\n    transform\n  } = options;\n\n  // false positive\n  // eslint-disable-next-line react/function-component-definition\n  const fn = props => {\n    if (props[prop] == null) {\n      return null;\n    }\n    const propValue = props[prop];\n    const theme = props.theme;\n    const themeMapping = getPath(theme, themeKey) || {};\n    const styleFromPropValue = propValueFinal => {\n      let value = getStyleValue(themeMapping, transform, propValueFinal);\n      if (propValueFinal === value && typeof propValueFinal === 'string') {\n        // Haven't found value\n        value = getStyleValue(themeMapping, transform, `${prop}${propValueFinal === 'default' ? '' : (0,_mui_utils__WEBPACK_IMPORTED_MODULE_0__/* [\"default\"] */ .Z)(propValueFinal)}`, propValueFinal);\n      }\n      if (cssProperty === false) {\n        return value;\n      }\n      return {\n        [cssProperty]: value\n      };\n    };\n    return (0,_breakpoints__WEBPACK_IMPORTED_MODULE_1__/* .handleBreakpoints */ .k9)(props, propValue, styleFromPropValue);\n  };\n  fn.propTypes =  false ? 0 : {};\n  fn.filterProps = [prop];\n  return fn;\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (style);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUFZLEVBQUVDLFNBQVMsRUFBRyxHQUFFUSxJQUFLLEdBQUVQLGNBQWMsS0FBSyxTQUFTLEdBQUcsRUFBRSxHQUFHaEIsK0RBQVUsQ0FBQ2dCLGNBQWMsQ0FBRSxFQUFDLEVBQUVBLGNBQWMsQ0FBQztNQUM1STtNQUNBLElBQUlRLFdBQVcsS0FBSyxLQUFLLEVBQUU7UUFDekIsT0FBT04sS0FBSztNQUNkO01BQ0EsT0FBTztRQUNMLENBQUNNLFdBQVcsR0FBR047TUFDakIsQ0FBQztJQUNILENBQUM7SUFDRCxPQUFPaEIseUVBQWlCLENBQUN5QixLQUFLLEVBQUVDLFNBQVMsRUFBRUUsa0JBQWtCLENBQUM7RUFDaEUsQ0FBQztFQUNESixFQUFFLENBQUNLLFNBQVMsR0FBR0MsTUFBcUMsR0FBRyxDQUV0RCxHQUFHLENBQUMsQ0FBQztFQUNOTixFQUFFLENBQUNTLFdBQVcsR0FBRyxDQUFDWixJQUFJLENBQUM7RUFDdkIsT0FBT0csRUFBRTtBQUNYO0FBQ0EsaUVBQWVMLEtBQUsiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9lbGRlci1ib29rcy1mZS8uL25vZGVfbW9kdWxlcy9AbXVpL3N5c3RlbS9lc20vc3R5bGUuanM/ZmIyZSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB1bnN0YWJsZV9jYXBpdGFsaXplIGFzIGNhcGl0YWxpemUgfSBmcm9tICdAbXVpL3V0aWxzJztcbmltcG9ydCByZXNwb25zaXZlUHJvcFR5cGUgZnJvbSAnLi9yZXNwb25zaXZlUHJvcFR5cGUnO1xuaW1wb3J0IHsgaGFuZGxlQnJlYWtwb2ludHMgfSBmcm9tICcuL2JyZWFrcG9pbnRzJztcbmV4cG9ydCBmdW5jdGlvbiBnZXRQYXRoKG9iaiwgcGF0aCwgY2hlY2tWYXJzID0gdHJ1ZSkge1xuICBpZiAoIXBhdGggfHwgdHlwZW9mIHBhdGggIT09ICdzdHJpbmcnKSB7XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cblxuICAvLyBDaGVjayBpZiBDU1MgdmFyaWFibGVzIGFyZSB1c2VkXG4gIGlmIChvYmogJiYgb2JqLnZhcnMgJiYgY2hlY2tWYXJzKSB7XG4gICAgY29uc3QgdmFsID0gYHZhcnMuJHtwYXRofWAuc3BsaXQoJy4nKS5yZWR1Y2UoKGFjYywgaXRlbSkgPT4gYWNjICYmIGFjY1tpdGVtXSA/IGFjY1tpdGVtXSA6IG51bGwsIG9iaik7XG4gICAgaWYgKHZhbCAhPSBudWxsKSB7XG4gICAgICByZXR1cm4gdmFsO1xuICAgIH1cbiAgfVxuICByZXR1cm4gcGF0aC5zcGxpdCgnLicpLnJlZHVjZSgoYWNjLCBpdGVtKSA9PiB7XG4gICAgaWYgKGFjYyAmJiBhY2NbaXRlbV0gIT0gbnVsbCkge1xuICAgICAgcmV0dXJuIGFjY1tpdGVtXTtcbiAgICB9XG4gICAgcmV0dXJuIG51bGw7XG4gIH0sIG9iaik7XG59XG5leHBvcnQgZnVuY3Rpb24gZ2V0U3R5bGVWYWx1ZSh0aGVtZU1hcHBpbmcsIHRyYW5zZm9ybSwgcHJvcFZhbHVlRmluYWwsIHVzZXJWYWx1ZSA9IHByb3BWYWx1ZUZpbmFsKSB7XG4gIGxldCB2YWx1ZTtcbiAgaWYgKHR5cGVvZiB0aGVtZU1hcHBpbmcgPT09ICdmdW5jdGlvbicpIHtcbiAgICB2YWx1ZSA9IHRoZW1lTWFwcGluZyhwcm9wVmFsdWVGaW5hbCk7XG4gIH0gZWxzZSBpZiAoQXJyYXkuaXNBcnJheSh0aGVtZU1hcHBpbmcpKSB7XG4gICAgdmFsdWUgPSB0aGVtZU1hcHBpbmdbcHJvcFZhbHVlRmluYWxdIHx8IHVzZXJWYWx1ZTtcbiAgfSBlbHNlIHtcbiAgICB2YWx1ZSA9IGdldFBhdGgodGhlbWVNYXBwaW5nLCBwcm9wVmFsdWVGaW5hbCkgfHwgdXNlclZhbHVlO1xuICB9XG4gIGlmICh0cmFuc2Zvcm0pIHtcbiAgICB2YWx1ZSA9IHRyYW5zZm9ybSh2YWx1ZSwgdXNlclZhbHVlLCB0aGVtZU1hcHBpbmcpO1xuICB9XG4gIHJldHVybiB2YWx1ZTtcbn1cbmZ1bmN0aW9uIHN0eWxlKG9wdGlvbnMpIHtcbiAgY29uc3Qge1xuICAgIHByb3AsXG4gICAgY3NzUHJvcGVydHkgPSBvcHRpb25zLnByb3AsXG4gICAgdGhlbWVLZXksXG4gICAgdHJhbnNmb3JtXG4gIH0gPSBvcHRpb25zO1xuXG4gIC8vIGZhbHNlIHBvc2l0aXZlXG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSByZWFjdC9mdW5jdGlvbi1jb21wb25lbnQtZGVmaW5pdGlvblxuICBjb25zdCBmbiA9IHByb3BzID0+IHtcbiAgICBpZiAocHJvcHNbcHJvcF0gPT0gbnVsbCkge1xuICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICAgIGNvbnN0IHByb3BWYWx1ZSA9IHByb3BzW3Byb3BdO1xuICAgIGNvbnN0IHRoZW1lID0gcHJvcHMudGhlbWU7XG4gICAgY29uc3QgdGhlbWVNYXBwaW5nID0gZ2V0UGF0aCh0aGVtZSwgdGhlbWVLZXkpIHx8IHt9O1xuICAgIGNvbnN0IHN0eWxlRnJvbVByb3BWYWx1ZSA9IHByb3BWYWx1ZUZpbmFsID0+IHtcbiAgICAgIGxldCB2YWx1ZSA9IGdldFN0eWxlVmFsdWUodGhlbWVNYXBwaW5nLCB0cmFuc2Zvcm0sIHByb3BWYWx1ZUZpbmFsKTtcbiAgICAgIGlmIChwcm9wVmFsdWVGaW5hbCA9PT0gdmFsdWUgJiYgdHlwZW9mIHByb3BWYWx1ZUZpbmFsID09PSAnc3RyaW5nJykge1xuICAgICAgICAvLyBIYXZlbid0IGZvdW5kIHZhbHVlXG4gICAgICAgIHZhbHVlID0gZ2V0U3R5bGVWYWx1ZSh0aGVtZU1hcHBpbmcsIHRyYW5zZm9ybSwgYCR7cHJvcH0ke3Byb3BWYWx1ZUZpbmFsID09PSAnZGVmYXVsdCcgPyAnJyA6IGNhcGl0YWxpemUocHJvcFZhbHVlRmluYWwpfWAsIHByb3BWYWx1ZUZpbmFsKTtcbiAgICAgIH1cbiAgICAgIGlmIChjc3NQcm9wZXJ0eSA9PT0gZmFsc2UpIHtcbiAgICAgICAgcmV0dXJuIHZhbHVlO1xuICAgICAgfVxuICAgICAgcmV0dXJuIHtcbiAgICAgICAgW2Nzc1Byb3BlcnR5XTogdmFsdWVcbiAgICAgIH07XG4gICAgfTtcbiAgICByZXR1cm4gaGFuZGxlQnJlYWtwb2ludHMocHJvcHMsIHByb3BWYWx1ZSwgc3R5bGVGcm9tUHJvcFZhbHVlKTtcbiAgfTtcbiAgZm4ucHJvcFR5cGVzID0gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJyA/IHtcbiAgICBbcHJvcF06IHJlc3BvbnNpdmVQcm9wVHlwZVxuICB9IDoge307XG4gIGZuLmZpbHRlclByb3BzID0gW3Byb3BdO1xuICByZXR1cm4gZm47XG59XG5leHBvcnQgZGVmYXVsdCBzdHlsZTsiXSwibmFtZXMiOlsidW5zdGFibGVfY2FwaXRhbGl6ZSIsImNhcGl0YWxpemUiLCJyZXNwb25zaXZlUHJvcFR5cGUiLCJoYW5kbGVCcmVha3BvaW50cyIsImdldFBhdGgiLCJvYmoiLCJwYXRoIiwiY2hlY2tWYXJzIiwidmFycyIsInZhbCIsInNwbGl0IiwicmVkdWNlIiwiYWNjIiwiaXRlbSIsImdldFN0eWxlVmFsdWUiLCJ0aGVtZU1hcHBpbmciLCJ0cmFuc2Zvcm0iLCJwcm9wVmFsdWVGaW5hbCIsInVzZXJWYWx1ZSIsInZhbHVlIiwiQXJyYXkiLCJpc0FycmF5Iiwic3R5bGUiLCJvcHRpb25zIiwicHJvcCIsImNzc1Byb3BlcnR5IiwidGhlbWVLZXkiLCJmbiIsInByb3BzIiwicHJvcFZhbHVlIiwidGhlbWUiLCJzdHlsZUZyb21Qcm9wVmFsdWUiLCJwcm9wVHlwZXMiLCJwcm9jZXNzIiwiZW52IiwiTk9ERV9FTlYiLCJmaWx0ZXJQcm9wcyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///7954\n")},7132:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval("\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  Z: () => (/* binding */ styleFunctionSx_defaultSxConfig)\n});\n\n// EXTERNAL MODULE: ./node_modules/@mui/system/esm/spacing.js + 1 modules\nvar spacing = __webpack_require__(3229);\n// EXTERNAL MODULE: ./node_modules/@mui/system/esm/style.js\nvar style = __webpack_require__(7954);\n// EXTERNAL MODULE: ./node_modules/@mui/system/esm/merge.js\nvar merge = __webpack_require__(8367);\n;// CONCATENATED MODULE: ./node_modules/@mui/system/esm/compose.js\n\nfunction compose(...styles) {\n  const handlers = styles.reduce((acc, style) => {\n    style.filterProps.forEach(prop => {\n      acc[prop] = style;\n    });\n    return acc;\n  }, {});\n\n  // false positive\n  // eslint-disable-next-line react/function-component-definition\n  const fn = props => {\n    return Object.keys(props).reduce((acc, prop) => {\n      if (handlers[prop]) {\n        return (0,merge/* default */.Z)(acc, handlers[prop](props));\n      }\n      return acc;\n    }, {});\n  };\n  fn.propTypes =  false ? 0 : {};\n  fn.filterProps = styles.reduce((acc, style) => acc.concat(style.filterProps), []);\n  return fn;\n}\n/* harmony default export */ const esm_compose = (compose);\n// EXTERNAL MODULE: ./node_modules/@mui/system/esm/breakpoints.js\nvar breakpoints = __webpack_require__(5730);\n;// CONCATENATED MODULE: ./node_modules/@mui/system/esm/borders.js\n\n\n\n\n\nfunction borderTransform(value) {\n  if (typeof value !== 'number') {\n    return value;\n  }\n  return `${value}px solid`;\n}\nconst border = (0,style/* default */.ZP)({\n  prop: 'border',\n  themeKey: 'borders',\n  transform: borderTransform\n});\nconst borderTop = (0,style/* default */.ZP)({\n  prop: 'borderTop',\n  themeKey: 'borders',\n  transform: borderTransform\n});\nconst borderRight = (0,style/* default */.ZP)({\n  prop: 'borderRight',\n  themeKey: 'borders',\n  transform: borderTransform\n});\nconst borderBottom = (0,style/* default */.ZP)({\n  prop: 'borderBottom',\n  themeKey: 'borders',\n  transform: borderTransform\n});\nconst borderLeft = (0,style/* default */.ZP)({\n  prop: 'borderLeft',\n  themeKey: 'borders',\n  transform: borderTransform\n});\nconst borderColor = (0,style/* default */.ZP)({\n  prop: 'borderColor',\n  themeKey: 'palette'\n});\nconst borderTopColor = (0,style/* default */.ZP)({\n  prop: 'borderTopColor',\n  themeKey: 'palette'\n});\nconst borderRightColor = (0,style/* default */.ZP)({\n  prop: 'borderRightColor',\n  themeKey: 'palette'\n});\nconst borderBottomColor = (0,style/* default */.ZP)({\n  prop: 'borderBottomColor',\n  themeKey: 'palette'\n});\nconst borderLeftColor = (0,style/* default */.ZP)({\n  prop: 'borderLeftColor',\n  themeKey: 'palette'\n});\n\n// false positive\n// eslint-disable-next-line react/function-component-definition\nconst borderRadius = props => {\n  if (props.borderRadius !== undefined && props.borderRadius !== null) {\n    const transformer = (0,spacing/* createUnaryUnit */.eI)(props.theme, 'shape.borderRadius', 4, 'borderRadius');\n    const styleFromPropValue = propValue => ({\n      borderRadius: (0,spacing/* getValue */.NA)(transformer, propValue)\n    });\n    return (0,breakpoints/* handleBreakpoints */.k9)(props, props.borderRadius, styleFromPropValue);\n  }\n  return null;\n};\nborderRadius.propTypes =  false ? 0 : {};\nborderRadius.filterProps = ['borderRadius'];\nconst borders = esm_compose(border, borderTop, borderRight, borderBottom, borderLeft, borderColor, borderTopColor, borderRightColor, borderBottomColor, borderLeftColor, borderRadius);\n/* harmony default export */ const esm_borders = ((/* unused pure expression or super */ null && (borders)));\n;// CONCATENATED MODULE: ./node_modules/@mui/system/esm/cssGrid.js\n\n\n\n\n\n\n// false positive\n// eslint-disable-next-line react/function-component-definition\nconst gap = props => {\n  if (props.gap !== undefined && props.gap !== null) {\n    const transformer = (0,spacing/* createUnaryUnit */.eI)(props.theme, 'spacing', 8, 'gap');\n    const styleFromPropValue = propValue => ({\n      gap: (0,spacing/* getValue */.NA)(transformer, propValue)\n    });\n    return (0,breakpoints/* handleBreakpoints */.k9)(props, props.gap, styleFromPropValue);\n  }\n  return null;\n};\ngap.propTypes =  false ? 0 : {};\ngap.filterProps = ['gap'];\n\n// false positive\n// eslint-disable-next-line react/function-component-definition\nconst columnGap = props => {\n  if (props.columnGap !== undefined && props.columnGap !== null) {\n    const transformer = (0,spacing/* createUnaryUnit */.eI)(props.theme, 'spacing', 8, 'columnGap');\n    const styleFromPropValue = propValue => ({\n      columnGap: (0,spacing/* getValue */.NA)(transformer, propValue)\n    });\n    return (0,breakpoints/* handleBreakpoints */.k9)(props, props.columnGap, styleFromPropValue);\n  }\n  return null;\n};\ncolumnGap.propTypes =  false ? 0 : {};\ncolumnGap.filterProps = ['columnGap'];\n\n// false positive\n// eslint-disable-next-line react/function-component-definition\nconst rowGap = props => {\n  if (props.rowGap !== undefined && props.rowGap !== null) {\n    const transformer = (0,spacing/* createUnaryUnit */.eI)(props.theme, 'spacing', 8, 'rowGap');\n    const styleFromPropValue = propValue => ({\n      rowGap: (0,spacing/* getValue */.NA)(transformer, propValue)\n    });\n    return (0,breakpoints/* handleBreakpoints */.k9)(props, props.rowGap, styleFromPropValue);\n  }\n  return null;\n};\nrowGap.propTypes =  false ? 0 : {};\nrowGap.filterProps = ['rowGap'];\nconst gridColumn = (0,style/* default */.ZP)({\n  prop: 'gridColumn'\n});\nconst gridRow = (0,style/* default */.ZP)({\n  prop: 'gridRow'\n});\nconst gridAutoFlow = (0,style/* default */.ZP)({\n  prop: 'gridAutoFlow'\n});\nconst gridAutoColumns = (0,style/* default */.ZP)({\n  prop: 'gridAutoColumns'\n});\nconst gridAutoRows = (0,style/* default */.ZP)({\n  prop: 'gridAutoRows'\n});\nconst gridTemplateColumns = (0,style/* default */.ZP)({\n  prop: 'gridTemplateColumns'\n});\nconst gridTemplateRows = (0,style/* default */.ZP)({\n  prop: 'gridTemplateRows'\n});\nconst gridTemplateAreas = (0,style/* default */.ZP)({\n  prop: 'gridTemplateAreas'\n});\nconst gridArea = (0,style/* default */.ZP)({\n  prop: 'gridArea'\n});\nconst grid = esm_compose(gap, columnGap, rowGap, gridColumn, gridRow, gridAutoFlow, gridAutoColumns, gridAutoRows, gridTemplateColumns, gridTemplateRows, gridTemplateAreas, gridArea);\n/* harmony default export */ const cssGrid = ((/* unused pure expression or super */ null && (grid)));\n;// CONCATENATED MODULE: ./node_modules/@mui/system/esm/palette.js\n\n\nfunction paletteTransform(value, userValue) {\n  if (userValue === 'grey') {\n    return userValue;\n  }\n  return value;\n}\nconst color = (0,style/* default */.ZP)({\n  prop: 'color',\n  themeKey: 'palette',\n  transform: paletteTransform\n});\nconst bgcolor = (0,style/* default */.ZP)({\n  prop: 'bgcolor',\n  cssProperty: 'backgroundColor',\n  themeKey: 'palette',\n  transform: paletteTransform\n});\nconst backgroundColor = (0,style/* default */.ZP)({\n  prop: 'backgroundColor',\n  themeKey: 'palette',\n  transform: paletteTransform\n});\nconst palette = esm_compose(color, bgcolor, backgroundColor);\n/* harmony default export */ const esm_palette = ((/* unused pure expression or super */ null && (palette)));\n;// CONCATENATED MODULE: ./node_modules/@mui/system/esm/sizing.js\n\n\n\nfunction sizingTransform(value) {\n  return value <= 1 && value !== 0 ? `${value * 100}%` : value;\n}\nconst width = (0,style/* default */.ZP)({\n  prop: 'width',\n  transform: sizingTransform\n});\nconst maxWidth = props => {\n  if (props.maxWidth !== undefined && props.maxWidth !== null) {\n    const styleFromPropValue = propValue => {\n      var _props$theme, _props$theme2;\n      const breakpoint = ((_props$theme = props.theme) == null || (_props$theme = _props$theme.breakpoints) == null || (_props$theme = _props$theme.values) == null ? void 0 : _props$theme[propValue]) || breakpoints/* values */.VO[propValue];\n      if (!breakpoint) {\n        return {\n          maxWidth: sizingTransform(propValue)\n        };\n      }\n      if (((_props$theme2 = props.theme) == null || (_props$theme2 = _props$theme2.breakpoints) == null ? void 0 : _props$theme2.unit) !== 'px') {\n        return {\n          maxWidth: `${breakpoint}${props.theme.breakpoints.unit}`\n        };\n      }\n      return {\n        maxWidth: breakpoint\n      };\n    };\n    return (0,breakpoints/* handleBreakpoints */.k9)(props, props.maxWidth, styleFromPropValue);\n  }\n  return null;\n};\nmaxWidth.filterProps = ['maxWidth'];\nconst minWidth = (0,style/* default */.ZP)({\n  prop: 'minWidth',\n  transform: sizingTransform\n});\nconst height = (0,style/* default */.ZP)({\n  prop: 'height',\n  transform: sizingTransform\n});\nconst maxHeight = (0,style/* default */.ZP)({\n  prop: 'maxHeight',\n  transform: sizingTransform\n});\nconst minHeight = (0,style/* default */.ZP)({\n  prop: 'minHeight',\n  transform: sizingTransform\n});\nconst sizeWidth = (0,style/* default */.ZP)({\n  prop: 'size',\n  cssProperty: 'width',\n  transform: sizingTransform\n});\nconst sizeHeight = (0,style/* default */.ZP)({\n  prop: 'size',\n  cssProperty: 'height',\n  transform: sizingTransform\n});\nconst boxSizing = (0,style/* default */.ZP)({\n  prop: 'boxSizing'\n});\nconst sizing = esm_compose(width, maxWidth, minWidth, height, maxHeight, minHeight, boxSizing);\n/* harmony default export */ const esm_sizing = ((/* unused pure expression or super */ null && (sizing)));\n;// CONCATENATED MODULE: ./node_modules/@mui/system/esm/styleFunctionSx/defaultSxConfig.js\n\n\n\n\n\nconst defaultSxConfig = {\n  // borders\n  border: {\n    themeKey: 'borders',\n    transform: borderTransform\n  },\n  borderTop: {\n    themeKey: 'borders',\n    transform: borderTransform\n  },\n  borderRight: {\n    themeKey: 'borders',\n    transform: borderTransform\n  },\n  borderBottom: {\n    themeKey: 'borders',\n    transform: borderTransform\n  },\n  borderLeft: {\n    themeKey: 'borders',\n    transform: borderTransform\n  },\n  borderColor: {\n    themeKey: 'palette'\n  },\n  borderTopColor: {\n    themeKey: 'palette'\n  },\n  borderRightColor: {\n    themeKey: 'palette'\n  },\n  borderBottomColor: {\n    themeKey: 'palette'\n  },\n  borderLeftColor: {\n    themeKey: 'palette'\n  },\n  borderRadius: {\n    themeKey: 'shape.borderRadius',\n    style: borderRadius\n  },\n  // palette\n  color: {\n    themeKey: 'palette',\n    transform: paletteTransform\n  },\n  bgcolor: {\n    themeKey: 'palette',\n    cssProperty: 'backgroundColor',\n    transform: paletteTransform\n  },\n  backgroundColor: {\n    themeKey: 'palette',\n    transform: paletteTransform\n  },\n  // spacing\n  p: {\n    style: spacing/* padding */.o3\n  },\n  pt: {\n    style: spacing/* padding */.o3\n  },\n  pr: {\n    style: spacing/* padding */.o3\n  },\n  pb: {\n    style: spacing/* padding */.o3\n  },\n  pl: {\n    style: spacing/* padding */.o3\n  },\n  px: {\n    style: spacing/* padding */.o3\n  },\n  py: {\n    style: spacing/* padding */.o3\n  },\n  padding: {\n    style: spacing/* padding */.o3\n  },\n  paddingTop: {\n    style: spacing/* padding */.o3\n  },\n  paddingRight: {\n    style: spacing/* padding */.o3\n  },\n  paddingBottom: {\n    style: spacing/* padding */.o3\n  },\n  paddingLeft: {\n    style: spacing/* padding */.o3\n  },\n  paddingX: {\n    style: spacing/* padding */.o3\n  },\n  paddingY: {\n    style: spacing/* padding */.o3\n  },\n  paddingInline: {\n    style: spacing/* padding */.o3\n  },\n  paddingInlineStart: {\n    style: spacing/* padding */.o3\n  },\n  paddingInlineEnd: {\n    style: spacing/* padding */.o3\n  },\n  paddingBlock: {\n    style: spacing/* padding */.o3\n  },\n  paddingBlockStart: {\n    style: spacing/* padding */.o3\n  },\n  paddingBlockEnd: {\n    style: spacing/* padding */.o3\n  },\n  m: {\n    style: spacing/* margin */.e6\n  },\n  mt: {\n    style: spacing/* margin */.e6\n  },\n  mr: {\n    style: spacing/* margin */.e6\n  },\n  mb: {\n    style: spacing/* margin */.e6\n  },\n  ml: {\n    style: spacing/* margin */.e6\n  },\n  mx: {\n    style: spacing/* margin */.e6\n  },\n  my: {\n    style: spacing/* margin */.e6\n  },\n  margin: {\n    style: spacing/* margin */.e6\n  },\n  marginTop: {\n    style: spacing/* margin */.e6\n  },\n  marginRight: {\n    style: spacing/* margin */.e6\n  },\n  marginBottom: {\n    style: spacing/* margin */.e6\n  },\n  marginLeft: {\n    style: spacing/* margin */.e6\n  },\n  marginX: {\n    style: spacing/* margin */.e6\n  },\n  marginY: {\n    style: spacing/* margin */.e6\n  },\n  marginInline: {\n    style: spacing/* margin */.e6\n  },\n  marginInlineStart: {\n    style: spacing/* margin */.e6\n  },\n  marginInlineEnd: {\n    style: spacing/* margin */.e6\n  },\n  marginBlock: {\n    style: spacing/* margin */.e6\n  },\n  marginBlockStart: {\n    style: spacing/* margin */.e6\n  },\n  marginBlockEnd: {\n    style: spacing/* margin */.e6\n  },\n  // display\n  displayPrint: {\n    cssProperty: false,\n    transform: value => ({\n      '@media print': {\n        display: value\n      }\n    })\n  },\n  display: {},\n  overflow: {},\n  textOverflow: {},\n  visibility: {},\n  whiteSpace: {},\n  // flexbox\n  flexBasis: {},\n  flexDirection: {},\n  flexWrap: {},\n  justifyContent: {},\n  alignItems: {},\n  alignContent: {},\n  order: {},\n  flex: {},\n  flexGrow: {},\n  flexShrink: {},\n  alignSelf: {},\n  justifyItems: {},\n  justifySelf: {},\n  // grid\n  gap: {\n    style: gap\n  },\n  rowGap: {\n    style: rowGap\n  },\n  columnGap: {\n    style: columnGap\n  },\n  gridColumn: {},\n  gridRow: {},\n  gridAutoFlow: {},\n  gridAutoColumns: {},\n  gridAutoRows: {},\n  gridTemplateColumns: {},\n  gridTemplateRows: {},\n  gridTemplateAreas: {},\n  gridArea: {},\n  // positions\n  position: {},\n  zIndex: {\n    themeKey: 'zIndex'\n  },\n  top: {},\n  right: {},\n  bottom: {},\n  left: {},\n  // shadows\n  boxShadow: {\n    themeKey: 'shadows'\n  },\n  // sizing\n  width: {\n    transform: sizingTransform\n  },\n  maxWidth: {\n    style: maxWidth\n  },\n  minWidth: {\n    transform: sizingTransform\n  },\n  height: {\n    transform: sizingTransform\n  },\n  maxHeight: {\n    transform: sizingTransform\n  },\n  minHeight: {\n    transform: sizingTransform\n  },\n  boxSizing: {},\n  // typography\n  fontFamily: {\n    themeKey: 'typography'\n  },\n  fontSize: {\n    themeKey: 'typography'\n  },\n  fontStyle: {\n    themeKey: 'typography'\n  },\n  fontWeight: {\n    themeKey: 'typography'\n  },\n  letterSpacing: {},\n  textTransform: {},\n  lineHeight: {},\n  textAlign: {},\n  typography: {\n    cssProperty: false,\n    themeKey: 'typography'\n  }\n};\n/* harmony default export */ const styleFunctionSx_defaultSxConfig = (defaultSxConfig);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///7132\n")},5059:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Z: () => (/* binding */ extendSxProp)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(3123);\n/* harmony import */ var _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(7958);\n/* harmony import */ var _mui_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(3608);\n/* harmony import */ var _defaultSxConfig__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(7132);\n\n\nconst _excluded = ["sx"];\n\n\nconst splitProps = props => {\n  var _props$theme$unstable, _props$theme;\n  const result = {\n    systemProps: {},\n    otherProps: {}\n  };\n  const config = (_props$theme$unstable = props == null || (_props$theme = props.theme) == null ? void 0 : _props$theme.unstable_sxConfig) != null ? _props$theme$unstable : _defaultSxConfig__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z;\n  Object.keys(props).forEach(prop => {\n    if (config[prop]) {\n      result.systemProps[prop] = props[prop];\n    } else {\n      result.otherProps[prop] = props[prop];\n    }\n  });\n  return result;\n};\nfunction extendSxProp(props) {\n  const {\n      sx: inSx\n    } = props,\n    other = (0,_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(props, _excluded);\n  const {\n    systemProps,\n    otherProps\n  } = splitProps(other);\n  let finalSx;\n  if (Array.isArray(inSx)) {\n    finalSx = [systemProps, ...inSx];\n  } else if (typeof inSx === \'function\') {\n    finalSx = (...args) => {\n      const result = inSx(...args);\n      if (!(0,_mui_utils__WEBPACK_IMPORTED_MODULE_2__/* .isPlainObject */ .P)(result)) {\n        return systemProps;\n      }\n      return (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)({}, systemProps, result);\n    };\n  } else {\n    finalSx = (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)({}, systemProps, inSx);\n  }\n  return (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)({}, otherProps, {\n    sx: finalSx\n  });\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTA1OS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQTBEO0FBQzBDO0FBQ3BHLE1BQU1FLFNBQVMsR0FBRyxDQUFDLElBQUksQ0FBQztBQUNtQjtBQUNLO0FBQ2hELE1BQU1HLFVBQVUsR0FBR0MsS0FBSyxJQUFJO0VBQzFCLElBQUlDLHFCQUFxQixFQUFFQyxZQUFZO0VBQ3ZDLE1BQU1DLE1BQU0sR0FBRztJQUNiQyxXQUFXLEVBQUUsQ0FBQyxDQUFDO0lBQ2ZDLFVBQVUsRUFBRSxDQUFDO0VBQ2YsQ0FBQztFQUNELE1BQU1DLE1BQU0sR0FBRyxDQUFDTCxxQkFBcUIsR0FBR0QsS0FBSyxJQUFJLElBQUksSUFBSSxDQUFDRSxZQUFZLEdBQUdGLEtBQUssQ0FBQ08sS0FBSyxLQUFLLElBQUksR0FBRyxLQUFLLENBQUMsR0FBR0wsWUFBWSxDQUFDTSxpQkFBaUIsS0FBSyxJQUFJLEdBQUdQLHFCQUFxQixHQUFHSCxpRUFBZTtFQUMxTFcsTUFBTSxDQUFDQyxJQUFJLENBQUNWLEtBQUssQ0FBQyxDQUFDVyxPQUFPLENBQUNDLElBQUksSUFBSTtJQUNqQyxJQUFJTixNQUFNLENBQUNNLElBQUksQ0FBQyxFQUFFO01BQ2hCVCxNQUFNLENBQUNDLFdBQVcsQ0FBQ1EsSUFBSSxDQUFDLEdBQUdaLEtBQUssQ0FBQ1ksSUFBSSxDQUFDO0lBQ3hDLENBQUMsTUFBTTtNQUNMVCxNQUFNLENBQUNFLFVBQVUsQ0FBQ08sSUFBSSxDQUFDLEdBQUdaLEtBQUssQ0FBQ1ksSUFBSSxDQUFDO0lBQ3ZDO0VBQ0YsQ0FBQyxDQUFDO0VBQ0YsT0FBT1QsTUFBTTtBQUNmLENBQUM7QUFDYyxTQUFTVSxZQUFZQSxDQUFDYixLQUFLLEVBQUU7RUFDMUMsTUFBTTtNQUNGYyxFQUFFLEVBQUVDO0lBQ04sQ0FBQyxHQUFHZixLQUFLO0lBQ1RnQixLQUFLLEdBQUdyQiw0R0FBNkIsQ0FBQ0ssS0FBSyxFQUFFSixTQUFTLENBQUM7RUFDekQsTUFBTTtJQUNKUSxXQUFXO0lBQ1hDO0VBQ0YsQ0FBQyxHQUFHTixVQUFVLENBQUNpQixLQUFLLENBQUM7RUFDckIsSUFBSUMsT0FBTztFQUNYLElBQUlDLEtBQUssQ0FBQ0MsT0FBTyxDQUFDSixJQUFJLENBQUMsRUFBRTtJQUN2QkUsT0FBTyxHQUFHLENBQUNiLFdBQVcsRUFBRSxHQUFHVyxJQUFJLENBQUM7RUFDbEMsQ0FBQyxNQUFNLElBQUksT0FBT0EsSUFBSSxLQUFLLFVBQVUsRUFBRTtJQUNyQ0UsT0FBTyxHQUFHQSxDQUFDLEdBQUdHLElBQUksS0FBSztNQUNyQixNQUFNakIsTUFBTSxHQUFHWSxJQUFJLENBQUMsR0FBR0ssSUFBSSxDQUFDO01BQzVCLElBQUksQ0FBQ3ZCLGtFQUFhLENBQUNNLE1BQU0sQ0FBQyxFQUFFO1FBQzFCLE9BQU9DLFdBQVc7TUFDcEI7TUFDQSxPQUFPVix1RkFBUSxDQUFDLENBQUMsQ0FBQyxFQUFFVSxXQUFXLEVBQUVELE1BQU0sQ0FBQztJQUMxQyxDQUFDO0VBQ0gsQ0FBQyxNQUFNO0lBQ0xjLE9BQU8sR0FBR3ZCLHVGQUFRLENBQUMsQ0FBQyxDQUFDLEVBQUVVLFdBQVcsRUFBRVcsSUFBSSxDQUFDO0VBQzNDO0VBQ0EsT0FBT3JCLHVGQUFRLENBQUMsQ0FBQyxDQUFDLEVBQUVXLFVBQVUsRUFBRTtJQUM5QlMsRUFBRSxFQUFFRztFQUNOLENBQUMsQ0FBQztBQUNKIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZWxkZXItYm9va3MtZmUvLi9ub2RlX21vZHVsZXMvQG11aS9zeXN0ZW0vZXNtL3N0eWxlRnVuY3Rpb25TeC9leHRlbmRTeFByb3AuanM/ZDI0NCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgX2V4dGVuZHMgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2V4dGVuZHNcIjtcbmltcG9ydCBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZSBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZVwiO1xuY29uc3QgX2V4Y2x1ZGVkID0gW1wic3hcIl07XG5pbXBvcnQgeyBpc1BsYWluT2JqZWN0IH0gZnJvbSAnQG11aS91dGlscyc7XG5pbXBvcnQgZGVmYXVsdFN4Q29uZmlnIGZyb20gJy4vZGVmYXVsdFN4Q29uZmlnJztcbmNvbnN0IHNwbGl0UHJvcHMgPSBwcm9wcyA9PiB7XG4gIHZhciBfcHJvcHMkdGhlbWUkdW5zdGFibGUsIF9wcm9wcyR0aGVtZTtcbiAgY29uc3QgcmVzdWx0ID0ge1xuICAgIHN5c3RlbVByb3BzOiB7fSxcbiAgICBvdGhlclByb3BzOiB7fVxuICB9O1xuICBjb25zdCBjb25maWcgPSAoX3Byb3BzJHRoZW1lJHVuc3RhYmxlID0gcHJvcHMgPT0gbnVsbCB8fCAoX3Byb3BzJHRoZW1lID0gcHJvcHMudGhlbWUpID09IG51bGwgPyB2b2lkIDAgOiBfcHJvcHMkdGhlbWUudW5zdGFibGVfc3hDb25maWcpICE9IG51bGwgPyBfcHJvcHMkdGhlbWUkdW5zdGFibGUgOiBkZWZhdWx0U3hDb25maWc7XG4gIE9iamVjdC5rZXlzKHByb3BzKS5mb3JFYWNoKHByb3AgPT4ge1xuICAgIGlmIChjb25maWdbcHJvcF0pIHtcbiAgICAgIHJlc3VsdC5zeXN0ZW1Qcm9wc1twcm9wXSA9IHByb3BzW3Byb3BdO1xuICAgIH0gZWxzZSB7XG4gICAgICByZXN1bHQub3RoZXJQcm9wc1twcm9wXSA9IHByb3BzW3Byb3BdO1xuICAgIH1cbiAgfSk7XG4gIHJldHVybiByZXN1bHQ7XG59O1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gZXh0ZW5kU3hQcm9wKHByb3BzKSB7XG4gIGNvbnN0IHtcbiAgICAgIHN4OiBpblN4XG4gICAgfSA9IHByb3BzLFxuICAgIG90aGVyID0gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UocHJvcHMsIF9leGNsdWRlZCk7XG4gIGNvbnN0IHtcbiAgICBzeXN0ZW1Qcm9wcyxcbiAgICBvdGhlclByb3BzXG4gIH0gPSBzcGxpdFByb3BzKG90aGVyKTtcbiAgbGV0IGZpbmFsU3g7XG4gIGlmIChBcnJheS5pc0FycmF5KGluU3gpKSB7XG4gICAgZmluYWxTeCA9IFtzeXN0ZW1Qcm9wcywgLi4uaW5TeF07XG4gIH0gZWxzZSBpZiAodHlwZW9mIGluU3ggPT09ICdmdW5jdGlvbicpIHtcbiAgICBmaW5hbFN4ID0gKC4uLmFyZ3MpID0+IHtcbiAgICAgIGNvbnN0IHJlc3VsdCA9IGluU3goLi4uYXJncyk7XG4gICAgICBpZiAoIWlzUGxhaW5PYmplY3QocmVzdWx0KSkge1xuICAgICAgICByZXR1cm4gc3lzdGVtUHJvcHM7XG4gICAgICB9XG4gICAgICByZXR1cm4gX2V4dGVuZHMoe30sIHN5c3RlbVByb3BzLCByZXN1bHQpO1xuICAgIH07XG4gIH0gZWxzZSB7XG4gICAgZmluYWxTeCA9IF9leHRlbmRzKHt9LCBzeXN0ZW1Qcm9wcywgaW5TeCk7XG4gIH1cbiAgcmV0dXJuIF9leHRlbmRzKHt9LCBvdGhlclByb3BzLCB7XG4gICAgc3g6IGZpbmFsU3hcbiAgfSk7XG59Il0sIm5hbWVzIjpbIl9leHRlbmRzIiwiX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UiLCJfZXhjbHVkZWQiLCJpc1BsYWluT2JqZWN0IiwiZGVmYXVsdFN4Q29uZmlnIiwic3BsaXRQcm9wcyIsInByb3BzIiwiX3Byb3BzJHRoZW1lJHVuc3RhYmxlIiwiX3Byb3BzJHRoZW1lIiwicmVzdWx0Iiwic3lzdGVtUHJvcHMiLCJvdGhlclByb3BzIiwiY29uZmlnIiwidGhlbWUiLCJ1bnN0YWJsZV9zeENvbmZpZyIsIk9iamVjdCIsImtleXMiLCJmb3JFYWNoIiwicHJvcCIsImV4dGVuZFN4UHJvcCIsInN4IiwiaW5TeCIsIm90aGVyIiwiZmluYWxTeCIsIkFycmF5IiwiaXNBcnJheSIsImFyZ3MiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///5059\n')},5196:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Z: () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* unused harmony export unstable_createStyleFunctionSx */\n/* harmony import */ var _mui_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(7127);\n/* harmony import */ var _merge__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(8367);\n/* harmony import */ var _style__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(7954);\n/* harmony import */ var _breakpoints__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(5730);\n/* harmony import */ var _defaultSxConfig__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(7132);\n\n\n\n\n\nfunction objectsHaveSameKeys(...objects) {\n  const allKeys = objects.reduce((keys, object) => keys.concat(Object.keys(object)), []);\n  const union = new Set(allKeys);\n  return objects.every(object => union.size === Object.keys(object).length);\n}\nfunction callIfFn(maybeFn, arg) {\n  return typeof maybeFn === 'function' ? maybeFn(arg) : maybeFn;\n}\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nfunction unstable_createStyleFunctionSx() {\n  function getThemeValue(prop, val, theme, config) {\n    const props = {\n      [prop]: val,\n      theme\n    };\n    const options = config[prop];\n    if (!options) {\n      return {\n        [prop]: val\n      };\n    }\n    const {\n      cssProperty = prop,\n      themeKey,\n      transform,\n      style\n    } = options;\n    if (val == null) {\n      return null;\n    }\n\n    // TODO v6: remove, see https://github.com/mui/material-ui/pull/38123\n    if (themeKey === 'typography' && val === 'inherit') {\n      return {\n        [prop]: val\n      };\n    }\n    const themeMapping = (0,_style__WEBPACK_IMPORTED_MODULE_0__/* .getPath */ .DW)(theme, themeKey) || {};\n    if (style) {\n      return style(props);\n    }\n    const styleFromPropValue = propValueFinal => {\n      let value = (0,_style__WEBPACK_IMPORTED_MODULE_0__/* .getStyleValue */ .Jq)(themeMapping, transform, propValueFinal);\n      if (propValueFinal === value && typeof propValueFinal === 'string') {\n        // Haven't found value\n        value = (0,_style__WEBPACK_IMPORTED_MODULE_0__/* .getStyleValue */ .Jq)(themeMapping, transform, `${prop}${propValueFinal === 'default' ? '' : (0,_mui_utils__WEBPACK_IMPORTED_MODULE_1__/* [\"default\"] */ .Z)(propValueFinal)}`, propValueFinal);\n      }\n      if (cssProperty === false) {\n        return value;\n      }\n      return {\n        [cssProperty]: value\n      };\n    };\n    return (0,_breakpoints__WEBPACK_IMPORTED_MODULE_2__/* .handleBreakpoints */ .k9)(props, val, styleFromPropValue);\n  }\n  function styleFunctionSx(props) {\n    var _theme$unstable_sxCon;\n    const {\n      sx,\n      theme = {}\n    } = props || {};\n    if (!sx) {\n      return null; // Emotion & styled-components will neglect null\n    }\n\n    const config = (_theme$unstable_sxCon = theme.unstable_sxConfig) != null ? _theme$unstable_sxCon : _defaultSxConfig__WEBPACK_IMPORTED_MODULE_3__/* [\"default\"] */ .Z;\n\n    /*\n     * Receive `sxInput` as object or callback\n     * and then recursively check keys & values to create media query object styles.\n     * (the result will be used in `styled`)\n     */\n    function traverse(sxInput) {\n      let sxObject = sxInput;\n      if (typeof sxInput === 'function') {\n        sxObject = sxInput(theme);\n      } else if (typeof sxInput !== 'object') {\n        // value\n        return sxInput;\n      }\n      if (!sxObject) {\n        return null;\n      }\n      const emptyBreakpoints = (0,_breakpoints__WEBPACK_IMPORTED_MODULE_2__/* .createEmptyBreakpointObject */ .W8)(theme.breakpoints);\n      const breakpointsKeys = Object.keys(emptyBreakpoints);\n      let css = emptyBreakpoints;\n      Object.keys(sxObject).forEach(styleKey => {\n        const value = callIfFn(sxObject[styleKey], theme);\n        if (value !== null && value !== undefined) {\n          if (typeof value === 'object') {\n            if (config[styleKey]) {\n              css = (0,_merge__WEBPACK_IMPORTED_MODULE_4__/* [\"default\"] */ .Z)(css, getThemeValue(styleKey, value, theme, config));\n            } else {\n              const breakpointsValues = (0,_breakpoints__WEBPACK_IMPORTED_MODULE_2__/* .handleBreakpoints */ .k9)({\n                theme\n              }, value, x => ({\n                [styleKey]: x\n              }));\n              if (objectsHaveSameKeys(breakpointsValues, value)) {\n                css[styleKey] = styleFunctionSx({\n                  sx: value,\n                  theme\n                });\n              } else {\n                css = (0,_merge__WEBPACK_IMPORTED_MODULE_4__/* [\"default\"] */ .Z)(css, breakpointsValues);\n              }\n            }\n          } else {\n            css = (0,_merge__WEBPACK_IMPORTED_MODULE_4__/* [\"default\"] */ .Z)(css, getThemeValue(styleKey, value, theme, config));\n          }\n        }\n      });\n      return (0,_breakpoints__WEBPACK_IMPORTED_MODULE_2__/* .removeUnusedBreakpoints */ .L7)(breakpointsKeys, css);\n    }\n    return Array.isArray(sx) ? sx.map(traverse) : traverse(sx);\n  }\n  return styleFunctionSx;\n}\nconst styleFunctionSx = unstable_createStyleFunctionSx();\nstyleFunctionSx.filterProps = ['sx'];\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (styleFunctionSx);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///5196\n")},281:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Z: () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _createStyled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(4509);\n\nconst styled = (0,_createStyled__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .ZP)();\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (styled);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjgxLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBMEM7QUFDMUMsTUFBTUMsTUFBTSxHQUFHRCxtRUFBWSxDQUFDLENBQUM7QUFDN0IsaUVBQWVDLE1BQU0iLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9lbGRlci1ib29rcy1mZS8uL25vZGVfbW9kdWxlcy9AbXVpL3N5c3RlbS9lc20vc3R5bGVkLmpzPzY5ZTkiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGNyZWF0ZVN0eWxlZCBmcm9tICcuL2NyZWF0ZVN0eWxlZCc7XG5jb25zdCBzdHlsZWQgPSBjcmVhdGVTdHlsZWQoKTtcbmV4cG9ydCBkZWZhdWx0IHN0eWxlZDsiXSwibmFtZXMiOlsiY3JlYXRlU3R5bGVkIiwic3R5bGVkIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///281\n')},7762:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Z: () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* unused harmony export systemDefaultTheme */\n/* harmony import */ var _createTheme__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(7841);\n/* harmony import */ var _useThemeWithoutDefault__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(7609);\n\'use client\';\n\n\n\nconst systemDefaultTheme = (0,_createTheme__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)();\nfunction useTheme(defaultTheme = systemDefaultTheme) {\n  return (0,_useThemeWithoutDefault__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(defaultTheme);\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (useTheme);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNzc2Mi5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQSxZQUFZOztBQUU0QjtBQUNzQjtBQUN2RCxNQUFNRSxrQkFBa0IsR0FBR0YsaUVBQVcsQ0FBQyxDQUFDO0FBQy9DLFNBQVNHLFFBQVFBLENBQUNDLFlBQVksR0FBR0Ysa0JBQWtCLEVBQUU7RUFDbkQsT0FBT0QsNEVBQXNCLENBQUNHLFlBQVksQ0FBQztBQUM3QztBQUNBLGlFQUFlRCxRQUFRIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZWxkZXItYm9va3MtZmUvLi9ub2RlX21vZHVsZXMvQG11aS9zeXN0ZW0vZXNtL3VzZVRoZW1lLmpzPzZhODMiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBjbGllbnQnO1xuXG5pbXBvcnQgY3JlYXRlVGhlbWUgZnJvbSAnLi9jcmVhdGVUaGVtZSc7XG5pbXBvcnQgdXNlVGhlbWVXaXRob3V0RGVmYXVsdCBmcm9tICcuL3VzZVRoZW1lV2l0aG91dERlZmF1bHQnO1xuZXhwb3J0IGNvbnN0IHN5c3RlbURlZmF1bHRUaGVtZSA9IGNyZWF0ZVRoZW1lKCk7XG5mdW5jdGlvbiB1c2VUaGVtZShkZWZhdWx0VGhlbWUgPSBzeXN0ZW1EZWZhdWx0VGhlbWUpIHtcbiAgcmV0dXJuIHVzZVRoZW1lV2l0aG91dERlZmF1bHQoZGVmYXVsdFRoZW1lKTtcbn1cbmV4cG9ydCBkZWZhdWx0IHVzZVRoZW1lOyJdLCJuYW1lcyI6WyJjcmVhdGVUaGVtZSIsInVzZVRoZW1lV2l0aG91dERlZmF1bHQiLCJzeXN0ZW1EZWZhdWx0VGhlbWUiLCJ1c2VUaGVtZSIsImRlZmF1bHRUaGVtZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///7762\n')},4101:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Z: () => (/* binding */ getThemeProps)\n/* harmony export */ });\n/* harmony import */ var _mui_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(2489);\n\nfunction getThemeProps(params) {\n  const {\n    theme,\n    name,\n    props\n  } = params;\n  if (!theme || !theme.components || !theme.components[name] || !theme.components[name].defaultProps) {\n    return props;\n  }\n  return (0,_mui_utils__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(theme.components[name].defaultProps, props);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDEwMS5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQW1FO0FBQ3BELFNBQVNFLGFBQWFBLENBQUNDLE1BQU0sRUFBRTtFQUM1QyxNQUFNO0lBQ0pDLEtBQUs7SUFDTEMsSUFBSTtJQUNKQztFQUNGLENBQUMsR0FBR0gsTUFBTTtFQUNWLElBQUksQ0FBQ0MsS0FBSyxJQUFJLENBQUNBLEtBQUssQ0FBQ0csVUFBVSxJQUFJLENBQUNILEtBQUssQ0FBQ0csVUFBVSxDQUFDRixJQUFJLENBQUMsSUFBSSxDQUFDRCxLQUFLLENBQUNHLFVBQVUsQ0FBQ0YsSUFBSSxDQUFDLENBQUNHLFlBQVksRUFBRTtJQUNsRyxPQUFPRixLQUFLO0VBQ2Q7RUFDQSxPQUFPTCwrREFBWSxDQUFDRyxLQUFLLENBQUNHLFVBQVUsQ0FBQ0YsSUFBSSxDQUFDLENBQUNHLFlBQVksRUFBRUYsS0FBSyxDQUFDO0FBQ2pFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZWxkZXItYm9va3MtZmUvLi9ub2RlX21vZHVsZXMvQG11aS9zeXN0ZW0vZXNtL3VzZVRoZW1lUHJvcHMvZ2V0VGhlbWVQcm9wcy5qcz8zZGY1Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGludGVybmFsX3Jlc29sdmVQcm9wcyBhcyByZXNvbHZlUHJvcHMgfSBmcm9tICdAbXVpL3V0aWxzJztcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGdldFRoZW1lUHJvcHMocGFyYW1zKSB7XG4gIGNvbnN0IHtcbiAgICB0aGVtZSxcbiAgICBuYW1lLFxuICAgIHByb3BzXG4gIH0gPSBwYXJhbXM7XG4gIGlmICghdGhlbWUgfHwgIXRoZW1lLmNvbXBvbmVudHMgfHwgIXRoZW1lLmNvbXBvbmVudHNbbmFtZV0gfHwgIXRoZW1lLmNvbXBvbmVudHNbbmFtZV0uZGVmYXVsdFByb3BzKSB7XG4gICAgcmV0dXJuIHByb3BzO1xuICB9XG4gIHJldHVybiByZXNvbHZlUHJvcHModGhlbWUuY29tcG9uZW50c1tuYW1lXS5kZWZhdWx0UHJvcHMsIHByb3BzKTtcbn0iXSwibmFtZXMiOlsiaW50ZXJuYWxfcmVzb2x2ZVByb3BzIiwicmVzb2x2ZVByb3BzIiwiZ2V0VGhlbWVQcm9wcyIsInBhcmFtcyIsInRoZW1lIiwibmFtZSIsInByb3BzIiwiY29tcG9uZW50cyIsImRlZmF1bHRQcm9wcyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///4101\n')},7650:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Z: () => (/* binding */ useThemeProps)\n/* harmony export */ });\n/* harmony import */ var _getThemeProps__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(4101);\n/* harmony import */ var _useTheme__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(7762);\n\'use client\';\n\n\n\nfunction useThemeProps({\n  props,\n  name,\n  defaultTheme,\n  themeId\n}) {\n  let theme = (0,_useTheme__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(defaultTheme);\n  if (themeId) {\n    theme = theme[themeId] || theme;\n  }\n  const mergedProps = (0,_getThemeProps__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)({\n    theme,\n    name,\n    props\n  });\n  return mergedProps;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNzY1MC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBLFlBQVk7O0FBRWdDO0FBQ1Q7QUFDcEIsU0FBU0UsYUFBYUEsQ0FBQztFQUNwQ0MsS0FBSztFQUNMQyxJQUFJO0VBQ0pDLFlBQVk7RUFDWkM7QUFDRixDQUFDLEVBQUU7RUFDRCxJQUFJQyxLQUFLLEdBQUdOLDhEQUFRLENBQUNJLFlBQVksQ0FBQztFQUNsQyxJQUFJQyxPQUFPLEVBQUU7SUFDWEMsS0FBSyxHQUFHQSxLQUFLLENBQUNELE9BQU8sQ0FBQyxJQUFJQyxLQUFLO0VBQ2pDO0VBQ0EsTUFBTUMsV0FBVyxHQUFHUixtRUFBYSxDQUFDO0lBQ2hDTyxLQUFLO0lBQ0xILElBQUk7SUFDSkQ7RUFDRixDQUFDLENBQUM7RUFDRixPQUFPSyxXQUFXO0FBQ3BCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZWxkZXItYm9va3MtZmUvLi9ub2RlX21vZHVsZXMvQG11aS9zeXN0ZW0vZXNtL3VzZVRoZW1lUHJvcHMvdXNlVGhlbWVQcm9wcy5qcz9iMWRhIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2UgY2xpZW50JztcblxuaW1wb3J0IGdldFRoZW1lUHJvcHMgZnJvbSAnLi9nZXRUaGVtZVByb3BzJztcbmltcG9ydCB1c2VUaGVtZSBmcm9tICcuLi91c2VUaGVtZSc7XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiB1c2VUaGVtZVByb3BzKHtcbiAgcHJvcHMsXG4gIG5hbWUsXG4gIGRlZmF1bHRUaGVtZSxcbiAgdGhlbWVJZFxufSkge1xuICBsZXQgdGhlbWUgPSB1c2VUaGVtZShkZWZhdWx0VGhlbWUpO1xuICBpZiAodGhlbWVJZCkge1xuICAgIHRoZW1lID0gdGhlbWVbdGhlbWVJZF0gfHwgdGhlbWU7XG4gIH1cbiAgY29uc3QgbWVyZ2VkUHJvcHMgPSBnZXRUaGVtZVByb3BzKHtcbiAgICB0aGVtZSxcbiAgICBuYW1lLFxuICAgIHByb3BzXG4gIH0pO1xuICByZXR1cm4gbWVyZ2VkUHJvcHM7XG59Il0sIm5hbWVzIjpbImdldFRoZW1lUHJvcHMiLCJ1c2VUaGVtZSIsInVzZVRoZW1lUHJvcHMiLCJwcm9wcyIsIm5hbWUiLCJkZWZhdWx0VGhlbWUiLCJ0aGVtZUlkIiwidGhlbWUiLCJtZXJnZWRQcm9wcyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///7650\n')},7609:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Z: () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(5466);\n/* harmony import */ var _mui_styled_engine__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(7644);\n'use client';\n\n\n\nfunction isObjectEmpty(obj) {\n  return Object.keys(obj).length === 0;\n}\nfunction useTheme(defaultTheme = null) {\n  const contextTheme = react__WEBPACK_IMPORTED_MODULE_0__.useContext(_mui_styled_engine__WEBPACK_IMPORTED_MODULE_1__.T);\n  return !contextTheme || isObjectEmpty(contextTheme) ? defaultTheme : contextTheme;\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (useTheme);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNzYwOS5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBLFlBQVk7O0FBRW1CO0FBQ21CO0FBQ2xELFNBQVNFLGFBQWFBLENBQUNDLEdBQUcsRUFBRTtFQUMxQixPQUFPQyxNQUFNLENBQUNDLElBQUksQ0FBQ0YsR0FBRyxDQUFDLENBQUNHLE1BQU0sS0FBSyxDQUFDO0FBQ3RDO0FBQ0EsU0FBU0MsUUFBUUEsQ0FBQ0MsWUFBWSxHQUFHLElBQUksRUFBRTtFQUNyQyxNQUFNQyxZQUFZLEdBQUdULDZDQUFnQixDQUFDQyxpREFBWSxDQUFDO0VBQ25ELE9BQU8sQ0FBQ1EsWUFBWSxJQUFJUCxhQUFhLENBQUNPLFlBQVksQ0FBQyxHQUFHRCxZQUFZLEdBQUdDLFlBQVk7QUFDbkY7QUFDQSxpRUFBZUYsUUFBUSIsInNvdXJjZXMiOlsid2VicGFjazovL2VsZGVyLWJvb2tzLWZlLy4vbm9kZV9tb2R1bGVzL0BtdWkvc3lzdGVtL2VzbS91c2VUaGVtZVdpdGhvdXREZWZhdWx0LmpzPzhmMjQiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBjbGllbnQnO1xuXG5pbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBUaGVtZUNvbnRleHQgfSBmcm9tICdAbXVpL3N0eWxlZC1lbmdpbmUnO1xuZnVuY3Rpb24gaXNPYmplY3RFbXB0eShvYmopIHtcbiAgcmV0dXJuIE9iamVjdC5rZXlzKG9iaikubGVuZ3RoID09PSAwO1xufVxuZnVuY3Rpb24gdXNlVGhlbWUoZGVmYXVsdFRoZW1lID0gbnVsbCkge1xuICBjb25zdCBjb250ZXh0VGhlbWUgPSBSZWFjdC51c2VDb250ZXh0KFRoZW1lQ29udGV4dCk7XG4gIHJldHVybiAhY29udGV4dFRoZW1lIHx8IGlzT2JqZWN0RW1wdHkoY29udGV4dFRoZW1lKSA/IGRlZmF1bHRUaGVtZSA6IGNvbnRleHRUaGVtZTtcbn1cbmV4cG9ydCBkZWZhdWx0IHVzZVRoZW1lOyJdLCJuYW1lcyI6WyJSZWFjdCIsIlRoZW1lQ29udGV4dCIsImlzT2JqZWN0RW1wdHkiLCJvYmoiLCJPYmplY3QiLCJrZXlzIiwibGVuZ3RoIiwidXNlVGhlbWUiLCJkZWZhdWx0VGhlbWUiLCJjb250ZXh0VGhlbWUiLCJ1c2VDb250ZXh0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///7609\n")}}]);